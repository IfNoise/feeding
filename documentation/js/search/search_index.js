var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddElementDto.html",[0,0.231,1,3.089]],["body/classes/AddElementDto.html",[0,0.354,1,5.505,2,0.742,3,0.164,4,0.147,5,0.147,6,5.657,7,2.563,8,1.278,9,1.451,10,1.451,11,1.242,12,4.605,13,2.699,14,1.911,15,0.309,16,1.019,17,4.228,18,2.81,19,1.146,20,0.694,21,0.015,22,3.524,23,1.26,24,6.063,25,2.085,26,5.086,27,0.895,28,3.799,29,3.872,30,0.645,31,3.872,32,1.662,33,5.657,34,3.872,35,3.872,36,3.872,37,3.872,38,0.338,39,3.066,40,1.237,41,2.76,42,4.605,43,3.357,44,2.765,45,2.76,46,1.82,47,1.586,48,1.237,49,0.225,50,4.726,51,3.793,52,3.793,53,2.914,54,3.018,55,3.357,56,0.01,57,0.01]],["title/classes/AddFertilizerDto.html",[0,0.231,58,2.623]],["body/classes/AddFertilizerDto.html",[0,0.339,2,0.849,3,0.187,4,0.168,5,0.168,8,1.146,9,1.587,10,1.587,11,1.358,12,5.037,14,1.997,15,0.353,16,1.114,18,2.813,20,0.675,21,0.015,22,3.377,23,1.207,25,2.201,26,5.917,27,0.719,28,3.624,30,0.618,32,1.739,38,0.362,39,3.048,40,1.414,41,3.019,45,3.019,46,2.08,47,1.813,48,1.414,49,0.187,51,3.16,56,0.011,57,0.011,58,3.846,59,5.624,60,2.737,61,2.476,62,2.868,63,5.81,64,4.632,65,4.293,66,4.425,67,4.425,68,4.425,69,4.425,70,5.81,71,3.019]],["title/controllers/AppController.html",[72,1.318,73,2.83]],["body/controllers/AppController.html",[0,0.329,3,0.239,4,0.214,5,0.214,15,0.451,21,0.015,23,1.173,27,0.838,30,0.601,38,0.378,49,0.239,56,0.013,57,0.013,72,2.252,73,4.836,74,2.124,75,4.896,76,2.164,77,6.52,78,5.647,79,1.805,80,1.32,81,4.485,82,4.896,83,2.935,84,1.955,85,1.955,86,5.647]],["title/modules/AppModule.html",[87,1.555,88,2.83]],["body/modules/AppModule.html",[0,0.247,3,0.179,4,0.161,5,0.161,14,1.072,19,0.631,20,0.382,21,0.015,30,0.451,38,0.432,49,0.179,56,0.011,57,0.011,73,4.535,74,2.124,76,1.355,79,1.355,80,0.991,81,4.486,82,3.677,87,2.491,88,5.685,89,2.093,90,2.093,91,2.326,92,2.326,93,2.093,94,3.484,95,2.326,96,3.677,97,3.677,98,3.677,99,4.801,100,4.801,101,4.801,102,4.801,103,4.801,104,3.099,105,2.326,106,2.204,107,4.24,108,3.283,109,4.24,110,5.648,111,6.772,112,4.24,113,1.468,114,1.204,115,4.24,116,3.677,117,5.648,118,4.24,119,4.24,120,4.24,121,2.807,122,4.24,123,4.24,124,3.677,125,3.677,126,4.24,127,4.24,128,4.24,129,3.677,130,3.028,131,4.24,132,4.24,133,4.24,134,4.24,135,4.24,136,3.677,137,3.305,138,4.24]],["title/injectables/AppService.html",[81,2.451,139,1.217]],["body/injectables/AppService.html",[0,0.339,3,0.246,4,0.22,5,0.22,15,0.464,21,0.015,27,0.852,30,0.618,38,0.324,49,0.246,56,0.013,57,0.013,76,2.201,77,6.581,79,1.856,80,1.358,81,4.259,85,2.011,139,2.115,140,2.73,141,5.037,142,5.809,143,5.809,144,5.809]],["title/classes/Concentrate.html",[0,0.231,61,1.266]],["body/classes/Concentrate.html",[0,0.256,2,0.568,3,0.125,4,0.112,5,0.112,8,1.319,11,1.026,13,1.519,14,1.109,15,0.237,16,1.108,18,2.172,19,0.995,20,0.725,21,0.015,22,1.721,23,1.342,27,0.916,28,3.521,30,0.687,32,1.842,38,0.291,39,3.141,40,0.946,47,1.213,48,0.946,49,0.261,51,2.115,52,2.115,53,1.625,56,0.008,57,0.008,61,2.566,62,3.188,64,2.115,137,2.309,145,2.115,146,2.419,147,2.579,148,4.133,149,4.424,150,2.579,151,4.503,152,4.503,153,4.387,154,2.962,155,2.798,156,5.776,157,4.387,158,2.962,159,1.885,160,4.082,161,2.962,162,2.962,163,2.962,164,3.572,165,2.962,166,2.962,167,1.809,168,2.962,169,3.141,170,1.539,171,0.91,172,2.898,173,2.455,174,3.731,175,3.133,176,3.037,177,3.804,178,3.731,179,0.985,180,1.832]],["title/controllers/ConcentrateController.html",[72,1.318,181,2.83]],["body/controllers/ConcentrateController.html",[0,0.39,3,0.138,4,0.124,5,0.124,8,1.133,9,1.652,10,1.652,11,1.414,15,0.26,19,0.9,20,0.545,21,0.015,23,1.332,25,2.47,27,0.889,30,0.682,38,0.357,40,1.042,49,0.138,56,0.009,57,0.009,61,2.534,72,1.837,74,1.226,76,1.504,79,2.33,80,0.762,83,1.694,84,1.129,85,2.22,113,2.094,114,1.717,155,1.846,159,2.181,181,4.318,182,2.827,183,1.895,184,6.113,185,2.262,186,2.11,187,2.589,188,1.928,189,3.361,190,3.415,191,2.827,192,4.259,193,3.03,194,3.26,195,2.015,196,1.504,197,2.372,198,1.928,199,2.015,200,3.26,201,2.372,202,1.694,203,3.115,204,3.26,205,3.115,206,2.827,207,3.115,208,3.26,209,2.11,210,2.827,211,4.755,212,3.115,213,3.26,214,1.77,215,2.372,216,2.582,217,1.789,218,2.702,219,1.694,220,3.739,221,2.827,222,1.895,223,3.668,224,1.336,225,1.789,226,3.26,227,3.26,228,1.279,229,1.336,230,1.396,231,3.26,232,3.26,233,3.26,234,2.328,235,3.26,236,2.158,237,3.26,238,3.26,239,3.26]],["title/modules/ConcentrateModule.html",[87,1.555,99,2.623]],["body/modules/ConcentrateModule.html",[0,0.277,3,0.201,4,0.18,5,0.18,21,0.015,38,0.417,49,0.201,56,0.011,57,0.011,74,2.286,80,1.11,87,2.631,89,2.343,90,2.343,91,2.604,92,2.604,93,2.343,94,3.68,95,3.68,99,5.279,104,3.335,105,2.604,106,2.466,108,3.533,181,4.79,220,4.909,221,4.115,240,4.115,241,4.115,242,4.115,243,4.115,244,3.887,245,3.918,246,4.226,247,4.746,248,3.898,249,4.746,250,3.141,251,4.115,252,3.389]],["title/injectables/ConcentrateService.html",[139,1.217,220,2.451]],["body/injectables/ConcentrateService.html",[0,0.366,3,0.131,4,0.117,5,0.117,8,1.109,9,1.61,10,1.61,11,1.378,15,0.247,19,0.934,20,0.566,21,0.015,25,2.451,27,0.877,30,0.698,38,0.366,48,0.987,49,0.131,56,0.008,57,0.008,61,2.558,76,1.446,79,2.333,80,0.722,84,1.07,85,2.173,113,2.173,114,1.782,139,1.39,140,1.452,155,2.1,159,2.126,167,1.07,171,0.949,179,1.027,184,5.441,186,2.028,187,2.524,188,1.854,189,3.231,190,3.311,191,3.923,192,4.055,195,1.938,196,1.884,197,2.313,198,1.854,199,1.938,201,2.313,202,2.351,206,3.923,210,2.678,211,4.691,214,1.701,215,2.313,218,2.572,220,2.798,222,1.795,223,3.527,224,1.265,228,2.313,229,2.415,253,2.678,254,3.089,255,3.234,256,3.089,257,4.174,258,3.089,259,3.556,260,3.089,261,3.089,262,3.231,263,3.089,264,3.527,265,3.923,266,3.089,267,1.695,268,2.408,269,2.408,270,1.525,271,2.91,272,4.296,273,4.595,274,2.678,275,3.089,276,3.089,277,3.089,278,5.354,279,3.089,280,3.089,281,3.089,282,3.089]],["title/classes/CreateConcentrateDto.html",[0,0.231,192,2.451]],["body/classes/CreateConcentrateDto.html",[0,0.274,2,0.9,3,0.199,4,0.178,5,0.178,8,1.358,9,1.649,10,1.649,11,1.412,15,0.375,16,1.158,19,1.13,20,0.693,21,0.015,23,1.255,27,0.969,28,3.682,30,0.643,38,0.262,39,3.137,40,1.501,49,0.199,56,0.011,57,0.011,61,2.518,62,2.981,159,2.407,160,4.824,174,5.204,192,3.734,283,5.787,284,3.66,285,3.509,286,6.038,287,4.696,288,4.696]],["title/classes/CreateElementDto.html",[0,0.231,289,2.303]],["body/classes/CreateElementDto.html",[0,0.368,2,0.801,3,0.177,4,0.159,5,0.159,7,2.765,8,1.189,9,1.527,10,1.527,11,1.307,13,2.728,15,0.334,16,1.072,18,2.37,19,1.098,20,0.702,21,0.015,23,1.31,27,0.928,28,3.565,30,0.671,32,1.822,38,0.312,39,3.163,40,1.335,41,2.906,45,3.275,46,1.963,49,0.177,50,4.913,56,0.01,57,0.01,62,3.111,160,2.765,196,1.787,285,3.25,289,4.197,290,5.247,291,4.501,292,6.731,293,4.177,294,4.177,295,4.163,296,3.256,297,4.177,298,3.621,299,4.177,300,4.501,301,3.701,302,2.983,303,4.177]],["title/classes/CreateFertilizerDto.html",[0,0.231,304,2.451]],["body/classes/CreateFertilizerDto.html",[0,0.331,2,0.658,3,0.145,4,0.13,5,0.13,8,1.343,9,1.333,10,1.333,11,1.141,14,2.009,15,0.274,16,0.936,19,1.041,20,0.723,21,0.015,23,1.286,27,0.924,28,3.683,30,0.659,32,1.737,38,0.272,39,3.194,40,1.096,41,2.537,44,2.45,45,2.953,46,1.613,49,0.262,50,5.098,54,2.675,56,0.009,57,0.009,60,2.122,62,3.055,65,4.097,71,2.537,114,1.386,159,1.238,160,3.231,174,3.486,285,2.837,301,3.231,304,4.42,305,5.098,306,5.749,307,4.881,308,3.431,309,3.431,310,3.431,311,3.431,312,4.057,313,4.881,314,3.431,315,3.431,316,5.67,317,5.366,318,3.431,319,3.431,320,3.431,321,4.825,322,4.429,323,3.431,324,4.881,325,3.431]],["title/classes/CreateFertilizerUnitDto.html",[0,0.231,326,2.451]],["body/classes/CreateFertilizerUnitDto.html",[0,0.332,2,0.821,3,0.181,4,0.162,5,0.162,8,1.372,9,1.553,10,1.553,11,1.329,14,2.027,15,0.342,16,1.09,19,1.105,20,0.688,21,0.015,23,1.326,27,0.9,30,0.679,32,1.653,38,0.317,39,3.195,40,1.368,41,2.954,45,3.316,46,2.012,49,0.181,56,0.011,57,0.011,62,3.15,65,3.762,71,2.225,114,1.931,285,3.303,296,3.337,298,3.712,300,4.059,301,4.224,306,5.785,326,3.515,327,3.356,328,5.299,329,3.337,330,4.888,331,4.281,332,4.281,333,4.281,334,4.281]],["title/classes/CreatePumpDto.html",[0,0.231,335,2.623]],["body/classes/CreatePumpDto.html",[0,0.264,2,0.593,3,0.131,4,0.117,5,0.117,8,1.339,9,1.237,10,1.237,11,1.059,15,0.247,16,0.869,19,1.009,20,0.704,21,0.015,23,1.408,27,0.915,28,3.93,30,0.721,32,1.855,38,0.253,39,3.266,40,0.988,41,3.263,45,3.065,46,1.454,49,0.131,53,2.485,56,0.008,57,0.008,61,2.303,62,3.345,64,3.234,65,3.904,151,5.759,152,5.759,164,4.191,285,2.632,300,4.839,327,3.43,328,5.417,335,2.998,336,2.411,337,3.791,338,3.547,339,3.547,340,3.547,341,4.529,342,3.093,343,3.093,344,3.093,345,4.529,346,3.093,347,3.093,348,5.114,349,3.093,350,3.093,351,3.093,352,3.093,353,3.093,354,3.238,355,5.899]],["title/classes/CreateRecipeDto.html",[0,0.231,356,2.451]],["body/classes/CreateRecipeDto.html",[0,0.222,2,0.731,3,0.161,4,0.145,5,0.145,15,0.304,16,1.008,19,0.895,20,0.724,21,0.015,23,1.595,27,0.651,30,0.817,32,2,38,0.213,49,0.161,56,0.01,57,0.01,167,1.82,169,3.633,171,1.171,173,1.792,302,4.295,356,3.25,357,6.703,358,2.972,359,4.688,360,4.688,361,4.688,362,4.688,363,4.688,364,4.688,365,4.688,366,4.295,367,4.688,368,4.688,369,4.424,370,3.812,371,3.812,372,3.812,373,3.812,374,3.812,375,3.812,376,3.812,377,3.812,378,2.216,379,3.812,380,3.812,381,3.812,382,3.812]],["title/classes/CreateWaterDto.html",[0,0.231,383,2.451]],["body/classes/CreateWaterDto.html",[0,0.4,2,0.955,3,0.211,4,0.189,5,0.189,8,1.212,13,1.724,15,0.398,16,1.202,19,1.021,20,0.669,21,0.015,23,1.496,27,0.891,30,0.766,32,1.75,38,0.382,41,3.564,45,3.564,46,2.34,49,0.211,56,0.012,57,0.012,114,1.78,290,5.783,300,5.14,301,4.148,383,3.876,384,3.881,385,3.986,386,5.947,387,4.979,388,4.979,389,6.267,390,4.979,391,4.979,392,4.979,393,4.979,394,4.979,395,4.979,396,4.317,397,3.555]],["title/classes/Element.html",[0,0.231,13,1.372]],["body/classes/Element.html",[0,0.218,2,0.718,3,0.158,4,0.142,5,0.142,8,1.193,13,2.762,14,1.625,15,0.299,16,0.995,17,3.683,18,2.695,19,1.067,20,0.71,21,0.015,22,3.461,23,1.336,25,2.055,27,0.947,28,3.829,30,0.684,32,1.642,33,5.575,38,0.332,39,3.174,40,1.196,47,1.533,48,1.196,49,0.252,51,4.253,52,3.705,53,2.053,56,0.01,57,0.01,62,3.174,146,2.523,167,2.42,169,3.022,170,1.945,171,1.149,172,2.438,173,3.368,179,1.244,291,5.117,398,2.672,399,3.742,400,3.742,401,3.742,402,3.742,403,3.742,404,3.742,405,3.742,406,4.498,407,2.314,408,3.245,409,2.672]],["title/controllers/ElementController.html",[72,1.318,410,2.83]],["body/controllers/ElementController.html",[0,0.371,3,0.12,4,0.108,5,0.108,8,1.069,9,1.544,10,1.544,11,1.322,13,2.704,14,1.944,15,0.226,19,0.842,20,0.51,21,0.015,23,1.174,25,2.318,27,0.956,30,0.602,38,0.337,40,0.906,49,0.12,56,0.008,57,0.008,72,1.693,74,1.066,76,1.356,79,2.214,80,0.663,83,1.473,84,1.47,85,1.957,113,1.957,114,1.605,155,1.665,159,2.039,183,1.647,185,2.085,186,2.281,188,2.085,189,3.634,190,3.147,193,2.329,195,1.818,196,1.626,197,2.217,198,1.739,199,1.818,201,1.665,209,1.903,214,1.596,215,2.375,216,2.792,217,1.555,218,2.768,219,1.473,224,1.161,225,1.555,228,1.112,229,1.161,230,1.818,246,2.792,259,3.344,270,1.399,271,2.512,289,3.518,397,2.024,410,4.036,411,2.457,412,2.834,413,2.953,414,3.582,415,2.457,416,3.771,417,2.834,418,2.834,419,3.031,420,5.238,421,2.457,422,5.288,423,4.245,424,2.834,425,2.457,426,4.245,427,2.834,428,2.095,429,2.457,430,2.834,431,2.834,432,2.209,433,2.209,434,3.495,435,2.457,436,1.876,437,2.834,438,2.834,439,2.834,440,4.245,441,4.901,442,2.834,443,4.413,444,2.834,445,2.329,446,2.095,447,1.876,448,2.834,449,2.834,450,2.834]],["title/injectables/ElementService.html",[139,1.217,434,2.451]],["body/injectables/ElementService.html",[0,0.229,3,0.08,4,0.072,5,0.072,8,0.946,9,1.236,10,1.236,11,1.058,13,2.699,14,1.99,15,0.151,16,0.592,17,1.169,18,1.162,19,0.797,20,0.483,21,0.015,25,2.333,27,0.904,30,0.601,32,1.213,38,0.35,48,0.604,49,0.08,53,1.037,56,0.006,57,0.006,71,2.036,76,0.987,79,2.005,80,0.442,84,1.727,85,1.727,113,1.854,114,1.521,139,0.949,140,0.888,147,2.234,148,1.91,150,2.234,159,1.632,171,0.58,179,2.253,185,1.265,186,1.756,188,1.265,189,3.231,190,3.085,195,1.323,196,2.194,197,1.775,198,1.265,199,1.323,201,1.212,214,1.162,215,2.101,218,2.521,224,0.774,228,1.212,229,1.265,230,1.323,246,2.938,255,3.1,259,3.098,264,2.408,265,2.678,267,1.037,270,2.463,271,2.463,272,1.91,273,1.473,289,2.63,291,1.35,397,1.35,409,1.35,413,2.4,414,3.389,415,1.639,416,3.339,419,2.206,420,4.961,421,2.678,422,5.104,425,2.678,429,1.639,434,1.91,436,1.251,445,3.716,446,3.344,451,1.639,452,2.798,453,1.473,454,3.923,455,3.089,456,3.054,457,1.89,458,2.995,459,1.89,460,2.408,461,3.527,462,3.089,463,1.89,464,1.89,465,1.89,466,1.89,467,0.933,468,1.169,469,3.089,470,1.639,471,1.35,472,1.639,473,2.423,474,1.89,475,3.302,476,1.89,477,2.045,478,1.89,479,1.473,480,1.639,481,3.525,482,3.918,483,3.443,484,3.089,485,1.89,486,1.89,487,4.525,488,3.918,489,3.918,490,3.923,491,3.918,492,3.089,493,1.795,494,1.89,495,2.408,496,1.639,497,1.89,498,1.795,499,1.89,500,1.89,501,1.89,502,1.89,503,1.639,504,2.678,505,1.639,506,2.408,507,2.678,508,1.639,509,1.639,510,2.678,511,3.089,512,1.89,513,2.678,514,3.918,515,1.639,516,1.639,517,1.89,518,1.639,519,3.918,520,1.89,521,3.089,522,1.89,523,1.89,524,1.89,525,1.89,526,1.89,527,1.89,528,1.473]],["title/classes/Fertilizer.html",[0,0.231,14,1.002]],["body/classes/Fertilizer.html",[0,0.232,2,0.761,3,0.168,4,0.151,5,0.151,8,1.085,13,2.388,14,1.552,15,0.317,16,1.036,18,2.031,19,0.914,20,0.72,21,0.015,23,1.539,27,0.917,30,0.788,32,1.879,38,0.342,48,1.268,49,0.26,56,0.01,57,0.01,146,2.119,147,3.031,148,3.798,150,3.031,167,2.283,169,3.603,170,2.062,171,1.219,172,2.539,173,2.886,179,1.32,306,5.138,317,3.441,321,4.787,322,3.093,369,3.831,378,2.306,407,3.341,413,2.753,458,2.627,467,3.512,529,2.834,530,3.968,531,3.093,532,4.564,533,3.968,534,3.968,535,3.968,536,3.968,537,3.968,538,3.968,539,3.968,540,3.968,541,3.093,542,3.968,543,3.968,544,2.834,545,3.441]],["title/controllers/FertilizerController.html",[72,1.318,248,2.303]],["body/controllers/FertilizerController.html",[0,0.382,3,0.13,4,0.116,5,0.116,8,1.105,9,1.605,10,1.605,11,1.374,14,1.964,15,0.245,19,0.875,20,0.53,21,0.015,23,1.221,25,2.357,27,0.954,30,0.625,38,0.349,40,0.98,49,0.13,56,0.008,57,0.008,58,4.683,61,2.401,72,1.954,74,1.154,76,1.439,79,2.261,80,0.717,83,1.594,84,1.062,85,2.034,113,2.034,114,1.669,149,4.474,155,1.766,159,2.119,185,2.185,187,1.928,193,2.926,196,1.439,197,2.305,198,1.844,201,1.766,209,2.018,214,1.693,215,2.305,216,2.926,217,1.683,218,2.821,219,1.594,224,1.257,225,1.683,228,1.203,229,1.257,230,1.314,245,2.9,248,3.415,252,2.191,259,2.222,354,1.514,419,3.215,420,5.136,428,2.222,441,3.903,546,2.66,547,4.624,548,4.624,549,3.808,550,2.66,551,3.068,552,6.514,553,4.502,554,2.66,555,3.068,556,5.875,557,2.66,558,4.502,559,3.068,560,2.66,561,3.676,562,4.502,563,3.068,564,2.66,565,3.215,566,3.068,567,3.068,568,3.068,569,2.66,570,3.068,571,3.068,572,5.333,573,3.068,574,2.66,575,3.068]],["title/controllers/FertilizerController-1.html",[72,1.103,248,1.927,354,1.637]],["body/controllers/FertilizerController-1.html",[0,0.366,3,0.116,4,0.104,5,0.104,8,1.053,9,1.517,10,1.517,11,1.298,14,2.026,15,0.219,19,0.827,20,0.501,21,0.015,23,1.239,25,2.371,27,0.776,30,0.635,38,0.332,40,0.874,49,0.116,56,0.008,57,0.008,72,1.657,74,1.029,76,1.321,79,2.27,80,0.967,83,1.422,84,0.947,85,2.065,113,1.923,114,1.577,149,4.703,155,1.622,159,2.003,179,0.91,183,1.59,185,2.041,186,1.227,187,2.378,188,1.694,190,1.692,193,2.734,195,1.771,196,2.142,197,2.179,198,1.694,199,2.134,201,2.179,203,2.737,205,2.737,207,2.737,209,1.853,212,2.737,214,1.555,215,1.955,216,2.268,217,1.501,218,2.554,219,2.149,225,1.501,228,1.073,229,1.121,230,1.172,234,1.954,236,1.811,245,2.741,248,3.228,252,1.954,271,3.214,304,3.082,414,3.663,428,2.46,445,2.734,446,2.46,481,3.271,483,3.44,493,3.465,498,3.465,549,3.559,561,3.099,574,2.373,576,2.373,577,3.585,578,3.585,579,2.373,580,2.736,581,5.17,582,2.373,583,2.736,584,2.736,585,5.553,586,2.373,587,3.676,588,2.736,589,4.321,590,2.373,591,2.736,592,2.373,593,6.271,594,2.736,595,2.736,596,2.736,597,2.736,598,5.962,599,4.134,600,2.736,601,4.134,602,2.736,603,2.133,604,2.736,605,2.736]],["title/modules/FertilizerModule.html",[87,1.555,100,2.623]],["body/modules/FertilizerModule.html",[0,0.277,3,0.201,4,0.18,5,0.18,21,0.015,38,0.417,49,0.201,56,0.011,57,0.011,74,2.286,80,1.11,87,2.631,89,2.343,90,2.343,91,2.604,92,2.604,93,2.343,94,3.68,95,3.68,100,5.279,104,3.335,105,2.604,106,2.466,108,3.533,244,3.887,245,3.918,246,4.226,248,3.898,250,3.141,251,4.115,252,3.389,410,4.79,434,4.909,435,4.115,606,4.115,607,4.746,608,4.115,609,4.115,610,4.746,611,4.746]],["title/injectables/FertilizerService.html",[139,1.217,245,1.956]],["body/injectables/FertilizerService.html",[0,0.314,3,0.093,4,0.083,5,0.083,8,1.012,9,1.347,10,1.347,11,1.153,14,1.891,15,0.278,16,0.667,18,1.308,19,0.853,20,0.516,21,0.015,25,2.215,27,0.903,30,0.639,38,0.335,48,0.7,49,0.093,56,0.006,57,0.006,58,4.123,61,2.53,71,1.808,76,1.112,79,2.101,80,0.512,84,1.862,85,2.222,113,1.983,114,1.626,139,1.069,140,1.029,147,2.137,148,2.152,149,4.352,150,2.137,155,1.365,159,1.778,171,0.673,172,1.635,178,3.521,179,2.232,185,1.425,187,1.49,196,1.83,197,1.934,201,1.365,214,1.308,215,2.579,218,2.632,224,0.897,228,1.934,229,1.425,230,1.49,245,2.434,246,3.141,255,3.293,257,3.843,259,3.246,264,2.712,267,1.202,268,1.708,269,1.708,270,2.655,271,1.718,354,1.081,414,3.505,419,2.485,420,4.792,445,2.705,446,2.434,452,3.091,453,1.708,456,3.374,458,2.303,460,2.712,461,2.712,467,1.081,468,1.355,470,1.899,479,1.708,481,3.802,483,1.909,490,1.899,547,3.753,548,3.753,549,3.091,550,1.899,552,5.818,554,3.017,557,1.899,560,1.899,561,3.237,564,1.899,565,2.485,603,1.708,612,1.899,613,3.48,614,2.191,615,2.191,616,2.191,617,2.191,618,2.191,619,2.191,620,3.48,621,4.93,622,3.017,623,2.191,624,4.93,625,3.48,626,2.191,627,4.329,628,4.329,629,2.191,630,2.191,631,2.191,632,2.191,633,2.191,634,2.191,635,2.191,636,2.191,637,2.191,638,2.191,639,4.93,640,2.191,641,2.191,642,2.191,643,2.191,644,2.191,645,2.191,646,1.899,647,3.017,648,1.899,649,1.899,650,1.899,651,1.899,652,1.899,653,1.899,654,1.899,655,2.191,656,2.191,657,2.191,658,1.899,659,1.899,660,2.191]],["title/injectables/FertilizerService-1.html",[139,1.018,245,1.637,354,1.637]],["body/injectables/FertilizerService-1.html",[0,0.366,3,0.116,4,0.104,5,0.104,8,1.108,9,1.517,10,1.517,11,1.298,14,2.013,15,0.219,19,0.888,20,0.538,21,0.015,25,2.477,27,0.849,30,0.667,38,0.363,48,0.874,49,0.116,56,0.008,57,0.008,76,1.321,79,2.27,80,0.967,84,0.947,85,2.065,113,2.065,114,1.693,139,1.27,140,1.286,146,1.622,149,4.151,155,1.622,159,2.003,167,0.947,171,0.84,179,1.847,185,1.694,187,2.378,188,1.694,195,1.771,196,2.193,197,2.179,198,1.694,199,1.771,201,2.179,202,2.149,209,1.853,214,1.555,215,2.179,218,2.46,222,1.59,224,1.121,228,2.179,229,1.694,230,1.172,245,2.943,255,3.44,259,3.452,262,2.953,267,1.501,270,1.351,271,2.041,272,3.082,304,4.027,414,3.663,428,2.041,445,2.734,446,2.943,453,2.133,456,3.885,458,1.811,479,2.133,481,3.047,483,3.44,493,2.896,498,2.896,528,3.885,549,3.559,561,3.566,565,2.953,577,4.321,578,3.585,579,2.373,582,3.585,590,2.373,661,2.373,662,2.736,663,2.736,664,2.736,665,2.736,666,2.736,667,2.736,668,2.736,669,2.736,670,2.736,671,2.736,672,2.736,673,2.736,674,4.983,675,4.983,676,4.134,677,1.954,678,2.737,679,4.983,680,2.736]],["title/classes/FertilizerUnit.html",[0,0.231,681,2.059]],["body/classes/FertilizerUnit.html",[0,0.333,2,0.664,3,0.146,4,0.131,5,0.131,8,1.098,11,1.149,15,0.277,16,0.942,17,3.844,19,0.925,20,0.703,21,0.015,22,4.236,23,1.416,27,0.844,30,0.726,32,1.704,38,0.318,47,1.419,48,1.107,49,0.308,56,0.009,57,0.009,61,1.57,146,2.438,147,2.819,150,2.819,164,2.142,167,2.428,169,3.706,170,1.8,171,1.064,172,2.921,173,3.204,179,1.899,312,4.078,337,2.921,338,2.292,339,2.292,340,2.292,369,3.612,378,2.013,385,2.013,413,1.552,467,3.365,532,4.344,681,2.968,682,3.846,683,2.142,684,3.78,685,3.24,686,3.644,687,3.24,688,3.463,689,3.463,690,3.463,691,5.116,692,3.463,693,3.78,694,3.463,695,3.463,696,3.133,697,2.473,698,3.039,699,2.473,700,2.292,701,2.699,702,2.699,703,2.473,704,2.473,705,2.142,706,2.473,707,2.142]],["title/controllers/FertilizerUnitController.html",[72,1.318,708,2.83]],["body/controllers/FertilizerUnitController.html",[0,0.308,3,0.127,4,0.114,5,0.114,8,1.097,9,1.591,10,1.591,11,1.362,14,2.038,15,0.241,19,0.867,20,0.525,21,0.015,23,1.291,25,2.455,27,0.872,30,0.661,38,0.325,40,0.963,49,0.127,56,0.008,57,0.008,72,1.755,74,1.133,76,1.42,79,2.289,80,0.705,83,1.566,84,1.044,85,2.151,113,2.017,114,1.654,121,4.302,155,1.743,159,2.101,167,1.539,183,1.752,185,1.82,187,2.495,188,1.82,193,2.438,195,1.903,196,1.42,197,2.285,198,1.82,199,1.903,201,2.285,202,1.566,203,2.941,205,2.941,207,2.941,209,1.992,212,1.995,214,1.671,215,1.743,216,2.438,217,1.653,218,2.55,219,1.566,224,1.235,225,1.653,234,2.152,236,1.995,271,2.194,326,3.603,327,3.208,330,4.912,428,2.194,432,2.349,433,4.842,446,2.194,447,2.941,708,3.173,709,2.613,710,6.106,711,3.853,712,3.853,713,4.577,714,2.613,715,2.613,716,3.014,717,2.613,718,3.014,719,3.014,720,3.014,721,2.613,722,4.661,723,3.014,724,3.014,725,3.264,726,2.613,727,2.613,728,3.014,729,2.613,730,3.853,731,3.853,732,3.014,733,3.014,734,3.014,735,3.014,736,3.014,737,3.014,738,3.014]],["title/modules/FertilizerUnitModule.html",[87,1.555,101,2.623]],["body/modules/FertilizerUnitModule.html",[0,0.292,3,0.212,4,0.19,5,0.19,14,1.591,21,0.015,38,0.423,49,0.212,56,0.012,57,0.012,74,2.367,80,1.172,87,2.699,89,2.474,90,2.474,91,2.75,92,2.75,93,2.474,94,3.774,95,2.75,101,5.237,104,3.453,105,2.75,106,2.605,108,3.658,121,3.318,244,3.943,250,3.318,327,2.474,708,4.913,725,4.692,726,4.346,739,4.346,740,5.012,741,4.346,742,4.692,743,5.012,744,4.913,745,5.012,746,5.012,747,4.346]],["title/injectables/FertilizerUnitService.html",[139,1.217,725,2.451]],["body/injectables/FertilizerUnitService.html",[0,0.376,3,0.125,4,0.112,5,0.112,8,1.139,9,1.574,10,1.574,11,1.347,14,2.019,15,0.235,19,0.916,20,0.555,21,0.015,25,2.434,27,0.867,30,0.686,38,0.321,48,0.941,49,0.125,56,0.008,57,0.008,76,1.396,79,2.309,80,0.689,84,1.02,85,2.131,113,2.131,114,1.748,121,4.416,139,1.342,140,1.385,146,1.714,155,1.714,159,2.078,167,1.02,171,0.905,179,0.98,185,1.79,187,2.467,188,1.79,195,1.871,196,1.841,197,2.26,198,1.79,199,1.871,201,2.26,202,2.271,209,1.959,214,1.643,215,2.26,218,2.529,228,2.26,229,1.79,230,1.262,255,3.536,259,3.516,262,3.12,267,1.616,270,1.454,326,3.563,327,3.294,330,4.878,414,3.711,428,2.157,677,2.104,678,1.95,681,2.707,682,1.616,707,1.822,710,5.589,711,4.516,712,3.789,713,4.516,714,2.554,717,3.789,721,2.554,722,4.073,725,3.806,748,2.554,749,2.946,750,2.946,751,4.516,752,2.946,753,2.946,754,2.946,755,2.946,756,2.946,757,2.296,758,2.554,759,2.946,760,4.369,761,2.946,762,2.946,763,2.946,764,2.946]],["title/interfaces/IElement.html",[180,2.451,765,2.83]],["body/interfaces/IElement.html",[0,0.323,3,0.234,4,0.21,5,0.21,13,2.586,15,0.442,16,1.283,18,2.809,20,0.603,21,0.015,27,0.89,32,1.889,49,0.283,56,0.012,57,0.012,147,2.732,150,2.732,180,3.423,385,3.217,413,2.481,686,2.876,765,5.135,766,5.535,767,4.315]],["title/classes/IdParamDto.html",[0,0.231,587,2.623]],["body/classes/IdParamDto.html",[0,0.402,2,1.114,3,0.246,4,0.22,5,0.22,15,0.464,16,1.321,20,0.524,21,0.015,23,1.207,25,2.346,27,0.852,30,0.618,38,0.324,42,5.971,45,3.579,46,2.73,49,0.246,56,0.013,57,0.013,587,4.558,768,5.037,769,5.809,770,5.809]],["title/classes/Ion.html",[0,0.231,696,2.174]],["body/classes/Ion.html",[0,0.294,2,0.966,3,0.213,4,0.191,5,0.191,15,0.402,16,1.21,18,2.592,20,0.652,21,0.015,23,1.432,27,0.781,30,0.734,32,1.757,38,0.352,44,4.507,48,1.609,49,0.292,56,0.012,57,0.012,71,3.28,146,2.476,167,2.63,169,3.397,170,2.617,171,1.547,172,2.966,173,3.24,179,1.674,295,4.263,378,4.007,696,3.782,771,3.596,772,5.374,773,5.035,774,5.035,775,5.035,776,4.366,777,3.596,778,4.366]],["title/injectables/LoggerMiddleware.html",[130,2.83,139,1.217]],["body/injectables/LoggerMiddleware.html",[0,0.279,3,0.202,4,0.182,5,0.182,15,0.382,16,1.172,19,0.713,20,0.432,21,0.015,30,0.651,38,0.341,49,0.202,56,0.011,57,0.011,76,1.953,79,1.529,80,1.119,84,2.332,113,1.657,114,1.359,116,5.3,130,4.365,137,3.731,139,1.877,140,2.249,179,2.36,196,1.953,246,3.893,270,3.324,467,2.363,468,2.96,779,4.15,780,6.112,781,6.112,782,7.095,783,7.095,784,7.095,785,7.095,786,7.095,787,4.786,788,6.112,789,6.112,790,4.786,791,6.112,792,4.15,793,4.786,794,6.112,795,5.3,796,6.112,797,4.786,798,6.112,799,4.786,800,4.786,801,4.786]],["title/classes/Pump.html",[0,0.231,337,1.862]],["body/classes/Pump.html",[0,0.33,2,0.652,3,0.144,4,0.129,5,0.129,8,1.089,11,1.134,15,0.272,16,0.93,17,4.03,19,0.918,20,0.707,21,0.015,22,4.217,23,1.449,27,0.839,30,0.759,32,1.811,38,0.315,47,1.393,48,1.086,49,0.307,56,0.009,57,0.009,61,2.082,146,2.418,147,2.791,150,2.791,164,3.496,167,2.579,169,3.699,170,1.767,171,1.044,172,2.897,173,3.184,179,1.88,312,3.463,337,2.897,338,3.742,339,3.742,340,3.742,369,1.976,378,3.788,385,1.976,413,1.524,467,3.043,532,2.25,681,2.52,682,3.981,683,2.102,684,2.25,685,2.394,686,3.203,687,2.394,691,4.805,693,3.21,696,3.101,697,2.428,698,2.999,699,2.428,700,2.25,701,2.65,702,2.65,703,2.428,704,2.428,705,2.102,706,2.428,707,2.102,802,3.4,803,3.4,804,3.4,805,3.4,806,3.4,807,3.4,808,3.4,809,3.4]],["title/controllers/PumpController.html",[72,1.318,744,2.83]],["body/controllers/PumpController.html",[0,0.377,3,0.126,4,0.113,5,0.113,8,1.091,14,1.916,15,0.237,19,0.862,20,0.522,21,0.015,23,1.203,25,2.484,27,0.962,30,0.616,38,0.373,40,0.95,49,0.126,56,0.008,57,0.008,72,1.742,74,1.118,76,1.406,79,2.196,80,1.224,83,1.545,84,1.03,85,2.004,113,2.004,114,1.644,155,1.726,167,1.523,183,1.728,185,2.145,188,2.145,193,2.414,195,1.884,196,1.406,197,2.27,198,1.802,199,1.884,201,1.726,202,1.545,209,1.972,214,1.654,215,2.27,216,2.873,217,1.631,218,2.801,219,1.545,222,1.728,224,1.218,225,1.631,228,1.167,229,1.218,230,1.273,327,3.049,330,4.656,335,4.645,337,3.604,432,2.318,433,4.815,684,4.43,715,2.578,729,2.578,730,3.815,731,3.815,742,3.579,744,4.133,747,2.578,810,2.578,811,4.4,812,5.237,813,5.237,814,5.237,815,2.973,816,2.973,817,3.815,818,2.973,819,6.478,820,4.4,821,2.973,822,4.4,823,2.973,824,2.973,825,4.645,826,2.973,827,2.973,828,3.815,829,3.815,830,2.973,831,5.787,832,2.973,833,5.237,834,2.973,835,2.973,836,2.973,837,2.973]],["title/injectables/PumpService.html",[139,1.217,742,2.451]],["body/injectables/PumpService.html",[0,0.292,3,0.07,4,0.063,5,0.063,8,0.94,9,1.138,10,1.138,11,0.974,13,0.572,14,1.886,15,0.132,16,0.53,18,0.621,19,0.793,20,0.48,21,0.015,25,2.175,27,0.893,30,0.594,38,0.297,48,0.528,49,0.07,53,1.516,56,0.005,57,0.005,61,1.602,71,1.436,76,0.883,79,2.052,80,0.646,84,1.736,85,2.008,113,1.843,114,1.512,139,0.849,140,0.776,146,1.967,147,1.759,150,1.759,155,1.084,159,1.503,171,0.507,178,1.974,179,2.135,185,1.132,186,1.239,187,1.184,188,1.132,190,3.1,195,1.184,196,2.199,197,1.634,198,1.132,199,1.526,201,1.634,209,1.239,214,1.039,215,1.967,218,2.563,219,2.165,224,0.677,228,1.634,229,1.132,230,1.526,246,2.75,255,3.689,257,3.247,259,3.107,267,0.906,268,1.288,269,1.288,270,2.475,271,3.037,272,3.703,273,3.614,274,1.432,327,2.863,330,4.692,335,2.757,337,3.633,354,1.364,366,2.544,413,1.239,414,3.396,428,1.364,445,2.92,446,3.396,447,3.318,452,2.544,460,2.154,461,2.154,467,0.815,468,1.021,481,3.453,483,3.584,493,2.694,495,1.288,498,2.694,603,3.614,622,1.432,646,1.432,647,2.396,648,1.432,649,1.432,650,1.432,651,1.432,652,1.432,653,1.432,654,1.432,658,1.432,659,1.432,678,1.093,681,3.494,682,0.906,684,3.318,686,1.436,700,1.829,707,3.1,742,2.867,751,3.612,757,1.288,758,1.432,817,2.396,819,5.752,825,3.694,828,5.458,829,1.432,838,1.432,839,1.652,840,2.764,841,3.563,842,1.652,843,1.652,844,2.764,845,2.764,846,2.764,847,2.764,848,1.652,849,2.764,850,1.652,851,5.013,852,2.764,853,1.652,854,5.013,855,2.764,856,1.652,857,2.764,858,1.652,859,1.652,860,2.764,861,1.652,862,1.652,863,4.636,864,1.652,865,1.652,866,2.764,867,1.652,868,1.652,869,1.652,870,1.652,871,4.166,872,4.636,873,2.764,874,2.764,875,3.563,876,3.563,877,1.652,878,1.652,879,1.652,880,1.652,881,1.652,882,1.652,883,2.764,884,1.652,885,1.652,886,1.652,887,1.652,888,1.652,889,1.652,890,1.652,891,3.563,892,3.563,893,1.652,894,1.652,895,1.652,896,1.652,897,1.652,898,1.652,899,1.652,900,1.652]],["title/classes/Recipe.html",[0,0.231,685,1.956]],["body/classes/Recipe.html",[0,0.22,2,0.722,3,0.159,4,0.143,5,0.143,15,0.301,16,0.999,19,0.89,20,0.725,21,0.015,23,1.592,27,0.645,30,0.815,32,1.999,38,0.291,48,1.204,49,0.253,56,0.01,57,0.01,146,2.045,167,1.805,169,3.626,170,1.958,171,1.157,172,2.45,173,1.771,179,1.253,302,4.268,359,4.659,360,4.659,361,4.659,362,4.659,363,4.659,364,4.659,365,4.659,366,4.268,367,4.659,368,4.659,369,4.415,378,2.19,685,2.95,901,2.69,902,3.767,903,3.767,904,3.767,905,3.767,906,3.767,907,3.767,908,3.767,909,3.767,910,3.767,911,3.767,912,3.767,913,3.767,914,2.69,915,3.267,916,3.267]],["title/controllers/RecipeController.html",[72,1.318,917,2.83]],["body/controllers/RecipeController.html",[0,0.368,3,0.117,4,0.105,5,0.105,8,1.059,9,1.527,10,1.527,11,1.307,15,0.221,19,0.832,20,0.504,21,0.015,23,1.246,25,2.411,27,0.852,30,0.638,38,0.351,40,0.885,49,0.117,56,0.008,57,0.008,72,1.67,74,1.042,76,1.334,79,2.277,80,0.976,83,1.44,84,0.959,85,2.076,113,1.935,114,1.587,155,1.637,159,2.016,183,1.61,185,2.057,187,2.393,188,1.71,193,2.754,195,1.787,196,2.089,197,2.192,198,1.71,199,1.787,201,2.192,202,1.44,203,2.762,205,2.762,207,2.762,209,1.871,212,2.762,214,1.569,215,2.352,216,2.29,217,1.52,218,2.565,219,1.44,222,1.61,224,1.135,225,1.52,228,1.087,229,1.135,230,1.186,234,1.978,236,1.834,271,2.959,285,1.61,356,4.043,414,3.671,428,2.478,446,2.759,447,3.968,481,3.289,483,3.289,493,3.484,498,3.484,581,5.198,685,3.929,917,3.991,918,2.402,919,6.083,920,3.618,921,3.618,922,4.353,923,2.402,924,2.77,925,2.402,926,2.77,927,2.77,928,2.77,929,2.402,930,4.557,931,2.77,932,3.456,933,2.402,934,2.77,935,2.77,936,3.253,937,2.77,938,2.77,939,2.77,940,2.77,941,5.588,942,5.588,943,2.77,944,2.77,945,2.77,946,2.77,947,2.77,948,2.77,949,1.834,950,2.77,951,2.77,952,2.402]],["title/modules/RecipeModule.html",[87,1.555,102,2.623]],["body/modules/RecipeModule.html",[0,0.309,3,0.224,4,0.201,5,0.201,21,0.015,38,0.41,49,0.224,56,0.012,57,0.012,74,2.45,80,1.239,87,2.767,89,2.615,90,2.615,91,2.907,92,2.907,93,2.615,94,3.87,95,2.907,102,5.208,104,3.574,105,2.907,106,2.753,108,3.786,244,3.997,250,3.507,917,5.037,932,4.756,933,4.594,953,4.594,954,5.298,955,4.594,956,5.298,957,5.298]],["title/injectables/RecipeService.html",[139,1.217,932,2.451]],["body/injectables/RecipeService.html",[0,0.369,3,0.118,4,0.106,5,0.106,8,1.116,9,1.532,10,1.532,11,1.312,15,0.223,19,0.895,20,0.542,21,0.015,25,2.483,27,0.854,30,0.672,38,0.352,48,0.892,49,0.118,56,0.008,57,0.008,76,1.341,79,2.281,80,0.653,84,0.966,85,2.082,113,2.082,114,1.708,139,1.289,140,1.312,146,1.646,155,1.646,159,2.023,167,0.966,171,0.857,179,0.928,185,1.719,187,2.402,188,1.719,195,1.797,196,2.205,197,2.201,198,1.719,199,1.797,201,2.201,202,2.181,209,1.881,214,1.578,215,2.201,218,2.479,222,1.622,224,1.143,228,2.201,229,1.719,230,1.195,255,3.466,259,3.47,262,2.997,267,1.531,270,1.378,272,3.719,285,1.622,356,3.907,414,3.676,428,2.072,481,3.299,483,3.299,493,3.495,498,3.495,677,1.993,678,1.847,685,3.932,919,5.683,920,3.639,921,3.639,922,4.373,923,3.639,925,3.639,929,2.42,930,4.567,932,3.719,936,3.271,949,1.847,952,2.42,958,2.42,959,2.791,960,2.791,961,5.043,962,2.791,963,2.791,964,2.791,965,2.791,966,2.791,967,2.791,968,2.791,969,2.791,970,2.791,971,2.791,972,6.014,973,6.014,974,2.791,975,4.197,976,2.791,977,2.791,978,2.791]],["title/modules/SchemasModule.html",[87,1.555,244,2.059]],["body/modules/SchemasModule.html",[0,0.23,3,0.167,4,0.15,5,0.15,13,2.562,14,1.896,19,1.102,21,0.015,38,0.418,49,0.167,56,0.01,57,0.01,61,2.364,80,0.923,87,2.402,89,1.949,90,1.949,91,2.166,92,2.166,93,1.949,94,2.953,95,3.36,104,2.953,105,2.166,106,2.051,108,2.294,146,2.903,171,1.212,175,3.843,244,4.012,337,3.477,407,3.328,506,3.077,541,3.077,544,3.843,681,3.845,685,3.652,687,3.652,696,4.059,697,2.819,698,3.328,705,3.328,757,3.077,777,3.843,914,3.843,979,3.423,980,3.423,981,3.947,982,5.382,983,3.947,984,3.947,985,3.843,986,3.947,987,3.947,988,3.947,989,3.947,990,3.947,991,3.947,992,3.947,993,3.947,994,3.947,995,3.947,996,3.947]],["title/classes/Solution.html",[0,0.231,686,2.059]],["body/classes/Solution.html",[0,0.338,2,0.682,3,0.15,4,0.135,5,0.135,8,0.885,11,1.355,15,0.284,16,0.96,17,3.89,19,0.746,20,0.705,21,0.015,22,4.106,23,1.377,27,0.779,30,0.706,32,1.807,38,0.323,47,1.457,48,1.137,49,0.31,56,0.009,57,0.009,61,1.6,146,2.467,147,3.272,150,3.272,164,2.2,167,2.381,169,3.739,170,1.849,171,1.093,172,2.956,173,3.232,179,1.927,312,4.138,337,2.723,338,2.354,339,2.354,340,2.354,369,2.91,385,3.368,413,2.598,467,3.395,531,2.773,532,3.836,681,2.602,682,3.773,683,2.2,684,2.354,685,2.472,686,3.445,687,2.472,691,4.517,693,3.314,696,3.179,697,2.54,698,3.097,699,2.54,700,2.354,701,3.903,702,4.517,703,2.54,704,2.54,705,2.2,706,2.54,707,2.2,997,3.557,998,3.557,999,3.557,1000,3.557,1001,3.557]],["title/classes/UpdateConcentrateDto.html",[0,0.231,211,2.623]],["body/classes/UpdateConcentrateDto.html",[0,0.334,2,1.097,3,0.242,4,0.217,5,0.217,8,1.01,9,1.864,10,1.864,11,1.595,21,0.015,38,0.38,47,2.343,49,0.242,56,0.013,57,0.013,61,2.18,176,3.966,186,2.564,192,3.537,211,4.516,223,4.458,284,4.458,949,4.516,1002,4.458,1003,6.823,1004,3.537,1005,3.324]],["title/classes/UpdateElementDto.html",[0,0.231,416,2.059]],["body/classes/UpdateElementDto.html",[0,0.396,2,1.086,3,0.239,4,0.215,5,0.215,7,3.747,15,0.452,16,1.3,18,2.73,20,0.51,21,0.015,23,1.176,30,0.603,32,1.649,38,0.378,41,3.524,43,4.909,44,4.043,46,2.661,49,0.239,54,4.413,55,4.909,56,0.013,57,0.013,80,1.324,114,1.926,416,3.524,1006,5.286,1007,5.661,1008,5.661]],["title/classes/UpdateElementDto-1.html",[0,0.193,354,1.637,416,1.723]],["body/classes/UpdateElementDto-1.html",[0,0.346,2,1.138,3,0.251,4,0.225,5,0.225,7,3.927,21,0.015,38,0.389,47,2.43,49,0.251,56,0.013,57,0.013,176,4.052,186,2.659,289,3.448,416,3.624,436,3.927,1004,3.669,1005,3.448,1009,4.625,1010,6.973]],["title/classes/UpdateFertilizerDto.html",[0,0.231,561,2.059]],["body/classes/UpdateFertilizerDto.html",[0,0.309,2,1.016,3,0.224,4,0.201,5,0.201,8,1.151,9,1.78,10,1.78,11,1.523,14,1.646,15,0.423,16,1.249,18,2.841,20,0.636,21,0.015,23,1.101,28,3.216,30,0.564,32,1.789,38,0.363,39,3.062,40,1.693,49,0.224,56,0.012,57,0.012,60,3.277,62,2.615,167,2.256,169,3.062,171,1.627,173,2.49,196,2.082,561,3.385,949,4.312,1002,5.078,1011,5.298,1012,5.298,1013,5.298]],["title/classes/UpdateFertilizerDto-1.html",[0,0.193,354,1.637,561,1.723]],["body/classes/UpdateFertilizerDto-1.html",[0,0.346,2,1.138,3,0.251,4,0.225,5,0.225,21,0.015,38,0.389,47,2.43,49,0.251,56,0.013,57,0.013,60,3.669,176,4.052,186,2.659,304,3.669,561,3.624,565,4.237,1004,3.669,1005,3.448,1006,4.625,1014,6.973]],["title/classes/UpdateFertilizerUnitDto.html",[0,0.231,722,2.623]],["body/classes/UpdateFertilizerUnitDto.html",[0,0.34,2,1.117,3,0.246,4,0.221,5,0.221,14,1.743,21,0.015,38,0.385,47,2.386,49,0.246,56,0.013,57,0.013,176,4.009,186,2.611,326,4.544,327,2.875,329,4.54,722,4.565,727,5.05,1004,4.544,1005,3.385,1015,4.54]],["title/classes/UpdatePumpDto.html",[0,0.231,825,2.623]],["body/classes/UpdatePumpDto.html",[0,0.292,2,0.681,3,0.15,4,0.135,5,0.135,8,1.312,9,1.366,10,1.366,11,1.17,15,0.284,16,0.959,19,0.936,20,0.708,21,0.015,23,1.428,27,0.851,30,0.732,32,1.843,38,0.279,39,3.319,40,1.135,41,3.443,45,3.009,46,1.669,49,0.15,56,0.009,57,0.009,61,2.257,62,3.393,65,4.16,114,2.153,151,5.911,152,5.911,164,4.367,296,3.899,301,4.674,327,3.486,336,2.768,337,3.773,338,3.832,339,3.832,340,3.832,348,5.45,825,3.311,949,3.311,1015,5.505,1016,3.551,1017,3.551,1018,6.285,1019,3.551,1020,3.551,1021,3.551,1022,3.551]],["title/classes/UpdateRecipeDto.html",[0,0.231,930,2.623]],["body/classes/UpdateRecipeDto.html",[0,0.346,2,1.138,3,0.251,4,0.225,5,0.225,21,0.015,38,0.389,47,2.43,49,0.251,56,0.013,57,0.013,176,4.052,186,2.659,356,3.669,358,4.625,930,4.615,936,4.625,1004,3.669,1005,3.448,1023,5.144,1024,6.973]],["title/classes/UpdateWaterDto.html",[0,0.231,1025,2.623]],["body/classes/UpdateWaterDto.html",[0,0.346,2,1.138,3,0.251,4,0.225,5,0.225,21,0.015,38,0.389,47,2.43,49,0.251,56,0.013,57,0.013,176,4.052,186,2.659,383,3.669,384,4.625,1004,3.669,1005,3.448,1009,4.625,1025,4.615,1026,6.973,1027,5.144]],["title/classes/Water.html",[0,0.231,687,1.956]],["body/classes/Water.html",[0,0.251,2,0.824,3,0.182,4,0.163,5,0.163,8,1.129,13,2.453,15,0.343,16,1.093,18,2.143,19,0.952,20,0.705,21,0.015,23,1.513,27,0.901,30,0.775,32,1.77,38,0.356,48,1.373,49,0.27,56,0.011,57,0.011,146,2.236,148,3.954,167,2.612,169,3.545,170,2.233,171,1.32,172,2.678,173,3.329,179,1.429,369,3.312,378,3.716,385,3.716,386,5.543,407,3.524,413,2.866,467,2.813,531,3.35,532,4.232,541,3.35,687,3.156,985,3.069,1028,3.069,1029,4.297,1030,4.297,1031,4.297,1032,4.297,1033,4.297,1034,4.297,1035,3.726,1036,3.35]],["title/controllers/WaterController.html",[72,1.318,1037,2.83]],["body/controllers/WaterController.html",[0,0.35,3,0.104,4,0.093,5,0.093,8,1.06,9,1.431,10,1.431,11,1.225,13,2.634,15,0.195,19,0.932,20,0.564,21,0.015,23,1.344,25,2.491,26,2.959,27,0.899,30,0.689,38,0.335,40,0.782,49,0.104,56,0.007,57,0.007,72,1.547,74,0.92,76,1.213,79,2.361,80,0.572,83,1.272,84,0.848,85,2.24,113,2.168,114,1.778,155,2.056,159,1.89,183,1.423,185,1.905,187,2.244,188,1.555,193,2.551,195,1.626,196,1.213,197,2.056,198,1.555,199,1.626,201,2.538,203,2.513,205,3.468,207,2.513,209,2.349,212,2.513,214,1.428,215,2.056,216,2.875,217,1.343,218,2.822,219,1.272,224,1.555,225,1.343,228,0.96,229,1.003,230,1.048,236,2.513,271,2.587,383,2.876,413,2.349,416,3.362,422,4.848,428,2.587,436,1.62,443,3.292,445,2.551,446,2.587,447,1.62,586,2.122,587,4.494,589,5.203,592,2.122,687,3.967,1025,4.397,1027,2.122,1037,3.742,1038,2.122,1039,2.448,1040,3.292,1041,3.292,1042,3.292,1043,4.032,1044,4.032,1045,4.032,1046,2.122,1047,3.796,1048,2.448,1049,2.122,1050,2.448,1051,2.448,1052,2.448,1053,2.448,1054,2.448,1055,2.122,1056,3.796,1057,2.448,1058,2.122,1059,3.796,1060,2.448,1061,2.448,1062,2.448,1063,3.241,1064,2.122,1065,2.448,1066,2.448,1067,2.448,1068,2.448,1069,2.448,1070,2.448,1071,2.448,1072,2.448,1073,2.448,1074,2.448,1075,2.448,1076,2.448,1077,2.448,1078,2.448]],["title/modules/WaterModule.html",[87,1.555,103,2.623]],["body/modules/WaterModule.html",[0,0.309,3,0.224,4,0.201,5,0.201,21,0.015,38,0.41,49,0.224,56,0.012,57,0.012,74,2.45,80,1.239,87,2.767,89,2.615,90,2.615,91,2.907,92,2.907,93,2.615,94,3.87,95,2.907,103,5.208,104,3.574,105,2.907,106,2.753,108,3.786,244,3.997,250,3.507,1037,5.037,1063,4.756,1064,4.594,1079,4.594,1080,4.594,1081,5.298,1082,5.298,1083,5.298]],["title/injectables/WaterService.html",[139,1.217,1063,2.451]],["body/injectables/WaterService.html",[0,0.15,3,0.109,4,0.098,5,0.098,13,2.335,15,0.206,18,1.805,19,1.004,20,0.608,21,0.015,25,2.102,27,0.959,30,0.733,32,0.96,38,0.384,48,0.823,49,0.109,53,1.413,56,0.007,57,0.007,76,1.262,79,2.155,80,0.602,84,1.367,85,2.46,113,2.335,114,1.915,139,1.213,140,1.21,148,2.441,167,0.892,171,0.791,179,2.289,187,2.305,188,1.617,196,1.957,202,2.052,222,1.497,224,1.055,228,1.549,255,3.498,259,3.704,267,1.413,270,1.949,272,1.593,289,3.705,291,1.839,383,1.593,397,1.839,409,1.839,413,1.154,414,3.848,416,3.313,422,4.697,436,2.613,445,2.634,446,1.949,452,2.819,454,4.163,471,1.839,472,2.233,473,2.969,475,3.842,480,2.233,481,2.634,483,2.634,493,1.497,495,3.077,496,2.233,498,1.497,503,2.233,504,4.667,505,2.233,506,3.077,507,3.423,508,2.233,509,2.233,510,3.423,513,3.423,515,2.233,516,2.233,518,2.233,528,2.007,677,1.839,678,1.704,687,2.865,1025,3.563,1036,4.196,1040,4.163,1041,3.423,1042,3.423,1043,3.423,1044,4.163,1045,3.423,1046,2.233,1049,3.423,1055,3.423,1058,2.233,1063,2.441,1084,2.233,1085,2.575,1086,2.575,1087,3.948,1088,2.575,1089,3.948,1090,2.575,1091,2.575,1092,3.948,1093,2.575,1094,2.575,1095,2.575,1096,2.575,1097,2.575,1098,3.948,1099,2.575,1100,2.575,1101,2.575,1102,2.575,1103,2.575,1104,2.575,1105,2.575,1106,2.575,1107,2.575,1108,2.575,1109,2.575,1110,2.575,1111,4.801,1112,2.575,1113,2.575,1114,3.948,1115,2.575,1116,3.948,1117,3.948,1118,3.948,1119,2.575,1120,2.575,1121,2.575,1122,2.575]],["title/classes/baseElement.html",[0,0.231,475,2.623]],["body/classes/baseElement.html",[0,0.322,2,1.059,3,0.233,4,0.21,5,0.21,15,0.441,16,1.281,19,1.069,20,0.673,21,0.015,27,0.924,30,0.794,32,1.624,38,0.308,49,0.233,56,0.012,57,0.012,295,4.442,473,4.616,475,4.422,1123,4.787,1124,6.228,1125,5.129,1126,5.521,1127,5.521,1128,5.521,1129,5.521]],["title/classes/baseIon.html",[0,0.231,477,2.623]],["body/classes/baseIon.html",[0,0.326,2,1.072,3,0.236,4,0.212,5,0.212,15,0.446,16,1.291,20,0.676,21,0.015,27,0.833,30,0.798,32,1.894,49,0.236,56,0.013,57,0.013,295,4.466,477,4.455,772,5.629,1125,5.157,1130,4.847,1131,7.221,1132,5.59,1133,5.59,1134,5.59,1135,5.59]],["title/coverage.html",[1136,4.206]],["body/coverage.html",[0,0.465,1,2.252,5,0.11,6,2.505,7,3.777,13,1,14,1.301,20,0.26,21,0.015,56,0.008,57,0.008,58,1.912,59,2.505,60,3.529,61,0.923,64,5.621,71,4.165,72,2.316,73,2.063,75,2.505,81,1.786,93,1.426,121,2.85,130,2.063,139,2.177,141,2.505,145,3.075,175,2.063,180,1.786,181,2.063,182,2.505,192,1.786,196,0.923,211,1.912,220,1.786,245,2.126,248,2.503,253,2.505,283,2.505,284,3.357,289,1.679,290,3.357,304,1.786,305,2.252,326,1.786,327,3.364,328,3.357,329,3.357,335,1.912,336,3.357,337,1.358,356,1.786,357,2.505,358,3.357,383,1.786,384,3.357,398,3.075,407,1.786,410,2.063,411,2.505,416,2.238,434,1.786,451,2.505,471,2.063,473,1.786,475,1.912,477,1.912,529,3.075,544,2.063,546,2.505,561,2.238,576,2.505,587,1.912,612,2.505,661,2.505,681,1.501,682,3.511,683,3.958,685,1.426,686,2.238,687,1.426,693,1.912,696,1.585,698,1.786,705,1.786,708,2.063,709,2.505,722,1.912,725,1.786,742,1.786,744,2.063,748,2.505,765,2.063,767,3.357,768,2.505,771,3.075,777,2.063,779,2.505,810,2.505,825,1.912,838,2.505,901,3.075,914,2.063,917,2.063,918,2.505,930,1.912,932,1.786,958,2.505,985,2.063,1002,3.357,1006,3.357,1009,3.357,1015,3.357,1023,2.505,1025,1.912,1028,3.075,1037,2.063,1038,2.505,1063,1.786,1084,2.505,1123,2.505,1130,2.505,1136,2.252,1137,2.505,1138,2.889,1139,2.889,1140,5.706,1141,4.306,1142,5.706,1143,6.4,1144,4.306,1145,4.306,1146,2.889,1147,2.889,1148,6.103,1149,4.306,1150,5.148,1151,7.492,1152,4.306,1153,2.889,1154,2.889,1155,2.505,1156,2.889,1157,4.306,1158,7.089,1159,4.306,1160,4.306,1161,2.889,1162,2.889,1163,2.505,1164,6.103,1165,2.505,1166,2.889,1167,2.889,1168,2.889]],["title/dependencies.html",[90,2.351,1169,2.874]],["body/dependencies.html",[0,0.387,21,0.015,40,1.747,46,2.569,47,2.24,48,1.747,56,0.012,57,0.012,80,1.278,90,2.699,124,4.74,125,4.74,129,4.74,171,1.679,396,4.74,792,4.74,1005,3.177,1170,7.152,1171,5.467,1172,5.467,1173,5.467,1174,5.467,1175,6.64,1176,6.64,1177,6.64,1178,5.467,1179,5.467,1180,5.467,1181,5.467,1182,5.467,1183,5.467,1184,5.467,1185,5.467,1186,5.467,1187,5.467,1188,5.467,1189,5.467,1190,5.467]],["title/classes/elementForm.html",[0,0.231,473,2.451]],["body/classes/elementForm.html",[0,0.322,2,1.059,3,0.233,4,0.21,5,0.21,15,0.441,16,1.281,19,1.069,20,0.673,21,0.015,27,0.924,30,0.794,32,1.624,38,0.308,49,0.233,56,0.012,57,0.012,295,4.442,473,4.131,477,4.94,1125,5.129,1165,4.787,1191,6.228,1192,5.521,1193,5.521,1194,5.521,1195,5.521]],["title/miscellaneous/enumerations.html",[1196,1.819,1197,4.13]],["body/miscellaneous/enumerations.html",[14,1.532,15,0.484,20,0.547,21,0.014,56,0.013,57,0.013,60,4.367,305,4.725,316,6.122,321,5.504,322,5.504,468,4.367,1196,3.326,1197,5.256,1198,6.062]],["title/miscellaneous/functions.html",[1196,1.819,1199,4.13]],["body/miscellaneous/functions.html",[15,0.499,21,0.013,56,0.013,57,0.013,93,3.734,1155,5.418,1196,3.428,1199,5.418,1200,6.248]],["title/index.html",[15,0.265,1201,3.315,1202,3.315]],["body/index.html",[4,0.164,8,0.764,21,0.015,28,3.165,56,0.011,57,0.011,106,3.546,136,3.748,214,1.625,330,2.673,795,3.748,1136,3.369,1137,3.748,1203,4.322,1204,4.322,1205,6.411,1206,4.322,1207,4.322,1208,4.322,1209,4.322,1210,4.322,1211,4.322,1212,6.411,1213,4.322,1214,4.322,1215,4.322,1216,6.824,1217,4.322,1218,7.439,1219,4.322,1220,7.439,1221,4.322,1222,4.322,1223,5.72,1224,4.322,1225,4.322,1226,6.411,1227,5.72,1228,4.322,1229,4.322,1230,4.322,1231,6.824,1232,4.322,1233,4.322,1234,4.322,1235,4.322,1236,4.322,1237,6.824,1238,5.72,1239,4.322,1240,6.411,1241,4.322,1242,5.917,1243,5.72,1244,4.322,1245,4.322,1246,4.322,1247,4.322,1248,4.322,1249,4.322,1250,6.411,1251,4.322,1252,4.322,1253,4.322,1254,5.72,1255,4.322,1256,4.322,1257,4.322,1258,6.411,1259,4.322,1260,4.322,1261,4.322,1262,4.322,1263,4.322,1264,4.322,1265,4.322,1266,5.72,1267,4.322,1268,4.322,1269,4.322,1270,4.322,1271,4.322,1272,5.72,1273,4.322,1274,4.322,1275,4.322,1276,5.72,1277,5.72,1278,4.322,1279,4.322,1280,4.322,1281,4.322,1282,4.322,1283,4.322,1284,4.322,1285,4.322,1286,4.322,1287,4.322,1288,4.322,1289,3.748,1290,4.322,1291,4.322,1292,4.322,1293,4.322,1294,4.322,1295,4.322,1296,3.748]],["title/modules.html",[89,2.664]],["body/modules.html",[21,0.013,56,0.013,57,0.013,88,4.137,89,2.86,99,3.835,100,3.835,101,3.835,102,3.835,103,3.835,244,3.011,1242,6.879,1297,7.934,1298,7.934,1299,7.934]],["title/overview.html",[1300,4.679]],["body/overview.html",[2,0.744,13,2.261,14,1.65,21,0.015,53,2.128,56,0.01,57,0.01,61,2.086,74,1.459,81,3.753,87,1.522,88,5.568,89,1.915,90,1.915,91,2.128,92,2.128,93,1.915,94,2.128,95,2.128,96,3.363,97,3.363,98,3.363,99,5.095,100,5.095,101,4.948,102,4.789,103,4.789,104,2.918,105,2.128,106,2.016,140,1.823,180,2.399,220,4.475,240,3.363,241,3.363,242,3.363,243,3.363,244,4.073,245,3.733,246,3.876,337,3.068,354,1.915,434,4.475,606,3.363,608,3.363,609,3.363,681,3.393,685,3.223,687,3.223,696,3.582,725,3.753,739,3.363,741,3.363,742,3.753,932,3.753,953,3.363,955,3.363,979,3.363,980,3.363,1063,3.753,1079,3.363,1080,3.363,1300,3.363,1301,3.879,1302,3.879,1303,3.363]],["title/properties.html",[16,0.913,1169,2.874]],["body/properties.html",[8,1.095,16,1.188,21,0.015,56,0.013,57,0.013,569,5.373,1289,5.373,1296,5.373,1304,6.196,1305,6.196]],["title/classes/solution.html",[0,0.231,686,2.059]],["body/classes/solution.html",[0,0.312,2,1.026,3,0.226,4,0.203,5,0.203,13,1.852,15,0.427,16,1.257,18,2.011,20,0.666,21,0.015,27,0.662,30,0.786,32,1.898,49,0.277,56,0.012,57,0.012,147,3.497,150,3.497,180,3.308,385,4.117,413,3.176,686,3.405,765,5.059,767,4.17,1306,5.349,1307,5.349,1308,5.349,1309,5.349]],["title/miscellaneous/typealiases.html",[1196,1.819,1310,4.763]],["body/miscellaneous/typealiases.html",[15,0.453,20,0.512,21,0.013,56,0.013,57,0.013,61,1.814,145,4.053,172,2.668,178,4.85,398,4.053,409,4.85,458,4.496,529,4.053,682,3.114,683,4.659,700,4.496,704,4.85,707,4.2,771,4.053,776,5.889,901,4.053,916,5.889,1028,4.053,1036,5.294,1196,3.114,1311,5.676,1312,4.921,1313,4.921,1314,4.921,1315,6.302,1316,4.921,1317,4.921,1318,4.921]],["title/miscellaneous/variables.html",[1196,1.819,1319,4.13]],["body/miscellaneous/variables.html",[15,0.164,19,1.17,20,0.186,21,0.016,52,1.47,56,0.006,57,0.006,61,0.658,71,2.473,145,1.47,146,0.808,160,2.749,174,1.47,175,2.365,177,1.785,295,4.939,302,2.365,354,2.574,359,2.581,360,2.581,361,2.581,362,4.343,363,2.581,364,2.581,365,1.605,366,1.47,367,1.605,368,2.581,398,1.47,406,3.602,407,2.048,408,1.785,467,3.185,468,3.99,471,2.365,529,1.47,544,2.365,545,1.785,682,1.13,683,2.943,693,2.192,698,2.048,699,1.47,703,1.47,705,2.048,706,1.47,771,1.47,772,5.741,777,2.365,778,1.785,901,1.47,914,2.365,915,1.785,985,2.365,1028,1.47,1035,1.785,1124,6.139,1125,5.703,1163,1.785,1191,6.521,1196,1.13,1303,1.785,1312,1.785,1313,1.785,1314,1.785,1315,3.602,1316,1.785,1317,1.785,1318,1.785,1319,1.785,1320,2.059,1321,4.154,1322,3.312,1323,6.716,1324,2.059,1325,2.059,1326,7.409,1327,2.059,1328,4.154,1329,2.059,1330,4.154,1331,4.154,1332,2.059,1333,2.059,1334,2.059,1335,3.312,1336,4.759,1337,2.059,1338,3.312,1339,3.312,1340,2.059,1341,4.154,1342,4.759,1343,5.856,1344,2.059,1345,2.059,1346,4.759,1347,2.059,1348,3.312,1349,4.759,1350,4.759,1351,4.759,1352,5.856,1353,6.285,1354,4.154,1355,4.154,1356,2.059,1357,3.312,1358,3.312,1359,3.312,1360,2.059,1361,2.059,1362,4.154,1363,4.759,1364,4.154,1365,2.059,1366,3.312,1367,2.059,1368,4.154,1369,4.154,1370,2.059,1371,3.312,1372,2.059,1373,4.154,1374,4.154,1375,2.059,1376,3.312,1377,2.059,1378,4.154,1379,4.154,1380,2.059,1381,3.312,1382,2.059,1383,3.312,1384,3.312,1385,2.059,1386,2.059,1387,2.059,1388,2.059,1389,3.312,1390,3.312,1391,2.059,1392,3.312,1393,3.312,1394,4.759,1395,2.059,1396,3.312,1397,3.312,1398,2.059,1399,3.312,1400,4.154,1401,3.312,1402,3.312,1403,3.312,1404,3.312,1405,2.059,1406,2.059]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"coverage.html":{},"dependencies.html":{},"classes/elementForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/solution.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":71,"title":{},"body":{"classes/AddFertilizerDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"classes/Ion.html":{},"injectables/PumpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1304,"title":{},"body":{"properties.html":{}}}],["0.1.6",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["0})@apiproperty({description",{"_index":310,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["0})@isnumber()@isoptional",{"_index":333,"title":{},"body":{"classes/CreateFertilizerUnitDto.html":{}}}],["0})@isnumber()@ispositive",{"_index":66,"title":{},"body":{"classes/AddFertilizerDto.html":{}}}],["0})@isnumber({allowinfinity",{"_index":311,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["1",{"_index":354,"title":{"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto-1.html":{}},"body":{"classes/CreatePumpDto.html":{},"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1'})@isstring",{"_index":343,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["1'})@isstring()@isnotempty",{"_index":341,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["1.0",{"_index":355,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["1/1",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":53,"title":{},"body":{"classes/AddElementDto.html":{},"classes/Concentrate.html":{},"classes/CreatePumpDto.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"injectables/PumpService.html":{},"injectables/WaterService.html":{},"overview.html":{}}}],["10.0.0",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["10.0.10",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["10.4.4",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":64,"title":{},"body":{"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreatePumpDto.html":{},"coverage.html":{}}}],["1000",{"_index":644,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["100})@isnumber()@isnotempty",{"_index":349,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["10})@isnumber()@isnotempty",{"_index":351,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["10})@isnumber()@min(0)@max(100",{"_index":34,"title":{},"body":{"classes/AddElementDto.html":{}}}],["10})@prop({required",{"_index":400,"title":{},"body":{"classes/Element.html":{}}}],["11",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["142",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150",{"_index":1013,"title":{},"body":{"classes/UpdateFertilizerDto.html":{}}}],["150})@prop({required",{"_index":1011,"title":{},"body":{"classes/UpdateFertilizerDto.html":{}}}],["16.4.5",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1})@isnumber()@isnotempty",{"_index":345,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["2",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20",{"_index":303,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["23",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.2.3",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1303,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["39",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8.0",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.99",{"_index":324,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["5/5",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["53,0",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["53.0",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6/6",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["60f790f3b311f83d1f4f3f3d",{"_index":51,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/Element.html":{}}}],["60f790f3b311f83d1f4f3f3d'})@ismongoid",{"_index":29,"title":{},"body":{"classes/AddElementDto.html":{}}}],["60f790f3b311f83d1f4f3f3d'})@isstring",{"_index":68,"title":{},"body":{"classes/AddFertilizerDto.html":{}}}],["61",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61,2",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61.2",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1301,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71,4",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.4",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73,4",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73.4",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79,0",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.0",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.6.3",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1302,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":17,"title":{},"body":{"classes/AddElementDto.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{}}}],["acc",{"_index":654,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["acc.find((item",{"_index":648,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["acc.push(curr",{"_index":653,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["acid",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":26,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/WaterController.html":{}}}],["added",{"_index":553,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["addelement",{"_index":1040,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["addelement(@param('id",{"_index":1075,"title":{},"body":{"controllers/WaterController.html":{}}}],["addelement(id",{"_index":1046,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["addelementdto",{"_index":1,"title":{"classes/AddElementDto.html":{}},"body":{"classes/AddElementDto.html":{},"coverage.html":{}}}],["addfertilizer",{"_index":547,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["addfertilizer(concentrateid",{"_index":550,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["addfertilizerdto",{"_index":58,"title":{"classes/AddFertilizerDto.html":{}},"body":{"classes/AddFertilizerDto.html":{},"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{},"coverage.html":{}}}],["adding",{"_index":12,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{}}}],["adds",{"_index":419,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["aliases",{"_index":1311,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowinfinity",{"_index":325,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["allownan",{"_index":313,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["amazing",{"_index":1282,"title":{},"body":{"index.html":{}}}],["ammonium",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aniones",{"_index":147,"title":{},"body":{"classes/Concentrate.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"classes/FertilizerUnit.html":{},"interfaces/IElement.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{},"classes/solution.html":{}}}],["apiproperty",{"_index":39,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/Element.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{}}}],["apiproperty({description",{"_index":62,"title":{},"body":{"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/Element.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{}}}],["apiproperty({name",{"_index":24,"title":{},"body":{"classes/AddElementDto.html":{}}}],["apitags",{"_index":225,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["apitags('concentrate/fertilizers",{"_index":566,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["apitags('concentrates",{"_index":226,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["apitags('fertilizer",{"_index":728,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["apitags('fertilizer/elements",{"_index":437,"title":{},"body":{"controllers/ElementController.html":{}}}],["apitags('fertilizers",{"_index":594,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["apitags('pumps",{"_index":830,"title":{},"body":{"controllers/PumpController.html":{}}}],["apitags('recipes",{"_index":937,"title":{},"body":{"controllers/RecipeController.html":{}}}],["apitags('water",{"_index":1065,"title":{},"body":{"controllers/WaterController.html":{}}}],["app.controller",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":73,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1254,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1211,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":88,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":81,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":155,"title":{},"body":{"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["associates",{"_index":817,"title":{},"body":{"controllers/PumpController.html":{},"injectables/PumpService.html":{}}}],["async",{"_index":414,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["atomic",{"_index":292,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["author",{"_index":1289,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":481,"title":{},"body":{"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["b",{"_index":359,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":1283,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":447,"title":{},"body":{"controllers/ElementController.html":{},"controllers/FertilizerUnitController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["badrequestexception(error.message",{"_index":872,"title":{},"body":{"injectables/PumpService.html":{}}}],["balance",{"_index":846,"title":{},"body":{"injectables/PumpService.html":{}}}],["base",{"_index":513,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["baseelement",{"_index":475,"title":{"classes/baseElement.html":{}},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"coverage.html":{}}}],["baseelement.forms.find",{"_index":508,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["baseelement.mmass",{"_index":515,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["baseelement.symbol",{"_index":518,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["baseform",{"_index":507,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["baseform.ione",{"_index":512,"title":{},"body":{"injectables/ElementService.html":{}}}],["baseform.mmass",{"_index":516,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["baseion",{"_index":477,"title":{"classes/baseIon.html":{}},"body":{"injectables/ElementService.html":{},"classes/baseIon.html":{},"coverage.html":{},"classes/elementForm.html":{}}}],["baseione",{"_index":511,"title":{},"body":{"injectables/ElementService.html":{}}}],["baseione.charge",{"_index":521,"title":{},"body":{"injectables/ElementService.html":{}}}],["board",{"_index":1275,"title":{},"body":{"index.html":{}}}],["body",{"_index":216,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["bootstrap",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boric",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boron",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":1299,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1297,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1206,"title":{},"body":{"index.html":{}}}],["ca",{"_index":302,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["ca+2",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calcium",{"_index":160,"title":{},"body":{"classes/Concentrate.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"miscellaneous/variables.html":{}}}],["calculate",{"_index":462,"title":{},"body":{"injectables/ElementService.html":{}}}],["calculatecomposition",{"_index":452,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{},"injectables/WaterService.html":{}}}],["calculatecomposition(concentrate",{"_index":615,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["calculatecomposition(fertilizer",{"_index":457,"title":{},"body":{"injectables/ElementService.html":{}}}],["calculatecomposition(fertilizerunit",{"_index":842,"title":{},"body":{"injectables/PumpService.html":{}}}],["calculatecomposition(water",{"_index":1089,"title":{},"body":{"injectables/WaterService.html":{}}}],["calculates",{"_index":460,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["calculation",{"_index":501,"title":{},"body":{"injectables/ElementService.html":{}}}],["cao",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":498,"title":{},"body":{"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["channel",{"_index":1245,"title":{},"body":{"index.html":{}}}],["charge",{"_index":772,"title":{},"body":{"classes/Ion.html":{},"classes/baseIon.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":1231,"title":{},"body":{"index.html":{}}}],["chelate",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"classes/solution.html":{}},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"coverage.html":{},"dependencies.html":{},"classes/elementForm.html":{},"classes/solution.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"overview.html":{},"classes/solution.html":{}}}],["cluster_appmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_concentratemodule",{"_index":240,"title":{},"body":{"modules/ConcentrateModule.html":{},"overview.html":{}}}],["cluster_concentratemodule_exports",{"_index":242,"title":{},"body":{"modules/ConcentrateModule.html":{},"overview.html":{}}}],["cluster_concentratemodule_imports",{"_index":241,"title":{},"body":{"modules/ConcentrateModule.html":{},"overview.html":{}}}],["cluster_concentratemodule_providers",{"_index":243,"title":{},"body":{"modules/ConcentrateModule.html":{},"overview.html":{}}}],["cluster_fertilizermodule",{"_index":606,"title":{},"body":{"modules/FertilizerModule.html":{},"overview.html":{}}}],["cluster_fertilizermodule_exports",{"_index":608,"title":{},"body":{"modules/FertilizerModule.html":{},"overview.html":{}}}],["cluster_fertilizermodule_imports",{"_index":607,"title":{},"body":{"modules/FertilizerModule.html":{}}}],["cluster_fertilizermodule_providers",{"_index":609,"title":{},"body":{"modules/FertilizerModule.html":{},"overview.html":{}}}],["cluster_fertilizerunitmodule",{"_index":739,"title":{},"body":{"modules/FertilizerUnitModule.html":{},"overview.html":{}}}],["cluster_fertilizerunitmodule_imports",{"_index":740,"title":{},"body":{"modules/FertilizerUnitModule.html":{}}}],["cluster_fertilizerunitmodule_providers",{"_index":741,"title":{},"body":{"modules/FertilizerUnitModule.html":{},"overview.html":{}}}],["cluster_recipemodule",{"_index":953,"title":{},"body":{"modules/RecipeModule.html":{},"overview.html":{}}}],["cluster_recipemodule_imports",{"_index":954,"title":{},"body":{"modules/RecipeModule.html":{}}}],["cluster_recipemodule_providers",{"_index":955,"title":{},"body":{"modules/RecipeModule.html":{},"overview.html":{}}}],["cluster_schemasmodule",{"_index":979,"title":{},"body":{"modules/SchemasModule.html":{},"overview.html":{}}}],["cluster_schemasmodule_exports",{"_index":980,"title":{},"body":{"modules/SchemasModule.html":{},"overview.html":{}}}],["cluster_watermodule",{"_index":1079,"title":{},"body":{"modules/WaterModule.html":{},"overview.html":{}}}],["cluster_watermodule_imports",{"_index":1081,"title":{},"body":{"modules/WaterModule.html":{}}}],["cluster_watermodule_providers",{"_index":1080,"title":{},"body":{"modules/WaterModule.html":{},"overview.html":{}}}],["co",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["co+2",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cobalt",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["come",{"_index":1234,"title":{},"body":{"index.html":{}}}],["common/logger.middlewware",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["composition",{"_index":461,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["concentrate",{"_index":61,"title":{"classes/Concentrate.html":{}},"body":{"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreatePumpDto.html":{},"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdatePumpDto.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["concentrate.aniones",{"_index":659,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["concentrate.content",{"_index":660,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.content.map((element",{"_index":893,"title":{},"body":{"injectables/PumpService.html":{}}}],["concentrate.controller",{"_index":249,"title":{},"body":{"modules/ConcentrateModule.html":{}}}],["concentrate.dto",{"_index":223,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/UpdateConcentrateDto.html":{}}}],["concentrate.dto.ts",{"_index":284,"title":{},"body":{"classes/CreateConcentrateDto.html":{},"classes/UpdateConcentrateDto.html":{},"coverage.html":{}}}],["concentrate.dto.ts:16",{"_index":288,"title":{},"body":{"classes/CreateConcentrateDto.html":{}}}],["concentrate.dto.ts:28",{"_index":287,"title":{},"body":{"classes/CreateConcentrateDto.html":{}}}],["concentrate.fertilizers.find",{"_index":629,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.fertilizers.findindex",{"_index":634,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.fertilizers.flatmap(async",{"_index":637,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.fertilizers.map(async",{"_index":623,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.fertilizers.push(addfertilizerdto",{"_index":626,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.fertilizers.splice(index",{"_index":636,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.kationes",{"_index":658,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["concentrate.name",{"_index":995,"title":{},"body":{"modules/SchemasModule.html":{}}}],["concentrate.save",{"_index":627,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.save().then((concentrate",{"_index":633,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["concentrate.schema",{"_index":987,"title":{},"body":{"modules/SchemasModule.html":{}}}],["concentrate.service",{"_index":221,"title":{},"body":{"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{}}}],["concentrate/concentrate.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["concentratecontroller",{"_index":181,"title":{"controllers/ConcentrateController.html":{}},"body":{"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"coverage.html":{}}}],["concentratedocument",{"_index":178,"title":{},"body":{"classes/Concentrate.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{},"miscellaneous/typealiases.html":{}}}],["concentrateid",{"_index":552,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["concentratemodel",{"_index":257,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["concentratemodule",{"_index":99,"title":{"modules/ConcentrateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules.html":{},"overview.html":{}}}],["concentrates",{"_index":184,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{}}}],["concentrates.flat",{"_index":896,"title":{},"body":{"injectables/PumpService.html":{}}}],["concentrates/:concentrateid/fertilizers",{"_index":568,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["concentrateschema",{"_index":175,"title":{},"body":{"classes/Concentrate.html":{},"modules/SchemasModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["concentrateservice",{"_index":220,"title":{"injectables/ConcentrateService.html":{}},"body":{"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"coverage.html":{},"overview.html":{}}}],["concentration",{"_index":18,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreateElementDto.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"interfaces/IElement.html":{},"classes/Ion.html":{},"injectables/PumpService.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/Water.html":{},"injectables/WaterService.html":{},"classes/solution.html":{}}}],["conductivitycoefficient",{"_index":1131,"title":{},"body":{"classes/baseIon.html":{}}}],["configmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":179,"title":{},"body":{"classes/Concentrate.html":{},"injectables/ConcentrateService.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"injectables/FertilizerUnitService.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/Water.html":{},"injectables/WaterService.html":{}}}],["constructor",{"_index":228,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["constructor(concentratemodel",{"_index":254,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["constructor(fertilizermodel",{"_index":453,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{}}}],["constructor(fertilizerunitmodel",{"_index":749,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["constructor(private",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["constructor(pumpmodel",{"_index":839,"title":{},"body":{"injectables/PumpService.html":{}}}],["constructor(recipemodel",{"_index":959,"title":{},"body":{"injectables/RecipeService.html":{}}}],["constructor(watermodel",{"_index":1085,"title":{},"body":{"injectables/WaterService.html":{}}}],["consumer",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["containing",{"_index":159,"title":{},"body":{"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateFertilizerDto.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["content",{"_index":148,"title":{},"body":{"classes/Concentrate.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"classes/Water.html":{},"injectables/WaterService.html":{}}}],["content.push",{"_index":517,"title":{},"body":{"injectables/ElementService.html":{}}}],["controller",{"_index":72,"title":{"controllers/AppController.html":{},"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{},"coverage.html":{}}}],["controller('concentrates",{"_index":227,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["controller('fertilizer",{"_index":729,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{}}}],["controller('fertilizers",{"_index":595,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["controller('fertilizers/:fertilizerid/elements",{"_index":438,"title":{},"body":{"controllers/ElementController.html":{}}}],["controller('recipes",{"_index":938,"title":{},"body":{"controllers/RecipeController.html":{}}}],["controller('waters",{"_index":1066,"title":{},"body":{"controllers/WaterController.html":{}}}],["controllers",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"overview.html":{}}}],["copper",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courses",{"_index":1252,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1136,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":186,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/PumpService.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{}}}],["create(@body",{"_index":231,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["create(createconcentratedto",{"_index":191,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{}}}],["create(fertilizerid",{"_index":415,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{}}}],["create(fertilizerunitid",{"_index":847,"title":{},"body":{"injectables/PumpService.html":{}}}],["createconcentratedto",{"_index":192,"title":{"classes/CreateConcentrateDto.html":{}},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/UpdateConcentrateDto.html":{},"coverage.html":{}}}],["created",{"_index":199,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["createdfertilizerunit",{"_index":759,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["createdfertilizerunit.save",{"_index":761,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["createdrecipe",{"_index":969,"title":{},"body":{"injectables/RecipeService.html":{}}}],["createdrecipe.save",{"_index":971,"title":{},"body":{"injectables/RecipeService.html":{}}}],["createdwater",{"_index":1104,"title":{},"body":{"injectables/WaterService.html":{}}}],["createdwater.save",{"_index":1106,"title":{},"body":{"injectables/WaterService.html":{}}}],["createelementdto",{"_index":289,"title":{"classes/CreateElementDto.html":{}},"body":{"classes/CreateElementDto.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/UpdateElementDto-1.html":{},"injectables/WaterService.html":{},"coverage.html":{}}}],["createfertilizer",{"_index":577,"title":{},"body":{"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{}}}],["createfertilizer(@body",{"_index":596,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["createfertilizer(createfertilizerdto",{"_index":579,"title":{},"body":{"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{}}}],["createfertilizerdto",{"_index":304,"title":{"classes/CreateFertilizerDto.html":{}},"body":{"classes/CreateFertilizerDto.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"classes/UpdateFertilizerDto-1.html":{},"coverage.html":{}}}],["createfertilizerunit",{"_index":711,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{}}}],["createfertilizerunit(@body",{"_index":732,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["createfertilizerunit(createfertilizerunitdto",{"_index":714,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{}}}],["createfertilizerunitdto",{"_index":326,"title":{"classes/CreateFertilizerUnitDto.html":{}},"body":{"classes/CreateFertilizerUnitDto.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"classes/UpdateFertilizerUnitDto.html":{},"coverage.html":{}}}],["createpump",{"_index":812,"title":{},"body":{"controllers/PumpController.html":{}}}],["createpump(id",{"_index":815,"title":{},"body":{"controllers/PumpController.html":{}}}],["createpumpdto",{"_index":335,"title":{"classes/CreatePumpDto.html":{}},"body":{"classes/CreatePumpDto.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"coverage.html":{}}}],["createrecipe",{"_index":920,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["createrecipe(@body",{"_index":939,"title":{},"body":{"controllers/RecipeController.html":{}}}],["createrecipe(createrecipedto",{"_index":923,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["createrecipedto",{"_index":356,"title":{"classes/CreateRecipeDto.html":{}},"body":{"classes/CreateRecipeDto.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["creates",{"_index":195,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["createwater",{"_index":1041,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["createwater(@body",{"_index":1067,"title":{},"body":{"controllers/WaterController.html":{}}}],["createwater(createwaterdto",{"_index":1049,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["createwaterdto",{"_index":383,"title":{"classes/CreateWaterDto.html":{}},"body":{"classes/CreateWaterDto.html":{},"classes/UpdateWaterDto.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"coverage.html":{}}}],["creating",{"_index":285,"title":{},"body":{"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["creation",{"_index":274,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/PumpService.html":{}}}],["cu",{"_index":360,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["cu+2",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cuo",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curr",{"_index":646,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["curr.concentration",{"_index":652,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["curr.element",{"_index":650,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["data",{"_index":9,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"controllers/WaterController.html":{}}}],["date.now",{"_index":796,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["declarations",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"overview.html":{}}}],["decorators",{"_index":23,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"classes/Solution.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{}}}],["deeper",{"_index":1247,"title":{},"body":{"index.html":{}}}],["default",{"_index":467,"title":{},"body":{"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"classes/FertilizerUnit.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{},"classes/Water.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"classes/solution.html":{}}}],["delete",{"_index":219,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["delete(':elementid",{"_index":426,"title":{},"body":{"controllers/ElementController.html":{}}}],["delete(':fertilizerid",{"_index":558,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["delete(':id",{"_index":207,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["delete(':id/elements/:elementid",{"_index":1056,"title":{},"body":{"controllers/WaterController.html":{}}}],["delete(':pumpid",{"_index":820,"title":{},"body":{"controllers/PumpController.html":{}}}],["delete(fertilizerunitid",{"_index":849,"title":{},"body":{"injectables/PumpService.html":{}}}],["deleted",{"_index":428,"title":{},"body":{"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["deletedfertilizer",{"_index":679,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["deletefertilizer",{"_index":578,"title":{},"body":{"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{}}}],["deletefertilizer(@param('id",{"_index":604,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["deletefertilizer(id",{"_index":582,"title":{},"body":{"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{}}}],["deletefertilizerunit",{"_index":712,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{}}}],["deletefertilizerunit(@param('id",{"_index":737,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["deletefertilizerunit(id",{"_index":717,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{}}}],["deletepump",{"_index":813,"title":{},"body":{"controllers/PumpController.html":{}}}],["deletepump(id",{"_index":818,"title":{},"body":{"controllers/PumpController.html":{}}}],["deleterecipe",{"_index":921,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["deleterecipe(@param('id",{"_index":950,"title":{},"body":{"controllers/RecipeController.html":{}}}],["deleterecipe(id",{"_index":925,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["deletes",{"_index":209,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["deletewater",{"_index":1042,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["deletewater(@param",{"_index":1073,"title":{},"body":{"controllers/WaterController.html":{}}}],["deletewater(id",{"_index":1092,"title":{},"body":{"injectables/WaterService.html":{}}}],["deletewater(params",{"_index":1051,"title":{},"body":{"controllers/WaterController.html":{}}}],["deleting",{"_index":952,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["deletion",{"_index":882,"title":{},"body":{"injectables/PumpService.html":{}}}],["dependencies",{"_index":90,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descriptio",{"_index":286,"title":{},"body":{"classes/CreateConcentrateDto.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":197,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["development",{"_index":1221,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1260,"title":{},"body":{"index.html":{}}}],["devtoolsmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["devtoolsmodule.register",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["discord",{"_index":1244,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1246,"title":{},"body":{"index.html":{}}}],["document",{"_index":172,"title":{},"body":{"classes/Concentrate.html":{},"classes/Element.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"classes/FertilizerUnit.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/Water.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1137,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["dto/add",{"_index":564,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["dto/create",{"_index":222,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"injectables/FertilizerService-1.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["dto/update",{"_index":224,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["duration",{"_index":799,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["duration}ms",{"_index":801,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["during",{"_index":273,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{},"injectables/PumpService.html":{}}}],["e",{"_index":490,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{}}}],["e._id.tostring",{"_index":491,"title":{},"body":{"injectables/ElementService.html":{}}}],["e.concentration",{"_index":643,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["e.message",{"_index":500,"title":{},"body":{"injectables/ElementService.html":{}}}],["e2e",{"_index":1228,"title":{},"body":{"index.html":{}}}],["ec",{"_index":385,"title":{},"body":{"classes/CreateWaterDto.html":{},"classes/FertilizerUnit.html":{},"interfaces/IElement.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"classes/Water.html":{},"classes/solution.html":{}}}],["efficient",{"_index":1207,"title":{},"body":{"index.html":{}}}],["el",{"_index":504,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["el._id.tostring",{"_index":1116,"title":{},"body":{"injectables/WaterService.html":{}}}],["el.name",{"_index":505,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["el.symbol",{"_index":509,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["element",{"_index":13,"title":{"classes/Element.html":{}},"body":{"classes/AddElementDto.html":{},"classes/Concentrate.html":{},"classes/CreateElementDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"interfaces/IElement.html":{},"injectables/PumpService.html":{},"modules/SchemasModule.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"coverage.html":{},"overview.html":{},"classes/solution.html":{}}}],["element.concentration",{"_index":495,"title":{},"body":{"injectables/ElementService.html":{},"injectables/PumpService.html":{},"injectables/WaterService.html":{}}}],["element.controller",{"_index":611,"title":{},"body":{"modules/FertilizerModule.html":{}}}],["element.dto",{"_index":436,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/UpdateElementDto-1.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["element.dto.ts",{"_index":7,"title":{},"body":{"classes/AddElementDto.html":{},"classes/CreateElementDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"coverage.html":{}}}],["element.dto.ts:23",{"_index":299,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.dto.ts:24",{"_index":31,"title":{},"body":{"classes/AddElementDto.html":{}}}],["element.dto.ts:37",{"_index":297,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.dto.ts:39",{"_index":37,"title":{},"body":{"classes/AddElementDto.html":{}}}],["element.dto.ts:51",{"_index":294,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.dto.ts:56",{"_index":35,"title":{},"body":{"classes/AddElementDto.html":{}}}],["element.dto.ts:9",{"_index":1008,"title":{},"body":{"classes/UpdateElementDto.html":{}}}],["element.element",{"_index":894,"title":{},"body":{"injectables/PumpService.html":{}}}],["element.form",{"_index":510,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["element.name",{"_index":506,"title":{},"body":{"injectables/ElementService.html":{},"modules/SchemasModule.html":{},"injectables/WaterService.html":{}}}],["element.schema",{"_index":541,"title":{},"body":{"classes/Fertilizer.html":{},"modules/SchemasModule.html":{},"classes/Water.html":{}}}],["element.service",{"_index":435,"title":{},"body":{"controllers/ElementController.html":{},"modules/FertilizerModule.html":{}}}],["elemental",{"_index":844,"title":{},"body":{"injectables/PumpService.html":{}}}],["elementbase",{"_index":471,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbase.find",{"_index":503,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["elementconcentration",{"_index":514,"title":{},"body":{"injectables/ElementService.html":{}}}],["elementcontroller",{"_index":410,"title":{"controllers/ElementController.html":{}},"body":{"controllers/ElementController.html":{},"modules/FertilizerModule.html":{},"coverage.html":{}}}],["elementdocument",{"_index":409,"title":{},"body":{"classes/Element.html":{},"injectables/ElementService.html":{},"injectables/WaterService.html":{},"miscellaneous/typealiases.html":{}}}],["elementform",{"_index":473,"title":{"classes/elementForm.html":{}},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"coverage.html":{},"classes/elementForm.html":{}}}],["elementid",{"_index":422,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["elementmodel",{"_index":454,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["elements",{"_index":413,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"interfaces/IElement.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"classes/solution.html":{}}}],["elements.reduce((acc",{"_index":897,"title":{},"body":{"injectables/PumpService.html":{}}}],["elementschema",{"_index":407,"title":{},"body":{"classes/Element.html":{},"classes/Fertilizer.html":{},"modules/SchemasModule.html":{},"classes/Water.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementservice",{"_index":434,"title":{"injectables/ElementService.html":{}},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"modules/FertilizerModule.html":{},"coverage.html":{},"overview.html":{}}}],["enterprise",{"_index":1265,"title":{},"body":{"index.html":{}}}],["enum",{"_index":317,"title":{},"body":{"classes/CreateFertilizerDto.html":{},"classes/Fertilizer.html":{}}}],["enumerations",{"_index":1197,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":272,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService-1.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["error(`error",{"_index":972,"title":{},"body":{"injectables/RecipeService.html":{}}}],["error.message",{"_index":973,"title":{},"body":{"injectables/RecipeService.html":{}}}],["example",{"_index":28,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreatePumpDto.html":{},"classes/Element.html":{},"classes/UpdateFertilizerDto.html":{},"index.html":{}}}],["exec",{"_index":678,"title":{},"body":{"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["existing",{"_index":647,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["existing.concentration",{"_index":651,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["experience",{"_index":1249,"title":{},"body":{"index.html":{}}}],["export",{"_index":49,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"classes/solution.html":{}}}],["exports",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"overview.html":{}}}],["express",{"_index":792,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":176,"title":{},"body":{"classes/Concentrate.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{}}}],["f",{"_index":624,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["f._id",{"_index":630,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["f.aniones",{"_index":657,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["f.concentration",{"_index":639,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["f.content.map((e",{"_index":642,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["f.fertilizer",{"_index":635,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["f.kationes",{"_index":656,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["factor",{"_index":164,"title":{},"body":{"classes/Concentrate.html":{},"classes/CreatePumpDto.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"classes/UpdatePumpDto.html":{}}}],["false",{"_index":312,"title":{},"body":{"classes/CreateFertilizerDto.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{}}}],["false})@min(0)@isoptional",{"_index":314,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["fe",{"_index":361,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["fe+3",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fe2o3",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fertilizer",{"_index":14,"title":{"classes/Fertilizer.html":{}},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"modules/AppModule.html":{},"classes/Concentrate.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"modules/SchemasModule.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerUnitDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["fertilizer.aniones",{"_index":525,"title":{},"body":{"injectables/ElementService.html":{}}}],["fertilizer.concentration",{"_index":631,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["fertilizer.content",{"_index":526,"title":{},"body":{"injectables/ElementService.html":{}}}],["fertilizer.controller",{"_index":251,"title":{},"body":{"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{}}}],["fertilizer.dto",{"_index":565,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/UpdateFertilizerDto-1.html":{}}}],["fertilizer.dto.ts",{"_index":60,"title":{},"body":{"classes/AddFertilizerDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["fertilizer.dto.ts:14",{"_index":1012,"title":{},"body":{"classes/UpdateFertilizerDto.html":{}}}],["fertilizer.dto.ts:18",{"_index":69,"title":{},"body":{"classes/AddFertilizerDto.html":{}}}],["fertilizer.dto.ts:33",{"_index":309,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["fertilizer.dto.ts:35",{"_index":67,"title":{},"body":{"classes/AddFertilizerDto.html":{}}}],["fertilizer.dto.ts:47",{"_index":319,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["fertilizer.dto.ts:60",{"_index":308,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["fertilizer.dto.ts:91",{"_index":315,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["fertilizer.elements.find",{"_index":489,"title":{},"body":{"injectables/ElementService.html":{}}}],["fertilizer.elements.map(async",{"_index":502,"title":{},"body":{"injectables/ElementService.html":{}}}],["fertilizer.elements.push(newelement",{"_index":486,"title":{},"body":{"injectables/ElementService.html":{}}}],["fertilizer.kationes",{"_index":524,"title":{},"body":{"injectables/ElementService.html":{}}}],["fertilizer.name",{"_index":994,"title":{},"body":{"modules/SchemasModule.html":{}}}],["fertilizer.save",{"_index":487,"title":{},"body":{"injectables/ElementService.html":{}}}],["fertilizer.schema",{"_index":983,"title":{},"body":{"modules/SchemasModule.html":{}}}],["fertilizer.service",{"_index":252,"title":{},"body":{"modules/ConcentrateModule.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{}}}],["fertilizer.toobject",{"_index":638,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["fertilizer/fertilizer.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["fertilizercontroller",{"_index":248,"title":{"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{}},"body":{"modules/ConcentrateModule.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"coverage.html":{}}}],["fertilizerdocument",{"_index":458,"title":{},"body":{"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"miscellaneous/typealiases.html":{}}}],["fertilizerid",{"_index":420,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["fertilizermodel",{"_index":456,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{}}}],["fertilizermodule",{"_index":100,"title":{"modules/FertilizerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FertilizerModule.html":{},"modules.html":{},"overview.html":{}}}],["fertilizers",{"_index":149,"title":{},"body":{"classes/Concentrate.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{}}}],["fertilizers.foreach((f",{"_index":655,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["fertilizers/:fertilizerid/elements",{"_index":412,"title":{},"body":{"controllers/ElementController.html":{}}}],["fertilizerschema",{"_index":544,"title":{},"body":{"classes/Fertilizer.html":{},"modules/SchemasModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fertilizerservice",{"_index":245,"title":{"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{}},"body":{"modules/ConcentrateModule.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"coverage.html":{},"overview.html":{}}}],["fertilizertype",{"_index":316,"title":{},"body":{"classes/CreateFertilizerDto.html":{},"miscellaneous/enumerations.html":{}}}],["fertilizertype})@isenum(fertilizertype",{"_index":318,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["fertilizerunit",{"_index":681,"title":{"classes/FertilizerUnit.html":{}},"body":{"classes/FertilizerUnit.html":{},"injectables/FertilizerUnitService.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"coverage.html":{},"overview.html":{}}}],["fertilizerunit.name",{"_index":990,"title":{},"body":{"modules/SchemasModule.html":{}}}],["fertilizerunit.pumps",{"_index":877,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.pumps.find",{"_index":874,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.pumps.findindex",{"_index":884,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.pumps.map(async",{"_index":887,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.pumps.push(newpump",{"_index":870,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.pumps.splice(pumpindex",{"_index":886,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.pumps[pumpindex",{"_index":885,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.save",{"_index":871,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.solution.aniones",{"_index":899,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.solution.elements",{"_index":900,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunit.solution.kationes",{"_index":898,"title":{},"body":{"injectables/PumpService.html":{}}}],["fertilizerunitcontroller",{"_index":708,"title":{"controllers/FertilizerUnitController.html":{}},"body":{"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"coverage.html":{}}}],["fertilizerunitdocument",{"_index":707,"title":{},"body":{"classes/FertilizerUnit.html":{},"injectables/FertilizerUnitService.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{},"miscellaneous/typealiases.html":{}}}],["fertilizerunitid",{"_index":828,"title":{},"body":{"controllers/PumpController.html":{},"injectables/PumpService.html":{}}}],["fertilizerunitmodel",{"_index":751,"title":{},"body":{"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{}}}],["fertilizerunitmodule",{"_index":101,"title":{"modules/FertilizerUnitModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FertilizerUnitModule.html":{},"modules.html":{},"overview.html":{}}}],["fertilizerunitschema",{"_index":705,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fertilizerunitservice",{"_index":725,"title":{"injectables/FertilizerUnitService.html":{}},"body":{"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"coverage.html":{},"overview.html":{}}}],["fetching",{"_index":944,"title":{},"body":{"controllers/RecipeController.html":{}}}],["few",{"_index":1232,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"coverage.html":{},"classes/elementForm.html":{},"classes/solution.html":{}}}],["find",{"_index":857,"title":{},"body":{"injectables/PumpService.html":{}}}],["findall",{"_index":187,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["findall(@param('concentrateid",{"_index":570,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["findall(concentrateid",{"_index":554,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["findall(fertilizerunitid",{"_index":852,"title":{},"body":{"injectables/PumpService.html":{}}}],["findbyid(pump.concentrate",{"_index":889,"title":{},"body":{"injectables/PumpService.html":{}}}],["findbyidanddelete(id",{"_index":680,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["findbyidandupdate(id",{"_index":677,"title":{},"body":{"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["finding",{"_index":975,"title":{},"body":{"injectables/RecipeService.html":{}}}],["findone",{"_index":188,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["findone(@param",{"_index":1070,"title":{},"body":{"controllers/WaterController.html":{}}}],["findone(@param('id",{"_index":234,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/RecipeController.html":{}}}],["findone(fertilizerid",{"_index":421,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{}}}],["findone(fertilizerunitid",{"_index":855,"title":{},"body":{"injectables/PumpService.html":{}}}],["findone(id",{"_index":202,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["findone(params",{"_index":586,"title":{},"body":{"controllers/FertilizerController-1.html":{},"controllers/WaterController.html":{}}}],["finds",{"_index":201,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["flatmap((f",{"_index":641,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["flow",{"_index":151,"title":{},"body":{"classes/Concentrate.html":{},"classes/CreatePumpDto.html":{},"classes/UpdatePumpDto.html":{}}}],["flowrate",{"_index":338,"title":{},"body":{"classes/CreatePumpDto.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"classes/UpdatePumpDto.html":{}}}],["follow",{"_index":1268,"title":{},"body":{"index.html":{}}}],["form",{"_index":291,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["forms",{"_index":1124,"title":{},"body":{"classes/baseElement.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":446,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["framework",{"_index":1205,"title":{},"body":{"index.html":{}}}],["full",{"_index":1264,"title":{},"body":{"index.html":{}}}],["function",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1199,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g/l",{"_index":63,"title":{},"body":{"classes/AddFertilizerDto.html":{}}}],["get(':elementid",{"_index":423,"title":{},"body":{"controllers/ElementController.html":{}}}],["get(':id",{"_index":203,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["get(':pumpid",{"_index":822,"title":{},"body":{"controllers/PumpController.html":{}}}],["gethello",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1201,"title":{"index.html":{}},"body":{}}],["given",{"_index":556,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["graph",{"_index":1255,"title":{},"body":{"index.html":{}}}],["grow",{"_index":1279,"title":{},"body":{"index.html":{}}}],["h3bo3",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hands",{"_index":1248,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1235,"title":{},"body":{"index.html":{}}}],["hello",{"_index":143,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1262,"title":{},"body":{"index.html":{}}}],["here",{"_index":1287,"title":{},"body":{"index.html":{}}}],["http",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["httpexception",{"_index":934,"title":{},"body":{"controllers/RecipeController.html":{}}}],["httpexception('error",{"_index":941,"title":{},"body":{"controllers/RecipeController.html":{}}}],["httpexception('recipe",{"_index":946,"title":{},"body":{"controllers/RecipeController.html":{}}}],["https://nestjs.com",{"_index":1293,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":935,"title":{},"body":{"controllers/RecipeController.html":{}}}],["httpstatus.bad_request",{"_index":942,"title":{},"body":{"controllers/RecipeController.html":{}}}],["httpstatus.not_found",{"_index":947,"title":{},"body":{"controllers/RecipeController.html":{}}}],["id",{"_index":25,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"classes/IdParamDto.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["identifier",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["idparamdto",{"_index":587,"title":{"classes/IdParamDto.html":{}},"body":{"controllers/FertilizerController-1.html":{},"classes/IdParamDto.html":{},"controllers/WaterController.html":{},"coverage.html":{}}}],["ielement",{"_index":765,"title":{"interfaces/IElement.html":{}},"body":{"interfaces/IElement.html":{},"coverage.html":{},"classes/solution.html":{}}}],["implements",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/Concentrate.html":{},"injectables/LoggerMiddleware.html":{}}}],["import",{"_index":38,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/elementForm.html":{}}}],["imports",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/solution.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"classes/solution.html":{}}}],["injectable",{"_index":139,"title":{"injectables/AppService.html":{},"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{},"coverage.html":{}}}],["injectables",{"_index":140,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{},"overview.html":{}}}],["injectmodel",{"_index":267,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["injectmodel(concentrate.name",{"_index":269,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["injectmodel(element.name",{"_index":480,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["injectmodel(fertilizer.name",{"_index":479,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{}}}],["injectmodel(fertilizerunit.name",{"_index":758,"title":{},"body":{"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{}}}],["injectmodel(pump.name",{"_index":861,"title":{},"body":{"injectables/PumpService.html":{}}}],["injectmodel(recipe.name",{"_index":968,"title":{},"body":{"injectables/RecipeService.html":{}}}],["injectmodel(water.name",{"_index":1103,"title":{},"body":{"injectables/WaterService.html":{}}}],["installcompile",{"_index":1219,"title":{},"body":{"index.html":{}}}],["instance",{"_index":230,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["integration",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["interact",{"_index":1256,"title":{},"body":{"index.html":{}}}],["interface",{"_index":180,"title":{"interfaces/IElement.html":{}},"body":{"classes/Concentrate.html":{},"interfaces/IElement.html":{},"coverage.html":{},"overview.html":{},"classes/solution.html":{}}}],["interfaces",{"_index":766,"title":{},"body":{"interfaces/IElement.html":{}}}],["internalservererrorexception",{"_index":593,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["internalservererrorexception('failed",{"_index":598,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["ion",{"_index":696,"title":{"classes/Ion.html":{}},"body":{"classes/FertilizerUnit.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"coverage.html":{},"overview.html":{}}}],["ion.name",{"_index":996,"title":{},"body":{"modules/SchemasModule.html":{}}}],["ion.schema",{"_index":697,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{}}}],["iondocument",{"_index":776,"title":{},"body":{"classes/Ion.html":{},"miscellaneous/typealiases.html":{}}}],["ione",{"_index":1191,"title":{},"body":{"classes/elementForm.html":{},"miscellaneous/variables.html":{}}}],["iones",{"_index":702,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{}}}],["ionesconcentration",{"_index":519,"title":{},"body":{"injectables/ElementService.html":{}}}],["ionic",{"_index":845,"title":{},"body":{"injectables/PumpService.html":{}}}],["ionschema",{"_index":777,"title":{},"body":{"classes/Ion.html":{},"modules/SchemasModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iron",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isarray",{"_index":394,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["isenum",{"_index":320,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["isenum(fertilizertype",{"_index":323,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["ismongoid",{"_index":42,"title":{},"body":{"classes/AddElementDto.html":{},"classes/IdParamDto.html":{}}}],["isnotempty",{"_index":300,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateWaterDto.html":{}}}],["isnumber",{"_index":41,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateWaterDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdatePumpDto.html":{}}}],["isnumber()@isnotempty",{"_index":389,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["isnumber()@optional()@min(0)@max(100",{"_index":1007,"title":{},"body":{"classes/UpdateElementDto.html":{}}}],["isoptional",{"_index":301,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreateWaterDto.html":{},"classes/UpdatePumpDto.html":{}}}],["ispositive",{"_index":70,"title":{},"body":{"classes/AddFertilizerDto.html":{}}}],["isstring",{"_index":45,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateWaterDto.html":{},"classes/IdParamDto.html":{},"classes/UpdatePumpDto.html":{}}}],["isstring()@ismongoid",{"_index":769,"title":{},"body":{"classes/IdParamDto.html":{}}}],["isstring()@isnotempty",{"_index":391,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["isstring()@isoptional",{"_index":387,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["item.element",{"_index":649,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["items",{"_index":156,"title":{},"body":{"classes/Concentrate.html":{}}}],["job",{"_index":1272,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1274,"title":{},"body":{"index.html":{}}}],["join",{"_index":1285,"title":{},"body":{"index.html":{}}}],["json.stringify(fertilizerunit",{"_index":865,"title":{},"body":{"injectables/PumpService.html":{}}}],["json.stringify(newpump",{"_index":869,"title":{},"body":{"injectables/PumpService.html":{}}}],["k",{"_index":362,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["k2o",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":1290,"title":{},"body":{"index.html":{}}}],["kationes",{"_index":150,"title":{},"body":{"classes/Concentrate.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"classes/FertilizerUnit.html":{},"interfaces/IElement.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{},"classes/solution.html":{}}}],["kg",{"_index":543,"title":{},"body":{"classes/Fertilizer.html":{}}}],["learn",{"_index":1239,"title":{},"body":{"index.html":{}}}],["legend",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"overview.html":{}}}],["license",{"_index":1296,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1277,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1270,"title":{},"body":{"index.html":{}}}],["liquid",{"_index":322,"title":{},"body":{"classes/CreateFertilizerDto.html":{},"classes/Fertilizer.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":531,"title":{},"body":{"classes/Fertilizer.html":{},"classes/Solution.html":{},"classes/Water.html":{}}}],["logger",{"_index":246,"title":{},"body":{"modules/ConcentrateModule.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PumpService.html":{},"overview.html":{}}}],["logger('http",{"_index":789,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger(elementcontroller.name",{"_index":439,"title":{},"body":{"controllers/ElementController.html":{}}}],["logger(elementservice.name",{"_index":469,"title":{},"body":{"injectables/ElementService.html":{}}}],["logger(fertilizerservice.name",{"_index":620,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["logger(pumpservice.name",{"_index":860,"title":{},"body":{"injectables/PumpService.html":{}}}],["loggermiddleware",{"_index":130,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["looking",{"_index":1271,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1267,"title":{},"body":{"index.html":{}}}],["magnesium",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managing",{"_index":185,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["manganese",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":57,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"coverage.html":{},"dependencies.html":{},"classes/elementForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/solution.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs",{"_index":520,"title":{},"body":{"injectables/ElementService.html":{}}}],["max",{"_index":43,"title":{},"body":{"classes/AddElementDto.html":{},"classes/UpdateElementDto.html":{}}}],["max(100",{"_index":55,"title":{},"body":{"classes/AddElementDto.html":{},"classes/UpdateElementDto.html":{}}}],["maxflowrate",{"_index":339,"title":{},"body":{"classes/CreatePumpDto.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"classes/UpdatePumpDto.html":{}}}],["maximum",{"_index":348,"title":{},"body":{"classes/CreatePumpDto.html":{},"classes/UpdatePumpDto.html":{}}}],["memberof",{"_index":50,"title":{},"body":{"classes/AddElementDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{}}}],["message",{"_index":499,"title":{},"body":{"injectables/ElementService.html":{}}}],["metadata",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":793,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["methods",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["mg",{"_index":363,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["mg+2",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mgo",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middlewareconsumer",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["min",{"_index":44,"title":{},"body":{"classes/AddElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/Ion.html":{},"classes/UpdateElementDto.html":{}}}],["min(0",{"_index":54,"title":{},"body":{"classes/AddElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/UpdateElementDto.html":{}}}],["minflowrate",{"_index":340,"title":{},"body":{"classes/CreatePumpDto.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"classes/UpdatePumpDto.html":{}}}],["minimum",{"_index":65,"title":{},"body":{"classes/AddFertilizerDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/UpdatePumpDto.html":{}}}],["miscellaneous",{"_index":1196,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1276,"title":{},"body":{"index.html":{}}}],["mmass",{"_index":1125,"title":{},"body":{"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"miscellaneous/variables.html":{}}}],["mn",{"_index":364,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["mn+2",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mno",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mo",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":1223,"title":{},"body":{"index.html":{}}}],["model",{"_index":255,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["module",{"_index":87,"title":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"overview.html":{}}}],["modules",{"_index":89,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"modules.html":{},"overview.html":{}}}],["molybdenum",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":48,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"injectables/ConcentrateService.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"injectables/FertilizerUnitService.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/Water.html":{},"injectables/WaterService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":982,"title":{},"body":{"modules/SchemasModule.html":{}}}],["mongoosemodule.forfeature",{"_index":989,"title":{},"body":{"modules/SchemasModule.html":{}}}],["mongoosemodule.forroot('mongodb://ddweed.org/surinagro",{"_index":988,"title":{},"body":{"modules/SchemasModule.html":{}}}],["more",{"_index":1240,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1291,"title":{},"body":{"index.html":{}}}],["n",{"_index":365,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["na",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/AddElementDto.html":{},"modules/AppModule.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/elementForm.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":1261,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1212,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1295,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1237,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/UpdateElementDto.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["nestjs/devtools",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1005,"title":{},"body":{"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":171,"title":{},"body":{"classes/Concentrate.html":{},"injectables/ConcentrateService.html":{},"classes/CreateRecipeDto.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"injectables/FertilizerUnitService.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateFertilizerDto.html":{},"classes/Water.html":{},"injectables/WaterService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":40,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"controllers/WaterController.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":791,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":196,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateElementDto.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/UpdateFertilizerDto.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"coverage.html":{}}}],["newconcentrate",{"_index":275,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["newconcentrate.save",{"_index":277,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["newelement",{"_index":484,"title":{},"body":{"injectables/ElementService.html":{}}}],["newfertilizer",{"_index":669,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["newfertilizer.save",{"_index":671,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["newly",{"_index":198,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["newpump",{"_index":866,"title":{},"body":{"injectables/PumpService.html":{}}}],["next",{"_index":785,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nextfunction",{"_index":786,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nh4",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ni",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ni+2",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nickel",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nitrate",{"_index":174,"title":{},"body":{"classes/Concentrate.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateFertilizerDto.html":{},"miscellaneous/variables.html":{}}}],["nitrate'})@prop({required",{"_index":166,"title":{},"body":{"classes/Concentrate.html":{}}}],["nitrate.'})@prop",{"_index":161,"title":{},"body":{"classes/Concentrate.html":{}}}],["nitrogen",{"_index":52,"title":{},"body":{"classes/AddElementDto.html":{},"classes/Concentrate.html":{},"classes/Element.html":{},"miscellaneous/variables.html":{}}}],["nitrogen'})@isstring",{"_index":36,"title":{},"body":{"classes/AddElementDto.html":{}}}],["nitrogen'})@prop({required",{"_index":404,"title":{},"body":{"classes/Element.html":{}}}],["no3",{"_index":406,"title":{},"body":{"classes/Element.html":{},"miscellaneous/variables.html":{}}}],["no3'})@prop({required",{"_index":402,"title":{},"body":{"classes/Element.html":{}}}],["node.js",{"_index":1204,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":445,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/PumpService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["notfoundexception('concentrate",{"_index":890,"title":{},"body":{"injectables/PumpService.html":{}}}],["notfoundexception('fertilizer",{"_index":603,"title":{},"body":{"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["notfoundexception('pump",{"_index":876,"title":{},"body":{"injectables/PumpService.html":{}}}],["notfoundexception(`element",{"_index":492,"title":{},"body":{"injectables/ElementService.html":{}}}],["notfoundexception(`fertilizer",{"_index":674,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["notfoundexception(error.message",{"_index":528,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService-1.html":{},"injectables/WaterService.html":{}}}],["npm",{"_index":1218,"title":{},"body":{"index.html":{}}}],["null",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":32,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"interfaces/IElement.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"classes/solution.html":{}}}],["number})@isnumber()@isnotempty",{"_index":293,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["number})@isnumber()@isoptional",{"_index":1018,"title":{},"body":{"classes/UpdatePumpDto.html":{}}}],["number})@prop({type",{"_index":153,"title":{},"body":{"classes/Concentrate.html":{}}}],["object",{"_index":11,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"controllers/WaterController.html":{}}}],["object.keys(updatepumpdto).foreach((key",{"_index":878,"title":{},"body":{"injectables/PumpService.html":{}}}],["offer",{"_index":1273,"title":{},"body":{"index.html":{}}}],["official",{"_index":1250,"title":{},"body":{"index.html":{}}}],["onductivitycoefficient",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":1278,"title":{},"body":{"index.html":{}}}],["optional",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreateWaterDto.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/UpdateElementDto.html":{},"classes/UpdatePumpDto.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["originalurl",{"_index":794,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["out",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1300,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["oxide",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p",{"_index":366,"title":{},"body":{"classes/CreateRecipeDto.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["p._id.tostring",{"_index":875,"title":{},"body":{"injectables/PumpService.html":{}}}],["p2o5",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":1169,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":218,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["param('concentrateid",{"_index":572,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["param('elementid",{"_index":443,"title":{},"body":{"controllers/ElementController.html":{},"controllers/WaterController.html":{}}}],["param('fertilizerid",{"_index":441,"title":{},"body":{"controllers/ElementController.html":{},"controllers/FertilizerController.html":{}}}],["param('fertilizerunitid",{"_index":831,"title":{},"body":{"controllers/PumpController.html":{}}}],["param('id",{"_index":236,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["param('pumpid",{"_index":833,"title":{},"body":{"controllers/PumpController.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["params",{"_index":589,"title":{},"body":{"controllers/FertilizerController-1.html":{},"controllers/WaterController.html":{}}}],["part",{"_index":1263,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1004,"title":{},"body":{"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{}}}],["partialtype(createconcentratedto",{"_index":1003,"title":{},"body":{"classes/UpdateConcentrateDto.html":{}}}],["partialtype(createelementdto",{"_index":1010,"title":{},"body":{"classes/UpdateElementDto-1.html":{}}}],["partialtype(createfertilizerdto",{"_index":1014,"title":{},"body":{"classes/UpdateFertilizerDto-1.html":{}}}],["partialtype(createrecipedto",{"_index":1024,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["partialtype(createwaterdto",{"_index":1026,"title":{},"body":{"classes/UpdateWaterDto.html":{}}}],["patch",{"_index":217,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["patch(':elementid",{"_index":448,"title":{},"body":{"controllers/ElementController.html":{}}}],["patch(':elementid')@usepipes(validationpipe",{"_index":430,"title":{},"body":{"controllers/ElementController.html":{}}}],["patch(':fertilizerid",{"_index":562,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["patch(':id",{"_index":212,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["patch(':id')@usepipes(new",{"_index":723,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["patch(':id/elements/:elementid",{"_index":1059,"title":{},"body":{"controllers/WaterController.html":{}}}],["patch(':pumpid",{"_index":835,"title":{},"body":{"controllers/PumpController.html":{}}}],["patch(':pumpid')@usepipes(new",{"_index":826,"title":{},"body":{"controllers/PumpController.html":{}}}],["path",{"_index":567,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["per",{"_index":542,"title":{},"body":{"classes/Fertilizer.html":{}}}],["percent",{"_index":33,"title":{},"body":{"classes/AddElementDto.html":{},"classes/Element.html":{}}}],["ph",{"_index":386,"title":{},"body":{"classes/CreateWaterDto.html":{},"classes/Water.html":{}}}],["phosphate",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phosphorus",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":1243,"title":{},"body":{"index.html":{}}}],["po4",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":193,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["post(':id/elements",{"_index":1047,"title":{},"body":{"controllers/WaterController.html":{}}}],["post()@usepipes(new",{"_index":715,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{}}}],["post()@usepipes(validationpipe",{"_index":417,"title":{},"body":{"controllers/ElementController.html":{}}}],["potassium",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":183,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/ElementController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["price",{"_index":306,"title":{},"body":{"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/Fertilizer.html":{}}}],["private",{"_index":270,"title":{},"body":{"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["process.env.node_env",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":1203,"title":{},"body":{"index.html":{}}}],["project",{"_index":1216,"title":{},"body":{"index.html":{}}}],["promise",{"_index":259,"title":{},"body":{"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["promise.all",{"_index":622,"title":{},"body":{"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["prop",{"_index":169,"title":{},"body":{"classes/Concentrate.html":{},"classes/CreateRecipeDto.html":{},"classes/Element.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/UpdateFertilizerDto.html":{},"classes/Water.html":{}}}],["prop({enum",{"_index":539,"title":{},"body":{"classes/Fertilizer.html":{}}}],["prop({required",{"_index":378,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Water.html":{}}}],["prop({type",{"_index":369,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/Water.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{}},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService.html":{},"classes/FertilizerUnit.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"properties.html":{},"classes/solution.html":{}}}],["providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"overview.html":{}}}],["pump",{"_index":337,"title":{"classes/Pump.html":{}},"body":{"classes/CreatePumpDto.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdatePumpDto.html":{},"coverage.html":{},"overview.html":{}}}],["pump.controller",{"_index":746,"title":{},"body":{"modules/FertilizerUnitModule.html":{}}}],["pump.dto",{"_index":829,"title":{},"body":{"controllers/PumpController.html":{},"injectables/PumpService.html":{}}}],["pump.dto.ts",{"_index":336,"title":{},"body":{"classes/CreatePumpDto.html":{},"classes/UpdatePumpDto.html":{},"coverage.html":{}}}],["pump.dto.ts:17",{"_index":1017,"title":{},"body":{"classes/UpdatePumpDto.html":{}}}],["pump.dto.ts:19",{"_index":353,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["pump.dto.ts:28",{"_index":1022,"title":{},"body":{"classes/UpdatePumpDto.html":{}}}],["pump.dto.ts:31",{"_index":344,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["pump.dto.ts:39",{"_index":1021,"title":{},"body":{"classes/UpdatePumpDto.html":{}}}],["pump.dto.ts:44",{"_index":352,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["pump.dto.ts:50",{"_index":1016,"title":{},"body":{"classes/UpdatePumpDto.html":{}}}],["pump.dto.ts:57",{"_index":350,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["pump.dto.ts:61",{"_index":1020,"title":{},"body":{"classes/UpdatePumpDto.html":{}}}],["pump.dto.ts:70",{"_index":342,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["pump.dto.ts:72",{"_index":1019,"title":{},"body":{"classes/UpdatePumpDto.html":{}}}],["pump.dto.ts:83",{"_index":347,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["pump.dto.ts:96",{"_index":346,"title":{},"body":{"classes/CreatePumpDto.html":{}}}],["pump.factor",{"_index":892,"title":{},"body":{"injectables/PumpService.html":{}}}],["pump.flowrate",{"_index":891,"title":{},"body":{"injectables/PumpService.html":{}}}],["pump.name",{"_index":991,"title":{},"body":{"modules/SchemasModule.html":{}}}],["pump.service",{"_index":747,"title":{},"body":{"modules/FertilizerUnitModule.html":{},"controllers/PumpController.html":{}}}],["pump[key",{"_index":879,"title":{},"body":{"injectables/PumpService.html":{}}}],["pumpcontroller",{"_index":744,"title":{"controllers/PumpController.html":{}},"body":{"modules/FertilizerUnitModule.html":{},"controllers/PumpController.html":{},"coverage.html":{}}}],["pumpdocument",{"_index":700,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{},"miscellaneous/typealiases.html":{}}}],["pumpid",{"_index":819,"title":{},"body":{"controllers/PumpController.html":{},"injectables/PumpService.html":{}}}],["pumpindex",{"_index":883,"title":{},"body":{"injectables/PumpService.html":{}}}],["pumpmodel",{"_index":841,"title":{},"body":{"injectables/PumpService.html":{}}}],["pumps",{"_index":684,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{}}}],["pumpschema",{"_index":698,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pumpservice",{"_index":742,"title":{"injectables/PumpService.html":{}},"body":{"modules/FertilizerUnitModule.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"coverage.html":{},"overview.html":{}}}],["questions",{"_index":1241,"title":{},"body":{"index.html":{}}}],["rate",{"_index":152,"title":{},"body":{"classes/Concentrate.html":{},"classes/CreatePumpDto.html":{},"classes/UpdatePumpDto.html":{}}}],["read",{"_index":1286,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["real",{"_index":1257,"title":{},"body":{"index.html":{}}}],["recipe",{"_index":685,"title":{"classes/Recipe.html":{}},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"coverage.html":{},"overview.html":{}}}],["recipe.controller",{"_index":957,"title":{},"body":{"modules/RecipeModule.html":{}}}],["recipe.dto",{"_index":936,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts",{"_index":358,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["recipe.dto.ts:11",{"_index":380,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:14",{"_index":374,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:17",{"_index":371,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:20",{"_index":375,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:23",{"_index":381,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:26",{"_index":373,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:29",{"_index":376,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:32",{"_index":382,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:35",{"_index":372,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:38",{"_index":370,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:5",{"_index":379,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:8",{"_index":377,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.name",{"_index":993,"title":{},"body":{"modules/SchemasModule.html":{}}}],["recipe.schema",{"_index":984,"title":{},"body":{"modules/SchemasModule.html":{}}}],["recipe.service",{"_index":933,"title":{},"body":{"controllers/RecipeController.html":{},"modules/RecipeModule.html":{}}}],["recipe/recipe.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["recipecontroller",{"_index":917,"title":{"controllers/RecipeController.html":{}},"body":{"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"coverage.html":{}}}],["recipedocument",{"_index":916,"title":{},"body":{"classes/Recipe.html":{},"miscellaneous/typealiases.html":{}}}],["recipemodel",{"_index":961,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipemodule",{"_index":102,"title":{"modules/RecipeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RecipeModule.html":{},"modules.html":{},"overview.html":{}}}],["recipes",{"_index":919,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["recipeschema",{"_index":914,"title":{},"body":{"classes/Recipe.html":{},"modules/SchemasModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipeservice",{"_index":932,"title":{"injectables/RecipeService.html":{}},"body":{"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"coverage.html":{},"overview.html":{}}}],["record",{"_index":701,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{}}}],["reduce((acc",{"_index":645,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["ref",{"_index":691,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{}}}],["reflect",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":189,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{}}}],["remove(@param('id",{"_index":238,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["remove(fertilizerid",{"_index":425,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{}}}],["remove(id",{"_index":206,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{}}}],["removed",{"_index":265,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{}}}],["removeelement",{"_index":1043,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["removeelement(id",{"_index":1055,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["removefertilizer",{"_index":548,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["removefertilizer(concentrateid",{"_index":557,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["removes",{"_index":264,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/ElementService.html":{},"injectables/FertilizerService.html":{}}}],["repository",{"_index":1215,"title":{},"body":{"index.html":{}}}],["req",{"_index":788,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request",{"_index":782,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["required",{"_index":173,"title":{},"body":{"classes/Concentrate.html":{},"classes/CreateRecipeDto.html":{},"classes/Element.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/UpdateFertilizerDto.html":{},"classes/Water.html":{}}}],["res",{"_index":783,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["res.on('finish",{"_index":797,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"overview.html":{}}}],["resources",{"_index":1233,"title":{},"body":{"index.html":{}}}],["response",{"_index":784,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["results",{"_index":56,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"coverage.html":{},"dependencies.html":{},"classes/elementForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/solution.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":278,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["retrieve",{"_index":601,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["retrieved",{"_index":599,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["return",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["run",{"_index":1220,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":367,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":1208,"title":{},"body":{"index.html":{}}}],["schema",{"_index":146,"title":{},"body":{"classes/Concentrate.html":{},"classes/Element.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"injectables/FertilizerUnitService.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/Water.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":170,"title":{},"body":{"classes/Concentrate.html":{},"classes/Element.html":{},"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"classes/Recipe.html":{},"classes/Solution.html":{},"classes/Water.html":{}}}],["schemafactory.createforclass(concentrate",{"_index":177,"title":{},"body":{"classes/Concentrate.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(element",{"_index":408,"title":{},"body":{"classes/Element.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(fertilizer",{"_index":545,"title":{},"body":{"classes/Fertilizer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(fertilizerunit",{"_index":706,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(ion",{"_index":778,"title":{},"body":{"classes/Ion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(pump",{"_index":699,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(recipe",{"_index":915,"title":{},"body":{"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(solution",{"_index":703,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(water",{"_index":1035,"title":{},"body":{"classes/Water.html":{},"miscellaneous/variables.html":{}}}],["schemas/fertilizer.schema",{"_index":668,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["schemas/water.schema",{"_index":1100,"title":{},"body":{"injectables/WaterService.html":{}}}],["schemasmodule",{"_index":244,"title":{"modules/SchemasModule.html":{}},"body":{"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"modules.html":{},"overview.html":{}}}],["search",{"_index":873,"title":{},"body":{"injectables/PumpService.html":{}}}],["server",{"_index":1209,"title":{},"body":{"index.html":{}}}],["service",{"_index":229,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["setup",{"_index":1217,"title":{},"body":{"index.html":{}}}],["shared/types/baseelement",{"_index":476,"title":{},"body":{"injectables/ElementService.html":{}}}],["shared/types/elementform",{"_index":474,"title":{},"body":{"injectables/ElementService.html":{}}}],["si",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["si+4",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1210,"title":{},"body":{"index.html":{}}}],["silicon",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":205,"title":{},"body":{"controllers/ConcentrateController.html":{},"controllers/FertilizerController-1.html":{},"controllers/FertilizerUnitController.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["so4",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket.io",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["sodium",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":321,"title":{},"body":{"classes/CreateFertilizerDto.html":{},"classes/Fertilizer.html":{},"miscellaneous/enumerations.html":{}}}],["solution",{"_index":686,"title":{"classes/Solution.html":{},"classes/solution.html":{}},"body":{"classes/FertilizerUnit.html":{},"interfaces/IElement.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{},"coverage.html":{},"classes/solution.html":{}}}],["solutiondocument",{"_index":704,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"miscellaneous/typealiases.html":{}}}],["solutionschema",{"_index":693,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"modules/ConcentrateModule.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"modules/FertilizerModule.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"modules/RecipeModule.html":{},"injectables/RecipeService.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"index.html":{},"classes/solution.html":{}}}],["specific",{"_index":851,"title":{},"body":{"injectables/PumpService.html":{}}}],["specified",{"_index":262,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/FertilizerService-1.html":{},"injectables/FertilizerUnitService.html":{},"injectables/RecipeService.html":{}}}],["sponsors",{"_index":1281,"title":{},"body":{"index.html":{}}}],["src/.../concentrate.schema.ts",{"_index":1312,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../element.schema.ts",{"_index":1313,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../elementbase.ts",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fertilizer",{"_index":1315,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../fertilizer.schema.ts",{"_index":1314,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ion.schema.ts",{"_index":1316,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../recipe.schema.ts",{"_index":1317,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../water.schema.ts",{"_index":1318,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:29",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":142,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/logger.middlewware.ts",{"_index":779,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/logger.middlewware.ts:6",{"_index":790,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/logger.middlewware.ts:8",{"_index":787,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/concentrate/concentrate.controller.ts",{"_index":182,"title":{},"body":{"controllers/ConcentrateController.html":{},"coverage.html":{}}}],["src/concentrate/concentrate.controller.ts:34",{"_index":194,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["src/concentrate/concentrate.controller.ts:43",{"_index":200,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["src/concentrate/concentrate.controller.ts:53",{"_index":204,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["src/concentrate/concentrate.controller.ts:64",{"_index":213,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["src/concentrate/concentrate.controller.ts:76",{"_index":208,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["src/concentrate/concentrate.module.ts",{"_index":247,"title":{},"body":{"modules/ConcentrateModule.html":{}}}],["src/concentrate/concentrate.service.ts",{"_index":253,"title":{},"body":{"injectables/ConcentrateService.html":{},"coverage.html":{}}}],["src/concentrate/concentrate.service.ts:12",{"_index":256,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["src/concentrate/concentrate.service.ts:28",{"_index":258,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["src/concentrate/concentrate.service.ts:40",{"_index":260,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["src/concentrate/concentrate.service.ts:50",{"_index":261,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["src/concentrate/concentrate.service.ts:60",{"_index":266,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["src/concentrate/concentrate.service.ts:74",{"_index":263,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["src/concentrate/dto/add",{"_index":59,"title":{},"body":{"classes/AddFertilizerDto.html":{},"coverage.html":{}}}],["src/concentrate/dto/create",{"_index":283,"title":{},"body":{"classes/CreateConcentrateDto.html":{},"coverage.html":{}}}],["src/concentrate/dto/update",{"_index":1002,"title":{},"body":{"classes/UpdateConcentrateDto.html":{},"classes/UpdateFertilizerDto.html":{},"coverage.html":{}}}],["src/concentrate/fertilizer.controller.ts",{"_index":546,"title":{},"body":{"controllers/FertilizerController.html":{},"coverage.html":{}}}],["src/concentrate/fertilizer.controller.ts:34",{"_index":555,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["src/concentrate/fertilizer.controller.ts:45",{"_index":551,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["src/concentrate/fertilizer.controller.ts:63",{"_index":563,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["src/concentrate/fertilizer.controller.ts:82",{"_index":559,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["src/concentrate/fertilizer.service.ts",{"_index":612,"title":{},"body":{"injectables/FertilizerService.html":{},"coverage.html":{}}}],["src/concentrate/fertilizer.service.ts:102",{"_index":618,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["src/concentrate/fertilizer.service.ts:121",{"_index":616,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["src/concentrate/fertilizer.service.ts:20",{"_index":613,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["src/concentrate/fertilizer.service.ts:38",{"_index":617,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["src/concentrate/fertilizer.service.ts:55",{"_index":614,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["src/concentrate/fertilizer.service.ts:74",{"_index":619,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["src/fertilizer",{"_index":327,"title":{},"body":{"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"coverage.html":{}}}],["src/fertilizer/dto/add",{"_index":6,"title":{},"body":{"classes/AddElementDto.html":{},"coverage.html":{}}}],["src/fertilizer/dto/create",{"_index":305,"title":{},"body":{"classes/CreateFertilizerDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/fertilizer/dto/update",{"_index":1006,"title":{},"body":{"classes/UpdateElementDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"coverage.html":{}}}],["src/fertilizer/element.controller.ts",{"_index":411,"title":{},"body":{"controllers/ElementController.html":{},"coverage.html":{}}}],["src/fertilizer/element.controller.ts:45",{"_index":418,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/fertilizer/element.controller.ts:58",{"_index":424,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/fertilizer/element.controller.ts:76",{"_index":431,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/fertilizer/element.controller.ts:96",{"_index":427,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/fertilizer/element.service.ts",{"_index":451,"title":{},"body":{"injectables/ElementService.html":{},"coverage.html":{}}}],["src/fertilizer/element.service.ts:133",{"_index":465,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/fertilizer/element.service.ts:158",{"_index":459,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/fertilizer/element.service.ts:20",{"_index":455,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/fertilizer/element.service.ts:40",{"_index":463,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/fertilizer/element.service.ts:64",{"_index":464,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/fertilizer/element.service.ts:90",{"_index":466,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/fertilizer/fertilizer.controller.ts",{"_index":576,"title":{},"body":{"controllers/FertilizerController-1.html":{},"coverage.html":{}}}],["src/fertilizer/fertilizer.controller.ts:112",{"_index":583,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["src/fertilizer/fertilizer.controller.ts:38",{"_index":580,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["src/fertilizer/fertilizer.controller.ts:54",{"_index":584,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["src/fertilizer/fertilizer.controller.ts:71",{"_index":588,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["src/fertilizer/fertilizer.controller.ts:91",{"_index":591,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["src/fertilizer/fertilizer.module.ts",{"_index":610,"title":{},"body":{"modules/FertilizerModule.html":{}}}],["src/fertilizer/fertilizer.service.ts",{"_index":661,"title":{},"body":{"injectables/FertilizerService-1.html":{},"coverage.html":{}}}],["src/fertilizer/fertilizer.service.ts:13",{"_index":662,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["src/fertilizer/fertilizer.service.ts:29",{"_index":663,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["src/fertilizer/fertilizer.service.ts:41",{"_index":665,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["src/fertilizer/fertilizer.service.ts:50",{"_index":666,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["src/fertilizer/fertilizer.service.ts:69",{"_index":667,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["src/fertilizer/fertilizer.service.ts:92",{"_index":664,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["src/main.ts",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/recipe/dto/create",{"_index":357,"title":{},"body":{"classes/CreateRecipeDto.html":{},"coverage.html":{}}}],["src/recipe/dto/update",{"_index":1023,"title":{},"body":{"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["src/recipe/recipe.controller.ts",{"_index":918,"title":{},"body":{"controllers/RecipeController.html":{},"coverage.html":{}}}],["src/recipe/recipe.controller.ts:36",{"_index":924,"title":{},"body":{"controllers/RecipeController.html":{}}}],["src/recipe/recipe.controller.ts:50",{"_index":927,"title":{},"body":{"controllers/RecipeController.html":{}}}],["src/recipe/recipe.controller.ts:65",{"_index":928,"title":{},"body":{"controllers/RecipeController.html":{}}}],["src/recipe/recipe.controller.ts:81",{"_index":931,"title":{},"body":{"controllers/RecipeController.html":{}}}],["src/recipe/recipe.controller.ts:99",{"_index":926,"title":{},"body":{"controllers/RecipeController.html":{}}}],["src/recipe/recipe.module.ts",{"_index":956,"title":{},"body":{"modules/RecipeModule.html":{}}}],["src/recipe/recipe.service.ts",{"_index":958,"title":{},"body":{"injectables/RecipeService.html":{},"coverage.html":{}}}],["src/recipe/recipe.service.ts:12",{"_index":960,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/recipe/recipe.service.ts:27",{"_index":962,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/recipe/recipe.service.ts:40",{"_index":964,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/recipe/recipe.service.ts:53",{"_index":965,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/recipe/recipe.service.ts:67",{"_index":966,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/recipe/recipe.service.ts:85",{"_index":963,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/schemas/concentrate.schema",{"_index":268,"title":{},"body":{"injectables/ConcentrateService.html":{},"injectables/FertilizerService.html":{},"injectables/PumpService.html":{}}}],["src/schemas/concentrate.schema.ts",{"_index":145,"title":{},"body":{"classes/Concentrate.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/concentrate.schema.ts:106",{"_index":154,"title":{},"body":{"classes/Concentrate.html":{}}}],["src/schemas/concentrate.schema.ts:119",{"_index":165,"title":{},"body":{"classes/Concentrate.html":{}}}],["src/schemas/concentrate.schema.ts:22",{"_index":168,"title":{},"body":{"classes/Concentrate.html":{}}}],["src/schemas/concentrate.schema.ts:35",{"_index":162,"title":{},"body":{"classes/Concentrate.html":{}}}],["src/schemas/concentrate.schema.ts:64",{"_index":163,"title":{},"body":{"classes/Concentrate.html":{}}}],["src/schemas/concentrate.schema.ts:93",{"_index":158,"title":{},"body":{"classes/Concentrate.html":{}}}],["src/schemas/element.schema",{"_index":397,"title":{},"body":{"classes/CreateWaterDto.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["src/schemas/element.schema.ts",{"_index":398,"title":{},"body":{"classes/Element.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/element.schema.ts:21",{"_index":399,"title":{},"body":{"classes/Element.html":{}}}],["src/schemas/element.schema.ts:35",{"_index":405,"title":{},"body":{"classes/Element.html":{}}}],["src/schemas/element.schema.ts:48",{"_index":401,"title":{},"body":{"classes/Element.html":{}}}],["src/schemas/element.schema.ts:62",{"_index":403,"title":{},"body":{"classes/Element.html":{}}}],["src/schemas/fertilizer",{"_index":682,"title":{},"body":{"classes/FertilizerUnit.html":{},"injectables/FertilizerUnitService.html":{},"classes/Pump.html":{},"injectables/PumpService.html":{},"classes/Solution.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/fertilizer.schema",{"_index":470,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{}}}],["src/schemas/fertilizer.schema.ts",{"_index":529,"title":{},"body":{"classes/Fertilizer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/fertilizer.schema.ts:11",{"_index":540,"title":{},"body":{"classes/Fertilizer.html":{}}}],["src/schemas/fertilizer.schema.ts:14",{"_index":534,"title":{},"body":{"classes/Fertilizer.html":{}}}],["src/schemas/fertilizer.schema.ts:17",{"_index":538,"title":{},"body":{"classes/Fertilizer.html":{}}}],["src/schemas/fertilizer.schema.ts:20",{"_index":535,"title":{},"body":{"classes/Fertilizer.html":{}}}],["src/schemas/fertilizer.schema.ts:31",{"_index":533,"title":{},"body":{"classes/Fertilizer.html":{}}}],["src/schemas/fertilizer.schema.ts:36",{"_index":530,"title":{},"body":{"classes/Fertilizer.html":{}}}],["src/schemas/fertilizer.schema.ts:41",{"_index":536,"title":{},"body":{"classes/Fertilizer.html":{}}}],["src/schemas/fertilizer.schema.ts:8",{"_index":537,"title":{},"body":{"classes/Fertilizer.html":{}}}],["src/schemas/ion.schema.ts",{"_index":771,"title":{},"body":{"classes/Ion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/ion.schema.ts:10",{"_index":773,"title":{},"body":{"classes/Ion.html":{}}}],["src/schemas/ion.schema.ts:13",{"_index":774,"title":{},"body":{"classes/Ion.html":{}}}],["src/schemas/ion.schema.ts:7",{"_index":775,"title":{},"body":{"classes/Ion.html":{}}}],["src/schemas/recipe.schema",{"_index":967,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/schemas/recipe.schema.ts",{"_index":901,"title":{},"body":{"classes/Recipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/recipe.schema.ts:10",{"_index":909,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:13",{"_index":911,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:16",{"_index":906,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:19",{"_index":903,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:22",{"_index":907,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:25",{"_index":912,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:28",{"_index":905,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:31",{"_index":908,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:34",{"_index":913,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:37",{"_index":904,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:40",{"_index":902,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/recipe.schema.ts:7",{"_index":910,"title":{},"body":{"classes/Recipe.html":{}}}],["src/schemas/schemas.module",{"_index":250,"title":{},"body":{"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/WaterModule.html":{}}}],["src/schemas/schemas.module.ts",{"_index":981,"title":{},"body":{"modules/SchemasModule.html":{}}}],["src/schemas/water.schema.ts",{"_index":1028,"title":{},"body":{"classes/Water.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/water.schema.ts:10",{"_index":1030,"title":{},"body":{"classes/Water.html":{}}}],["src/schemas/water.schema.ts:13",{"_index":1034,"title":{},"body":{"classes/Water.html":{}}}],["src/schemas/water.schema.ts:16",{"_index":1031,"title":{},"body":{"classes/Water.html":{}}}],["src/schemas/water.schema.ts:19",{"_index":1032,"title":{},"body":{"classes/Water.html":{}}}],["src/schemas/water.schema.ts:28",{"_index":1029,"title":{},"body":{"classes/Water.html":{}}}],["src/schemas/water.schema.ts:7",{"_index":1033,"title":{},"body":{"classes/Water.html":{}}}],["src/shared/data/elementbase",{"_index":472,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["src/shared/data/elementbase.ts",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/dto/idparam.dto",{"_index":592,"title":{},"body":{"controllers/FertilizerController-1.html":{},"controllers/WaterController.html":{}}}],["src/shared/dto/idparam.dto.ts",{"_index":768,"title":{},"body":{"classes/IdParamDto.html":{},"coverage.html":{}}}],["src/shared/dto/idparam.dto.ts:6",{"_index":770,"title":{},"body":{"classes/IdParamDto.html":{}}}],["src/shared/types/baseelement",{"_index":1101,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/shared/types/baseelement.ts",{"_index":1123,"title":{},"body":{"classes/baseElement.html":{},"coverage.html":{}}}],["src/shared/types/baseelement.ts:4",{"_index":1128,"title":{},"body":{"classes/baseElement.html":{}}}],["src/shared/types/baseelement.ts:5",{"_index":1129,"title":{},"body":{"classes/baseElement.html":{}}}],["src/shared/types/baseelement.ts:6",{"_index":1127,"title":{},"body":{"classes/baseElement.html":{}}}],["src/shared/types/baseelement.ts:7",{"_index":1126,"title":{},"body":{"classes/baseElement.html":{}}}],["src/shared/types/baseion",{"_index":478,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/shared/types/baseion.ts",{"_index":1130,"title":{},"body":{"classes/baseIon.html":{},"coverage.html":{}}}],["src/shared/types/baseion.ts:2",{"_index":1135,"title":{},"body":{"classes/baseIon.html":{}}}],["src/shared/types/baseion.ts:3",{"_index":1132,"title":{},"body":{"classes/baseIon.html":{}}}],["src/shared/types/baseion.ts:4",{"_index":1134,"title":{},"body":{"classes/baseIon.html":{}}}],["src/shared/types/baseion.ts:5",{"_index":1133,"title":{},"body":{"classes/baseIon.html":{}}}],["src/shared/types/elementform",{"_index":1102,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/shared/types/elementform.ts",{"_index":1165,"title":{},"body":{"coverage.html":{},"classes/elementForm.html":{}}}],["src/shared/types/elementform.ts:4",{"_index":1194,"title":{},"body":{"classes/elementForm.html":{}}}],["src/shared/types/elementform.ts:5",{"_index":1195,"title":{},"body":{"classes/elementForm.html":{}}}],["src/shared/types/elementform.ts:6",{"_index":1193,"title":{},"body":{"classes/elementForm.html":{}}}],["src/shared/types/elementform.ts:7",{"_index":1192,"title":{},"body":{"classes/elementForm.html":{}}}],["src/shared/types/solution.ts",{"_index":767,"title":{},"body":{"interfaces/IElement.html":{},"coverage.html":{},"classes/solution.html":{}}}],["src/shared/types/solution.ts:6",{"_index":1308,"title":{},"body":{"classes/solution.html":{}}}],["src/shared/types/solution.ts:7",{"_index":1309,"title":{},"body":{"classes/solution.html":{}}}],["src/shared/types/solution.ts:8",{"_index":1306,"title":{},"body":{"classes/solution.html":{}}}],["src/shared/types/solution.ts:9",{"_index":1307,"title":{},"body":{"classes/solution.html":{}}}],["src/water/dto/create",{"_index":290,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/CreateWaterDto.html":{},"coverage.html":{}}}],["src/water/dto/update",{"_index":1009,"title":{},"body":{"classes/UpdateElementDto-1.html":{},"classes/UpdateWaterDto.html":{},"coverage.html":{}}}],["src/water/water.controller.ts",{"_index":1038,"title":{},"body":{"controllers/WaterController.html":{},"coverage.html":{}}}],["src/water/water.controller.ts:103",{"_index":1060,"title":{},"body":{"controllers/WaterController.html":{}}}],["src/water/water.controller.ts:119",{"_index":1057,"title":{},"body":{"controllers/WaterController.html":{}}}],["src/water/water.controller.ts:35",{"_index":1050,"title":{},"body":{"controllers/WaterController.html":{}}}],["src/water/water.controller.ts:44",{"_index":1053,"title":{},"body":{"controllers/WaterController.html":{}}}],["src/water/water.controller.ts:54",{"_index":1054,"title":{},"body":{"controllers/WaterController.html":{}}}],["src/water/water.controller.ts:65",{"_index":1062,"title":{},"body":{"controllers/WaterController.html":{}}}],["src/water/water.controller.ts:78",{"_index":1052,"title":{},"body":{"controllers/WaterController.html":{}}}],["src/water/water.controller.ts:90",{"_index":1048,"title":{},"body":{"controllers/WaterController.html":{}}}],["src/water/water.module.ts",{"_index":1082,"title":{},"body":{"modules/WaterModule.html":{}}}],["src/water/water.service.ts",{"_index":1084,"title":{},"body":{"injectables/WaterService.html":{},"coverage.html":{}}}],["src/water/water.service.ts:13",{"_index":1086,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:20",{"_index":1091,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:25",{"_index":1094,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:29",{"_index":1095,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:33",{"_index":1099,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:39",{"_index":1093,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:45",{"_index":1088,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:55",{"_index":1097,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:72",{"_index":1096,"title":{},"body":{"injectables/WaterService.html":{}}}],["src/water/water.service.ts:82",{"_index":1090,"title":{},"body":{"injectables/WaterService.html":{}}}],["start",{"_index":795,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"index.html":{}}}],["start:dev",{"_index":1224,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1225,"title":{},"body":{"index.html":{}}}],["started",{"_index":1202,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1214,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":798,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["stay",{"_index":1266,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"classes/solution.html":{}}}],["string})@isstring",{"_index":307,"title":{},"body":{"classes/CreateFertilizerDto.html":{}}}],["string})@isstring()@isnotempty",{"_index":298,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/CreateFertilizerUnitDto.html":{}}}],["string})@isstring()@isoptional",{"_index":296,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{}}}],["successfully",{"_index":585,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["sulfate",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sulfur",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1242,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1298,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":295,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/Ion.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"classes/elementForm.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":1227,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":1230,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1229,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1226,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1280,"title":{},"body":{"index.html":{}}}],["then((concentrates",{"_index":895,"title":{},"body":{"injectables/PumpService.html":{}}}],["this.appservice.gethello",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["this.calculatecomposition(concentrate",{"_index":628,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["this.calculatecomposition(fertilizer",{"_index":488,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.calculatecomposition(fertilizerunit",{"_index":881,"title":{},"body":{"injectables/PumpService.html":{}}}],["this.calculatecomposition(water",{"_index":1118,"title":{},"body":{"injectables/WaterService.html":{}}}],["this.concentratemodel",{"_index":888,"title":{},"body":{"injectables/PumpService.html":{}}}],["this.concentratemodel(createconcentratedto",{"_index":276,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["this.concentratemodel.find",{"_index":279,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["this.concentratemodel.findbyid(concentrateid",{"_index":621,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["this.concentratemodel.findbyid(id",{"_index":280,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["this.concentratemodel.findbyidanddelete(id",{"_index":282,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["this.concentratemodel.findbyidandupdate(id",{"_index":281,"title":{},"body":{"injectables/ConcentrateService.html":{}}}],["this.concentrateservice.create(createconcentratedto",{"_index":232,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["this.concentrateservice.findall",{"_index":233,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["this.concentrateservice.findone(id",{"_index":235,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["this.concentrateservice.remove(id",{"_index":239,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["this.concentrateservice.update(id",{"_index":237,"title":{},"body":{"controllers/ConcentrateController.html":{}}}],["this.elementmodel(createelementdto",{"_index":1112,"title":{},"body":{"injectables/WaterService.html":{}}}],["this.elementmodel.create(createelementdto",{"_index":485,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.elementservice.create(fertilizerid",{"_index":442,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementservice.findone(fertilizerid",{"_index":444,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementservice.remove(fertilizerid",{"_index":450,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementservice.update",{"_index":449,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.fertilizermodel",{"_index":676,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["this.fertilizermodel.create(createfertilizerdto",{"_index":670,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["this.fertilizermodel.find().exec",{"_index":672,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["this.fertilizermodel.findbyid(f.fertilizer",{"_index":625,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["this.fertilizermodel.findbyid(fertilizerid",{"_index":482,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.fertilizermodel.findbyid(id).exec",{"_index":673,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["this.fertilizermodel.findone",{"_index":494,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.fertilizerservice.addfertilizer",{"_index":573,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["this.fertilizerservice.createfertilizer(createfertilizerdto",{"_index":597,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["this.fertilizerservice.deletefertilizer(id",{"_index":605,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["this.fertilizerservice.findall",{"_index":600,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["this.fertilizerservice.findall(concentrateid",{"_index":571,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["this.fertilizerservice.findone(params.id",{"_index":602,"title":{},"body":{"controllers/FertilizerController-1.html":{}}}],["this.fertilizerservice.removefertilizer(concentrateid",{"_index":575,"title":{},"body":{"controllers/FertilizerController.html":{}}}],["this.fertilizerservice.updatefertilizer",{"_index":574,"title":{},"body":{"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{}}}],["this.fertilizerunitmodel",{"_index":760,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["this.fertilizerunitmodel.find().exec",{"_index":762,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["this.fertilizerunitmodel.findbyid(fertilizerunitid",{"_index":863,"title":{},"body":{"injectables/PumpService.html":{}}}],["this.fertilizerunitmodel.findbyid(id",{"_index":763,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["this.fertilizerunitmodel.findbyidanddelete(id).exec",{"_index":764,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["this.fertilizerunitservice.createfertilizerunit",{"_index":733,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["this.fertilizerunitservice.deletefertilizerunit(id",{"_index":738,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["this.fertilizerunitservice.findall",{"_index":734,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["this.fertilizerunitservice.findone(id",{"_index":735,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["this.fertilizerunitservice.updatefertilizerunit",{"_index":736,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["this.logger.debug",{"_index":864,"title":{},"body":{"injectables/PumpService.html":{}}}],["this.logger.debug(`aniones",{"_index":523,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.logger.debug(`finding",{"_index":862,"title":{},"body":{"injectables/PumpService.html":{}}}],["this.logger.debug(`kationes",{"_index":522,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.logger.debug(`new",{"_index":868,"title":{},"body":{"injectables/PumpService.html":{}}}],["this.logger.debug(element",{"_index":497,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.logger.debug(fertilizers",{"_index":640,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["this.logger.error(error.message",{"_index":527,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.logger.log(`${method",{"_index":800,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.pumpmodel.create(createpumpdto",{"_index":867,"title":{},"body":{"injectables/PumpService.html":{}}}],["this.pumpservice.create(id",{"_index":832,"title":{},"body":{"controllers/PumpController.html":{}}}],["this.pumpservice.delete(id",{"_index":837,"title":{},"body":{"controllers/PumpController.html":{}}}],["this.pumpservice.findone(id",{"_index":834,"title":{},"body":{"controllers/PumpController.html":{}}}],["this.pumpservice.update(fertilizerunitid",{"_index":836,"title":{},"body":{"controllers/PumpController.html":{}}}],["this.recipemodel",{"_index":977,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipemodel(createrecipedto",{"_index":970,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipemodel.find().exec",{"_index":974,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipemodel.findbyid(id).exec",{"_index":976,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipemodel.findbyidanddelete(id).exec",{"_index":978,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.recipeservice.createrecipe(createrecipedto",{"_index":940,"title":{},"body":{"controllers/RecipeController.html":{}}}],["this.recipeservice.deleterecipe(id",{"_index":951,"title":{},"body":{"controllers/RecipeController.html":{}}}],["this.recipeservice.findall",{"_index":943,"title":{},"body":{"controllers/RecipeController.html":{}}}],["this.recipeservice.findone(id",{"_index":945,"title":{},"body":{"controllers/RecipeController.html":{}}}],["this.recipeservice.updaterecipe(id",{"_index":948,"title":{},"body":{"controllers/RecipeController.html":{}}}],["this.watermodel",{"_index":1109,"title":{},"body":{"injectables/WaterService.html":{}}}],["this.watermodel(createwaterdto",{"_index":1105,"title":{},"body":{"injectables/WaterService.html":{}}}],["this.watermodel.find().exec",{"_index":1107,"title":{},"body":{"injectables/WaterService.html":{}}}],["this.watermodel.findbyid(id",{"_index":1111,"title":{},"body":{"injectables/WaterService.html":{}}}],["this.watermodel.findbyid(id).exec",{"_index":1108,"title":{},"body":{"injectables/WaterService.html":{}}}],["this.watermodel.findbyidanddelete(id).exec",{"_index":1110,"title":{},"body":{"injectables/WaterService.html":{}}}],["this.waterservice.addelement(id",{"_index":1076,"title":{},"body":{"controllers/WaterController.html":{}}}],["this.waterservice.createwater(createwaterdto",{"_index":1068,"title":{},"body":{"controllers/WaterController.html":{}}}],["this.waterservice.deletewater(params.id",{"_index":1074,"title":{},"body":{"controllers/WaterController.html":{}}}],["this.waterservice.findall",{"_index":1069,"title":{},"body":{"controllers/WaterController.html":{}}}],["this.waterservice.findone(params.id",{"_index":1071,"title":{},"body":{"controllers/WaterController.html":{}}}],["this.waterservice.removeelement(id",{"_index":1078,"title":{},"body":{"controllers/WaterController.html":{}}}],["this.waterservice.updateelement(id",{"_index":1077,"title":{},"body":{"controllers/WaterController.html":{}}}],["this.waterservice.updatewater(params.id",{"_index":1072,"title":{},"body":{"controllers/WaterController.html":{}}}],["throw",{"_index":483,"title":{},"body":{"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["throws",{"_index":271,"title":{},"body":{"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"controllers/WaterController.html":{}}}],["time",{"_index":1258,"title":{},"body":{"index.html":{}}}],["touch",{"_index":1288,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":10,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"controllers/WaterController.html":{}}}],["transform",{"_index":731,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{}}}],["transformer",{"_index":396,"title":{},"body":{"classes/CreateWaterDto.html":{},"dependencies.html":{}}}],["true",{"_index":167,"title":{},"body":{"classes/Concentrate.html":{},"injectables/ConcentrateService.html":{},"classes/CreateRecipeDto.html":{},"classes/Element.html":{},"classes/Fertilizer.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"classes/Ion.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"classes/Recipe.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/UpdateFertilizerDto.html":{},"classes/Water.html":{},"injectables/WaterService.html":{}}}],["try",{"_index":493,"title":{},"body":{"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"injectables/WaterService.html":{}}}],["twitter",{"_index":1294,"title":{},"body":{"index.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"modules/AppModule.html":{},"classes/Concentrate.html":{},"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/CreateConcentrateDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateWaterDto.html":{},"classes/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/Fertilizer.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/FertilizerUnit.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"interfaces/IElement.html":{},"classes/IdParamDto.html":{},"classes/Ion.html":{},"injectables/LoggerMiddleware.html":{},"classes/Pump.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/Recipe.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/Solution.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"classes/baseElement.html":{},"classes/baseIon.html":{},"coverage.html":{},"classes/elementForm.html":{},"miscellaneous/enumerations.html":{},"classes/solution.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1310,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":47,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/Element.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateElementDto-1.html":{},"classes/UpdateFertilizerDto-1.html":{},"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateWaterDto.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":22,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/Concentrate.html":{},"classes/Element.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{}}}],["typescript",{"_index":1213,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":532,"title":{},"body":{"classes/Fertilizer.html":{},"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"classes/Water.html":{}}}],["undefined})@prop(['undefined",{"_index":157,"title":{},"body":{"classes/Concentrate.html":{}}}],["unit",{"_index":330,"title":{},"body":{"classes/CreateFertilizerUnitDto.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"index.html":{}}}],["unit.controller",{"_index":745,"title":{},"body":{"modules/FertilizerUnitModule.html":{}}}],["unit.controller.ts",{"_index":709,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"coverage.html":{}}}],["unit.controller.ts:32",{"_index":716,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["unit.controller.ts:43",{"_index":719,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["unit.controller.ts:54",{"_index":720,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["unit.controller.ts:66",{"_index":724,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["unit.controller.ts:82",{"_index":718,"title":{},"body":{"controllers/FertilizerUnitController.html":{}}}],["unit.dto",{"_index":727,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"classes/UpdateFertilizerUnitDto.html":{}}}],["unit.dto.ts",{"_index":329,"title":{},"body":{"classes/CreateFertilizerUnitDto.html":{},"classes/UpdateFertilizerUnitDto.html":{},"coverage.html":{}}}],["unit.dto.ts:17",{"_index":332,"title":{},"body":{"classes/CreateFertilizerUnitDto.html":{}}}],["unit.dto.ts:28",{"_index":331,"title":{},"body":{"classes/CreateFertilizerUnitDto.html":{}}}],["unit.dto.ts:40",{"_index":334,"title":{},"body":{"classes/CreateFertilizerUnitDto.html":{}}}],["unit.module",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["unit.module.ts",{"_index":743,"title":{},"body":{"modules/FertilizerUnitModule.html":{}}}],["unit.schema",{"_index":757,"title":{},"body":{"injectables/FertilizerUnitService.html":{},"injectables/PumpService.html":{},"modules/SchemasModule.html":{}}}],["unit.schema.ts",{"_index":683,"title":{},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"classes/Solution.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unit.schema.ts:10",{"_index":809,"title":{},"body":{"classes/Pump.html":{}}}],["unit.schema.ts:13",{"_index":804,"title":{},"body":{"classes/Pump.html":{}}}],["unit.schema.ts:16",{"_index":808,"title":{},"body":{"classes/Pump.html":{}}}],["unit.schema.ts:19",{"_index":807,"title":{},"body":{"classes/Pump.html":{}}}],["unit.schema.ts:22",{"_index":803,"title":{},"body":{"classes/Pump.html":{}}}],["unit.schema.ts:25",{"_index":806,"title":{},"body":{"classes/Pump.html":{}}}],["unit.schema.ts:28",{"_index":805,"title":{},"body":{"classes/Pump.html":{}}}],["unit.schema.ts:36",{"_index":999,"title":{},"body":{"classes/Solution.html":{}}}],["unit.schema.ts:39",{"_index":1000,"title":{},"body":{"classes/Solution.html":{}}}],["unit.schema.ts:42",{"_index":1001,"title":{},"body":{"classes/Solution.html":{}}}],["unit.schema.ts:45",{"_index":997,"title":{},"body":{"classes/Solution.html":{}}}],["unit.schema.ts:48",{"_index":998,"title":{},"body":{"classes/Solution.html":{}}}],["unit.schema.ts:56",{"_index":689,"title":{},"body":{"classes/FertilizerUnit.html":{}}}],["unit.schema.ts:59",{"_index":688,"title":{},"body":{"classes/FertilizerUnit.html":{}}}],["unit.schema.ts:62",{"_index":695,"title":{},"body":{"classes/FertilizerUnit.html":{}}}],["unit.schema.ts:65",{"_index":692,"title":{},"body":{"classes/FertilizerUnit.html":{}}}],["unit.schema.ts:68",{"_index":690,"title":{},"body":{"classes/FertilizerUnit.html":{}}}],["unit.schema.ts:7",{"_index":802,"title":{},"body":{"classes/Pump.html":{}}}],["unit.schema.ts:71",{"_index":694,"title":{},"body":{"classes/FertilizerUnit.html":{}}}],["unit.service",{"_index":726,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{}}}],["unit.service.ts",{"_index":748,"title":{},"body":{"injectables/FertilizerUnitService.html":{},"coverage.html":{}}}],["unit.service.ts:13",{"_index":750,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["unit.service.ts:30",{"_index":752,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["unit.service.ts:43",{"_index":754,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["unit.service.ts:52",{"_index":755,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["unit.service.ts:62",{"_index":756,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["unit.service.ts:76",{"_index":753,"title":{},"body":{"injectables/FertilizerUnitService.html":{}}}],["unit/dto/create",{"_index":328,"title":{},"body":{"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"coverage.html":{}}}],["unit/dto/update",{"_index":1015,"title":{},"body":{"classes/UpdateFertilizerUnitDto.html":{},"classes/UpdatePumpDto.html":{},"coverage.html":{}}}],["unit/fertilizer",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"controllers/FertilizerUnitController.html":{},"modules/FertilizerUnitModule.html":{},"injectables/FertilizerUnitService.html":{},"coverage.html":{}}}],["unit/pump.controller.ts",{"_index":810,"title":{},"body":{"controllers/PumpController.html":{},"coverage.html":{}}}],["unit/pump.controller.ts:38",{"_index":816,"title":{},"body":{"controllers/PumpController.html":{}}}],["unit/pump.controller.ts:51",{"_index":823,"title":{},"body":{"controllers/PumpController.html":{}}}],["unit/pump.controller.ts:67",{"_index":827,"title":{},"body":{"controllers/PumpController.html":{}}}],["unit/pump.controller.ts:81",{"_index":821,"title":{},"body":{"controllers/PumpController.html":{}}}],["unit/pump.service.ts",{"_index":838,"title":{},"body":{"injectables/PumpService.html":{},"coverage.html":{}}}],["unit/pump.service.ts:107",{"_index":853,"title":{},"body":{"injectables/PumpService.html":{}}}],["unit/pump.service.ts:129",{"_index":859,"title":{},"body":{"injectables/PumpService.html":{}}}],["unit/pump.service.ts:165",{"_index":850,"title":{},"body":{"injectables/PumpService.html":{}}}],["unit/pump.service.ts:194",{"_index":843,"title":{},"body":{"injectables/PumpService.html":{}}}],["unit/pump.service.ts:26",{"_index":840,"title":{},"body":{"injectables/PumpService.html":{}}}],["unit/pump.service.ts:52",{"_index":848,"title":{},"body":{"injectables/PumpService.html":{}}}],["unit/pump.service.ts:81",{"_index":856,"title":{},"body":{"injectables/PumpService.html":{}}}],["units",{"_index":710,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{}}}],["units/:fertilizerunitid/pumps",{"_index":811,"title":{},"body":{"controllers/PumpController.html":{}}}],["unknown",{"_index":581,"title":{},"body":{"controllers/FertilizerController-1.html":{},"controllers/RecipeController.html":{}}}],["unlicensed",{"_index":1305,"title":{},"body":{"properties.html":{}}}],["update",{"_index":190,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController-1.html":{},"injectables/PumpService.html":{}}}],["update(fertilizerid",{"_index":429,"title":{},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{}}}],["update(fertilizerunitid",{"_index":858,"title":{},"body":{"injectables/PumpService.html":{}}}],["update(id",{"_index":210,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{}}}],["updateconcentratedto",{"_index":211,"title":{"classes/UpdateConcentrateDto.html":{}},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"classes/UpdateConcentrateDto.html":{},"coverage.html":{}}}],["updated",{"_index":215,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{}}}],["updatedfertilizer",{"_index":675,"title":{},"body":{"injectables/FertilizerService-1.html":{}}}],["updateelement",{"_index":1044,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["updateelement(id",{"_index":1058,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["updateelementdto",{"_index":416,"title":{"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{}},"body":{"controllers/ElementController.html":{},"injectables/ElementService.html":{},"classes/UpdateElementDto.html":{},"classes/UpdateElementDto-1.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"coverage.html":{}}}],["updateelementdto.concentration",{"_index":496,"title":{},"body":{"injectables/ElementService.html":{},"injectables/WaterService.html":{}}}],["updatefertilizer",{"_index":549,"title":{},"body":{"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{}}}],["updatefertilizer(concentrateid",{"_index":560,"title":{},"body":{"controllers/FertilizerController.html":{},"injectables/FertilizerService.html":{}}}],["updatefertilizer(id",{"_index":590,"title":{},"body":{"controllers/FertilizerController-1.html":{},"injectables/FertilizerService-1.html":{}}}],["updatefertilizerdto",{"_index":561,"title":{"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{}},"body":{"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdateFertilizerDto-1.html":{},"coverage.html":{}}}],["updatefertilizerdto.concentration",{"_index":632,"title":{},"body":{"injectables/FertilizerService.html":{}}}],["updatefertilizerunit",{"_index":713,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{}}}],["updatefertilizerunit(id",{"_index":721,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{}}}],["updatefertilizerunitdto",{"_index":722,"title":{"classes/UpdateFertilizerUnitDto.html":{}},"body":{"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"classes/UpdateFertilizerUnitDto.html":{},"coverage.html":{}}}],["updatepump",{"_index":814,"title":{},"body":{"controllers/PumpController.html":{}}}],["updatepump(fertilizerunitid",{"_index":824,"title":{},"body":{"controllers/PumpController.html":{}}}],["updatepumpdto",{"_index":825,"title":{"classes/UpdatePumpDto.html":{}},"body":{"controllers/PumpController.html":{},"injectables/PumpService.html":{},"classes/UpdatePumpDto.html":{},"coverage.html":{}}}],["updatepumpdto[key",{"_index":880,"title":{},"body":{"injectables/PumpService.html":{}}}],["updaterecipe",{"_index":922,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["updaterecipe(id",{"_index":929,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{}}}],["updaterecipedto",{"_index":930,"title":{"classes/UpdateRecipeDto.html":{}},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["updates",{"_index":214,"title":{},"body":{"controllers/ConcentrateController.html":{},"injectables/ConcentrateService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/FertilizerController.html":{},"controllers/FertilizerController-1.html":{},"injectables/FertilizerService.html":{},"injectables/FertilizerService-1.html":{},"controllers/FertilizerUnitController.html":{},"injectables/FertilizerUnitService.html":{},"controllers/PumpController.html":{},"injectables/PumpService.html":{},"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"controllers/WaterController.html":{},"index.html":{}}}],["updatewater",{"_index":1045,"title":{},"body":{"controllers/WaterController.html":{},"injectables/WaterService.html":{}}}],["updatewater(id",{"_index":1098,"title":{},"body":{"injectables/WaterService.html":{}}}],["updatewater(params",{"_index":1061,"title":{},"body":{"controllers/WaterController.html":{}}}],["updatewaterdto",{"_index":1025,"title":{"classes/UpdateWaterDto.html":{}},"body":{"classes/UpdateWaterDto.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"coverage.html":{}}}],["updating",{"_index":949,"title":{},"body":{"controllers/RecipeController.html":{},"injectables/RecipeService.html":{},"classes/UpdateConcentrateDto.html":{},"classes/UpdateFertilizerDto.html":{},"classes/UpdatePumpDto.html":{}}}],["use",{"_index":780,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":781,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["usepipes",{"_index":432,"title":{},"body":{"controllers/ElementController.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{}}}],["usepipes(new",{"_index":730,"title":{},"body":{"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{}}}],["usepipes(validationpipe",{"_index":440,"title":{},"body":{"controllers/ElementController.html":{}}}],["using",{"_index":1259,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":395,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["validationpipe",{"_index":433,"title":{},"body":{"controllers/ElementController.html":{},"controllers/FertilizerUnitController.html":{},"controllers/PumpController.html":{}}}],["validator",{"_index":46,"title":{},"body":{"classes/AddElementDto.html":{},"classes/AddFertilizerDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateFertilizerDto.html":{},"classes/CreateFertilizerUnitDto.html":{},"classes/CreatePumpDto.html":{},"classes/CreateWaterDto.html":{},"classes/IdParamDto.html":{},"classes/UpdateElementDto.html":{},"classes/UpdatePumpDto.html":{},"dependencies.html":{}}}],["value",{"_index":468,"title":{},"body":{"injectables/ElementService.html":{},"injectables/FertilizerService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PumpService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1319,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":569,"title":{},"body":{"controllers/FertilizerController.html":{},"properties.html":{}}}],["video",{"_index":1251,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1238,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1253,"title":{},"body":{"index.html":{}}}],["void",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":1222,"title":{},"body":{"index.html":{}}}],["water",{"_index":687,"title":{"classes/Water.html":{}},"body":{"classes/FertilizerUnit.html":{},"classes/Pump.html":{},"modules/SchemasModule.html":{},"classes/Solution.html":{},"classes/Water.html":{},"controllers/WaterController.html":{},"injectables/WaterService.html":{},"coverage.html":{},"overview.html":{}}}],["water.content",{"_index":1122,"title":{},"body":{"injectables/WaterService.html":{}}}],["water.controller",{"_index":1083,"title":{},"body":{"modules/WaterModule.html":{}}}],["water.dto",{"_index":1027,"title":{},"body":{"classes/UpdateWaterDto.html":{},"controllers/WaterController.html":{}}}],["water.dto.ts",{"_index":384,"title":{},"body":{"classes/CreateWaterDto.html":{},"classes/UpdateWaterDto.html":{},"coverage.html":{}}}],["water.dto.ts:15",{"_index":392,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["water.dto.ts:19",{"_index":388,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["water.dto.ts:23",{"_index":393,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["water.dto.ts:27",{"_index":390,"title":{},"body":{"classes/CreateWaterDto.html":{}}}],["water.elements",{"_index":1119,"title":{},"body":{"injectables/WaterService.html":{}}}],["water.elements.filter",{"_index":1120,"title":{},"body":{"injectables/WaterService.html":{}}}],["water.elements.find",{"_index":1115,"title":{},"body":{"injectables/WaterService.html":{}}}],["water.elements.map((element",{"_index":1121,"title":{},"body":{"injectables/WaterService.html":{}}}],["water.elements.push(element",{"_index":1113,"title":{},"body":{"injectables/WaterService.html":{}}}],["water.name",{"_index":992,"title":{},"body":{"modules/SchemasModule.html":{}}}],["water.save",{"_index":1114,"title":{},"body":{"injectables/WaterService.html":{}}}],["water.save().then((water",{"_index":1117,"title":{},"body":{"injectables/WaterService.html":{}}}],["water.schema",{"_index":986,"title":{},"body":{"modules/SchemasModule.html":{}}}],["water.service",{"_index":1064,"title":{},"body":{"controllers/WaterController.html":{},"modules/WaterModule.html":{}}}],["water/water.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["watercontroller",{"_index":1037,"title":{"controllers/WaterController.html":{}},"body":{"controllers/WaterController.html":{},"modules/WaterModule.html":{},"coverage.html":{}}}],["waterdocument",{"_index":1036,"title":{},"body":{"classes/Water.html":{},"injectables/WaterService.html":{},"miscellaneous/typealiases.html":{}}}],["watermodel",{"_index":1087,"title":{},"body":{"injectables/WaterService.html":{}}}],["watermodule",{"_index":103,"title":{"modules/WaterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WaterModule.html":{},"modules.html":{},"overview.html":{}}}],["waters",{"_index":1039,"title":{},"body":{"controllers/WaterController.html":{}}}],["waterschema",{"_index":985,"title":{},"body":{"modules/SchemasModule.html":{},"classes/Water.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["waterservice",{"_index":1063,"title":{"injectables/WaterService.html":{}},"body":{"controllers/WaterController.html":{},"modules/WaterModule.html":{},"injectables/WaterService.html":{},"coverage.html":{},"overview.html":{}}}],["website",{"_index":1292,"title":{},"body":{"index.html":{}}}],["within",{"_index":854,"title":{},"body":{"injectables/PumpService.html":{}}}],["working",{"_index":1236,"title":{},"body":{"index.html":{}}}],["world",{"_index":144,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1269,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1284,"title":{},"body":{"index.html":{}}}],["zinc",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zn",{"_index":368,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Recipe.html":{},"miscellaneous/variables.html":{}}}],["zn+2",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zno",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/ConcentrateModule.html":{},"modules/FertilizerModule.html":{},"modules/FertilizerUnitModule.html":{},"modules/RecipeModule.html":{},"modules/SchemasModule.html":{},"modules/WaterModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddElementDto.html":{"url":"classes/AddElementDto.html","title":"class - AddElementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddElementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer/dto/add-element.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for adding an element to a fertilizer.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                concentration\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: '_id', description: 'The ID of the element to add to the fertilizer', type: String, example: '60f790f3b311f83d1f4f3f3d'})@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/dto/add-element.dto.ts:24\n                        \n                    \n\n            \n                \n                    The ID of the element to add to the fertilizer.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        concentration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'concentration', description: 'Concentration of the element in the fertilizer in percent', type: Number, example: 10})@IsNumber()@Min(0)@Max(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/dto/add-element.dto.ts:56\n                        \n                    \n\n            \n                \n                    The concentration of the element in the fertilizer in percent.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'name', description: 'Name of the element', type: String, example: 'Nitrogen'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/dto/add-element.dto.ts:39\n                        \n                    \n\n            \n                \n                    The name of the element.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsMongoId, Max, Min, IsString } from 'class-validator';\nimport { Types } from 'mongoose';\n\n/**\n * Data transfer object for adding an element to a fertilizer.\n * @export\n * @class AddElementDto\n */\nexport class AddElementDto {\n  /**\n   * The ID of the element to add to the fertilizer.\n   * @type {Types.ObjectId}\n   * @memberof AddElementDto\n   * @example {60f790f3b311f83d1f4f3f3d}\n   */\n  @ApiProperty({\n    name: '_id',\n    description: 'The ID of the element to add to the fertilizer',\n    type: String,\n    example: '60f790f3b311f83d1f4f3f3d',\n  })\n  @IsMongoId()\n  _id: Types.ObjectId;\n\n  /**\n   * The name of the element.\n   * @type {string}\n   * @memberof AddElementDto\n   * @example 'Nitrogen'\n   */\n  @ApiProperty({\n    name: 'name',\n    description: 'Name of the element',\n    type: String,\n    example: 'Nitrogen',\n  })\n  @IsString()\n  name: string;\n\n  /**\n   * The concentration of the element in the fertilizer in percent.\n   * @type {number}\n   * @memberof AddElementDto\n   * @example 10\n   */\n  @ApiProperty({\n    name: 'concentration',\n    description: 'Concentration of the element in the fertilizer in percent',\n    type: Number,\n    example: 10,\n  })\n  @IsNumber()\n  @Min(0)\n  @Max(100)\n  concentration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFertilizerDto.html":{"url":"classes/AddFertilizerDto.html","title":"class - AddFertilizerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFertilizerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/concentrate/dto/add-fertilizer.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for adding a fertilizer to a concentrate.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                concentration\n                            \n                            \n                                    \n                                    \n                                fertilizer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        concentration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The concentration of the fertilizer to add to the concentrate g/l.', type: Number, example: 100, minimum: 0})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/concentrate/dto/add-fertilizer.dto.ts:35\n                        \n                    \n\n            \n                \n                    The concentration of the fertilizer to add to the concentrate.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fertilizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the fertilizer to add to the concentrate.', type: String, example: '60f790f3b311f83d1f4f3f3d'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/concentrate/dto/add-fertilizer.dto.ts:18\n                        \n                    \n\n            \n                \n                    The ID of the fertilizer to add to the concentrate.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive, IsString } from 'class-validator';\nimport { Types } from 'mongoose';\n\n/**\n * Data transfer object for adding a fertilizer to a concentrate.\n */\nexport class AddFertilizerDto {\n  /**\n   * The ID of the fertilizer to add to the concentrate.\n   */\n  @ApiProperty({\n    description: 'The ID of the fertilizer to add to the concentrate.',\n    type: String,\n    example: '60f790f3b311f83d1f4f3f3d',\n  })\n  @IsString()\n  fertilizer: Types.ObjectId;\n\n  /**\n   * The concentration of the fertilizer to add to the concentrate.\n   * @type number\n   * @example 100\n   * @minimum 0\n   */\n  @ApiProperty({\n    description:\n      'The concentration of the fertilizer to add to the concentrate g/l.',\n    type: Number,\n    example: 100,\n    minimum: 0,\n  })\n  @IsNumber()\n  @IsPositive()\n  concentration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nConcentrateModule\n\nConcentrateModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConcentrateModule->AppModule\n\n\n\n\n\nFertilizerModule\n\nFertilizerModule\n\nAppModule -->\n\nFertilizerModule->AppModule\n\n\n\n\n\nFertilizerUnitModule\n\nFertilizerUnitModule\n\nAppModule -->\n\nFertilizerUnitModule->AppModule\n\n\n\n\n\nRecipeModule\n\nRecipeModule\n\nAppModule -->\n\nRecipeModule->AppModule\n\n\n\n\n\nWaterModule\n\nWaterModule\n\nAppModule -->\n\nWaterModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConcentrateModule\n                        \n                        \n                            FertilizerModule\n                        \n                        \n                            FertilizerUnitModule\n                        \n                        \n                            RecipeModule\n                        \n                        \n                            WaterModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { FertilizerModule } from './fertilizer/fertilizer.module';\nimport { ConcentrateModule } from './concentrate/concentrate.module';\nimport { FertilizerUnitModule } from './fertilizer-unit/fertilizer-unit.module';\nimport { DevtoolsModule } from '@nestjs/devtools-integration';\nimport { RecipeModule } from './recipe/recipe.module';\nimport { WaterModule } from './water/water.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { LoggerMiddleware } from './common/logger.middlewware';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    DevtoolsModule.register({\n      http: process.env.NODE_ENV !== 'production',\n    }),\n    FertilizerUnitModule,\n    ConcentrateModule,\n    FertilizerModule,\n    RecipeModule,\n    WaterModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Concentrate.html":{"url":"classes/Concentrate.html","title":"class - Concentrate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Concentrate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/concentrate.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Concentrate schema.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                aniones\n                            \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                fertilizers\n                            \n                            \n                                    \n                                    \n                                kationes\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        aniones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The flow rate of the concentrate.', type: Number})@Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/concentrate.schema.ts:106\n                        \n                    \n\n            \n                \n                    The flow rate of the concentrate.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The content of the concentrate.', type: Array, items: undefined})@Prop(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/concentrate.schema.ts:93\n                        \n                    \n\n            \n                \n                    The content of the concentrate.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the concentrate.', type: String, example: 'A concentrate containing calcium nitrate.'})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/concentrate.schema.ts:35\n                        \n                    \n\n            \n                \n                    The description of the concentrate.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fertilizers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The fertilizers in the concentrate.', type: Array, items: undefined})@Prop(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/concentrate.schema.ts:64\n                        \n                    \n\n            \n                \n                    The fertilizers in the concentrate.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        kationes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The factor of the concentrate.', type: Number})@Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/concentrate.schema.ts:119\n                        \n                    \n\n            \n                \n                    The factor of the concentrate.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the concentrate.', type: String, example: 'Calcium Nitrate'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/concentrate.schema.ts:22\n                        \n                    \n\n            \n                \n                    The name of the concentrate.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Document, Types } from 'mongoose';\n\n/**\n * Concentrate schema.\n */\n\n@Schema()\nexport class Concentrate {\n  /**\n   * The name of the concentrate.\n   * @type {string}\n   * @required\n   */\n  @ApiProperty({\n    description: 'The name of the concentrate.',\n    type: String,\n    example: 'Calcium Nitrate',\n  })\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The description of the concentrate.\n   * @type {string}\n   * @example 'A concentrate containing calcium nitrate.'\n   */\n  @ApiProperty({\n    description: 'The description of the concentrate.',\n    type: String,\n    example: 'A concentrate containing calcium nitrate.',\n  })\n  @Prop()\n  description: string;\n\n  /**\n   * The fertilizers in the concentrate.\n   * @type {Array}\n   */\n  @ApiProperty({\n    description: 'The fertilizers in the concentrate.',\n    type: Array,\n    items: {\n      type: 'object',\n      properties: {\n        fertilizer: {\n          type: 'string',\n          example: '60f790f3b311f83d1f4f3f3d',\n        },\n        concentration: {\n          type: 'number',\n          example: 100,\n        },\n      },\n    },\n  })\n  @Prop([\n    {\n      fertilizer: { type: Types.ObjectId },\n      concentration: { type: Number, required: true },\n    },\n  ])\n  fertilizers: Array;\n\n  /**\n   * The content of the concentrate.\n   * @type {Array}\n   */\n  @ApiProperty({\n    description: 'The content of the concentrate.',\n    type: Array,\n    items: {\n      type: 'object',\n      properties: {\n        element: {\n          type: 'string',\n          example: 'Nitrogen',\n        },\n        concentration: {\n          type: 'number',\n          example: 10,\n        },\n      },\n    },\n  })\n  @Prop([\n    {\n      element: String,\n      concentration: Number,\n    },\n  ])\n  content: Array;\n\n  /**\n   * The flow rate of the concentrate.\n   * @type {number}\n   */\n  @ApiProperty({\n    description: 'The flow rate of the concentrate.',\n    type: Number,\n  })\n  @Prop({\n    type: Number,\n  })\n  aniones: number;\n\n  /**\n   * The factor of the concentrate.\n   * @type {number}\n   */\n  @ApiProperty({\n    description: 'The factor of the concentrate.',\n    type: Number,\n  })\n  @Prop({\n    type: Number,\n  })\n  kationes: number;\n}\n\n/**\n * Concentrate schema.\n * @export\n * @class ConcentrateSchema\n * @extends {SchemaFactory.createForClass(Concentrate)}\n * @type {ConcentrateDocument}\n * @implements {Document}\n */\nexport const ConcentrateSchema = SchemaFactory.createForClass(Concentrate);\n\n/**\n * Concentrate document.\n * @export\n * @interface ConcentrateDocument\n * @extends {Concentrate}\n * @extends {Document}\n */\nexport type ConcentrateDocument = Concentrate & Document;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConcentrateController.html":{"url":"controllers/ConcentrateController.html","title":"controller - ConcentrateController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConcentrateController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/concentrate/concentrate.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                concentrates\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing concentrates.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createConcentrateDto: CreateConcentrateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/concentrate.controller.ts:34\n                        \n                    \n\n\n            \n                \n                        Creates a new concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createConcentrateDto\n                                            \n                                                            CreateConcentrateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing concentrate details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The newly created concentrate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/concentrate.controller.ts:43\n                        \n                    \n\n\n            \n                \n                        Finds all concentrates.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of all concentrates.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/concentrate.controller.ts:53\n                        \n                    \n\n\n            \n                \n                        Finds a single concentrate by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The concentrate\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/concentrate.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        Deletes a concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateConcentrateDto: UpdateConcentrateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/concentrate.controller.ts:64\n                        \n                    \n\n\n            \n                \n                        Updates a concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                        \n                                                updateConcentrateDto\n                                            \n                                                            UpdateConcentrateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing updated concentrate details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated concentrate.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { ConcentrateService } from './concentrate.service';\nimport { CreateConcentrateDto } from './dto/create-concentrate.dto';\nimport { UpdateConcentrateDto } from './dto/update-concentrate.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller class for managing concentrates.\n */\n@ApiTags('Concentrates')\n@Controller('concentrates')\nexport class ConcentrateController {\n  /**\n   * Constructor for the ConcentrateController class.\n   * @param concentrateService - The service class for managing concentrates.\n   * @returns An instance of the ConcentrateController class.\n   */\n  constructor(private readonly concentrateService: ConcentrateService) {}\n\n  /**\n   * Creates a new concentrate.\n   * @param createConcentrateDto - The data transfer object containing concentrate details.\n   * @returns The newly created concentrate.\n   */\n  @Post()\n  create(@Body() createConcentrateDto: CreateConcentrateDto) {\n    return this.concentrateService.create(createConcentrateDto);\n  }\n\n  /**\n   * Finds all concentrates.\n   * @returns An array of all concentrates.\n   */\n  @Get()\n  findAll() {\n    return this.concentrateService.findAll();\n  }\n\n  /**\n   * Finds a single concentrate by ID.\n   * @param id - The ID of the concentrate.\n   * @returns The concentrate\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.concentrateService.findOne(id);\n  }\n\n  /**\n   * Updates a concentrate.\n   * @param id - The ID of the concentrate.\n   * @param updateConcentrateDto - The data transfer object containing updated concentrate details.\n   * @returns The updated concentrate.\n   */\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateConcentrateDto: UpdateConcentrateDto,\n  ) {\n    return this.concentrateService.update(id, updateConcentrateDto);\n  }\n\n  /**\n   * Deletes a concentrate.\n   * @param id - The ID of the concentrate.\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.concentrateService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConcentrateModule.html":{"url":"modules/ConcentrateModule.html","title":"module - ConcentrateModule","body":"\n                   \n\n\n\n\n    Modules\n    ConcentrateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConcentrateModule\n\n\n\ncluster_ConcentrateModule_imports\n\n\n\ncluster_ConcentrateModule_exports\n\n\n\ncluster_ConcentrateModule_providers\n\n\n\n\nSchemasModule\n\nSchemasModule\n\n\n\nConcentrateModule\n\nConcentrateModule\n\nConcentrateModule -->\n\nSchemasModule->ConcentrateModule\n\n\n\n\n\nConcentrateService \n\nConcentrateService \n\nConcentrateService  -->\n\nConcentrateModule->ConcentrateService \n\n\n\n\n\nFertilizerService \n\nFertilizerService \n\nFertilizerService  -->\n\nConcentrateModule->FertilizerService \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nConcentrateModule->Logger \n\n\n\n\n\nConcentrateService\n\nConcentrateService\n\nConcentrateModule -->\n\nConcentrateService->ConcentrateModule\n\n\n\n\n\nFertilizerService\n\nFertilizerService\n\nConcentrateModule -->\n\nFertilizerService->ConcentrateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/concentrate/concentrate.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConcentrateService\n                        \n                        \n                            FertilizerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ConcentrateController\n                        \n                        \n                            FertilizerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SchemasModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConcentrateService\n                        \n                        \n                            FertilizerService\n                        \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { ConcentrateService } from './concentrate.service';\nimport { ConcentrateController } from './concentrate.controller';\nimport { SchemasModule } from 'src/schemas/schemas.module';\nimport { FertilizerController } from './fertilizer.controller';\nimport { FertilizerService } from './fertilizer.service';\n\n@Module({\n  imports: [SchemasModule],\n  controllers: [ConcentrateController, FertilizerController],\n  providers: [ConcentrateService, FertilizerService, Logger],\n  exports: [ConcentrateService, FertilizerService, Logger],\n})\nexport class ConcentrateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConcentrateService.html":{"url":"injectables/ConcentrateService.html","title":"injectable - ConcentrateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConcentrateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/concentrate/concentrate.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Concentrate service class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(concentrateModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/concentrate/concentrate.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor of concentrate service class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        concentrateModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createConcentrateDto: CreateConcentrateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/concentrate.service.ts:28\n                        \n                    \n\n\n            \n                \n                         Creates a new concentrate\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createConcentrateDto\n                                            \n                                                            CreateConcentrateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing concentrate details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created concentrate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/concentrate.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Finds all concentrates\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                An array of all concentrates.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/concentrate.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Finds a concentrate by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The concentrate with the specified ID\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/concentrate.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Removes a concentrate\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The removed concentrate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateConcentrateDto: UpdateConcentrateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/concentrate.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Updates a concentrate\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                        \n                                                updateConcentrateDto\n                                            \n                                                            UpdateConcentrateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated concentrate details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated concentrate.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateConcentrateDto } from './dto/create-concentrate.dto';\nimport { UpdateConcentrateDto } from './dto/update-concentrate.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Concentrate } from 'src/schemas/concentrate.schema';\n\n/**\n * Concentrate service class\n */\n@Injectable()\nexport class ConcentrateService {\n  /**\n   * Constructor of concentrate service class\n   * @param concentrateModel\n   */\n  constructor(\n    @InjectModel(Concentrate.name)\n    private readonly concentrateModel: Model,\n  ) {}\n\n  /**\n   *  Creates a new concentrate\n   * @param createConcentrateDto  - The data transfer object containing concentrate details.\n   * @returns The newly created concentrate.\n   * @throws Error if there is an error during creation.\n   */\n  create(createConcentrateDto: CreateConcentrateDto): Promise {\n    const newConcentrate = new this.concentrateModel(createConcentrateDto);\n    return newConcentrate.save();\n  }\n\n  /**\n   * Finds all concentrates\n   * @returns An array of all concentrates.\n   * @throws Error if there is an error during retrieval.\n   * @returns An array of all concentrates.\n   * @throws Error if there is an error during retrieval.\n   */\n  findAll(): Promise {\n    return this.concentrateModel.find();\n  }\n\n  /**\n   * Finds a concentrate by ID.\n   * @param id - The ID of the concentrate.\n   * @returns The concentrate with the specified ID\n   * @throws Error if there is an error during retrieval.\n   */\n  findOne(id: string): Promise {\n    return this.concentrateModel.findById(id);\n  }\n\n  /**\n   * Updates a concentrate\n   * @param id - The ID of the concentrate.\n   * @param updateConcentrateDto - The data transfer object containing the updated concentrate details.\n   * @returns The updated concentrate.\n   */\n  update(\n    id: string,\n    updateConcentrateDto: UpdateConcentrateDto,\n  ): Promise {\n    return this.concentrateModel.findByIdAndUpdate(id, updateConcentrateDto, {\n      new: true,\n    });\n  }\n\n  /**\n   * Removes a concentrate\n   * @param id - The ID of the concentrate.\n   * @returns The removed concentrate.\n   */\n  remove(id: string): Promise {\n    return this.concentrateModel.findByIdAndDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateConcentrateDto.html":{"url":"classes/CreateConcentrateDto.html","title":"class - CreateConcentrateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateConcentrateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/concentrate/dto/create-concentrate.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for creating a concentrate.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The descriptio of ', type: String, example: 'A concentrate containing calcium nitrate.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/concentrate/dto/create-concentrate.dto.ts:28\n                        \n                    \n\n            \n                \n                    The description of the concentrate.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the concentrate.', type: String, example: 'Calcium Nitrate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/concentrate/dto/create-concentrate.dto.ts:16\n                        \n                    \n\n            \n                \n                    The name of the concentrate.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data transfer object for creating a concentrate.\n */\nexport class CreateConcentrateDto {\n  /**\n   * The name of the concentrate.\n   * @type {string}\n   */\n  @ApiProperty({\n    description: 'The name of the concentrate.',\n    type: String,\n    example: 'Calcium Nitrate',\n  })\n  name: string;\n\n  /**\n   * The description of the concentrate.\n   * @type {string}\n   * @example 'A concentrate containing calcium nitrate.'\n   */\n  @ApiProperty({\n    description: 'The descriptio of ',\n    type: String,\n    example: 'A concentrate containing calcium nitrate.',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateElementDto.html":{"url":"classes/CreateElementDto.html","title":"class - CreateElementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateElementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/water/dto/create-element.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object for creating a new element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                concentration\n                            \n                            \n                                    \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        concentration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The atomic number of the element.', type: Number})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/water/dto/create-element.dto.ts:51\n                        \n                    \n\n            \n                \n                    The atomic number of the element.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The symbol of the element.', type: String})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/water/dto/create-element.dto.ts:37\n                        \n                    \n\n            \n                \n                    The symbol of the element.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the element.', type: String})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/water/dto/create-element.dto.ts:23\n                        \n                    \n\n            \n                \n                    The name of the element.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsOptional, IsNumber } from 'class-validator';\n\n/**\n * Data Transfer Object for creating a new element.\n *\n * @class CreateElementDto\n */\nexport class CreateElementDto {\n\n  /**\n   * The name of the element.\n   * @type {string}\n   * @memberof CreateElementDto\n   * @example 'Calcium'\n   */\n  @ApiProperty({\n    description: 'The name of the element.',\n    type: String,\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * The symbol of the element.\n   * @type {string}\n   * @memberof CreateElementDto\n   * @example 'Ca'\n   */\n  @ApiProperty({\n    description: 'The symbol of the element.',\n    type: String,\n  })\n  @IsString()\n  @IsOptional()\n  form: string;\n\n  /**\n   * The atomic number of the element.\n   * @type {number}\n   * @memberof CreateElementDto\n   * @example 20\n   */\n  @ApiProperty({\n    description: 'The atomic number of the element.',\n    type: Number,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  concentration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFertilizerDto.html":{"url":"classes/CreateFertilizerDto.html","title":"class - CreateFertilizerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFertilizerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer/dto/create-fertilizer.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for creating a fertilizer.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the fertilizer', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/dto/create-fertilizer.dto.ts:60\n                        \n                    \n\n            \n                \n                    The description of the fertilizer.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the fertilizer', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/dto/create-fertilizer.dto.ts:33\n                        \n                    \n\n            \n                \n                    The name of the fertilizer.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The price of the fertilizer', type: Number, minimum: 0})@ApiProperty({description: 'The price of the fertilizer', type: Number, minimum: 0})@IsNumber({allowInfinity: false, allowNaN: false})@Min(0)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/dto/create-fertilizer.dto.ts:91\n                        \n                    \n\n            \n                \n                    The price of the fertilizer.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FertilizerType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The type of fertilizer', type: String, enum: FertilizerType})@IsEnum(FertilizerType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/dto/create-fertilizer.dto.ts:47\n                        \n                    \n\n            \n                \n                    The type of fertilizer.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNumber, IsOptional, IsEnum, Min } from 'class-validator';\n\n/**\n * The type of fertilizer.\n * @export\n * @enum {string}\n * @example 'solid'\n * @example 'liquid'\n */\nexport enum FertilizerType {\n  SOLID = 'solid',\n  LIQUID = 'liquid',\n}\n\n/**\n * Data transfer object for creating a fertilizer.\n * @export\n * @class CreateFertilizerDto\n */\nexport class CreateFertilizerDto {\n  /**\n   * The name of the fertilizer.\n   * @type {string}\n   * @memberof CreateFertilizerDto\n   * @example 'Calcium Nitrate'\n   */\n  @ApiProperty({\n    description: 'The name of the fertilizer',\n    type: String,\n  })\n  @IsString()\n  name: string;\n\n  /**\n   * The type of fertilizer.\n   * @type {FertilizerType}\n   * @memberof CreateFertilizerDto\n   * @example 'solid'\n   */\n  @ApiProperty({\n    description: 'The type of fertilizer',\n    type: String,\n    enum: FertilizerType,\n  })\n  @IsEnum(FertilizerType)\n  type: FertilizerType;\n\n  /**\n   * The description of the fertilizer.\n   * @type {string}\n   * @memberof CreateFertilizerDto\n   * @example 'A fertilizer containing calcium nitrate.'\n   */\n  @ApiProperty({\n    description: 'The description of the fertilizer',\n    type: String,\n  })\n  @IsString()\n  description: string;\n\n  /**\n   * The price of the fertilizer.\n   * @type {number}\n   * @memberof CreateFertilizerDto\n   * @example 5.99\n   */\n  @ApiProperty({\n    description: 'The price of the fertilizer',\n    type: Number,\n    minimum: 0,\n  })\n\n  /**\n   * The price of the fertilizer.\n   * @type {number}\n   * @memberof CreateFertilizerDto\n   * @example 5.99\n   */\n  @ApiProperty({\n    description: 'The price of the fertilizer',\n    type: Number,\n    minimum: 0,\n  })\n  @IsNumber({\n    allowInfinity: false,\n    allowNaN: false,\n  })\n  @Min(0)\n  @IsOptional()\n  price?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFertilizerUnitDto.html":{"url":"classes/CreateFertilizerUnitDto.html","title":"class - CreateFertilizerUnitDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFertilizerUnitDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer-unit/dto/create-fertilizer-unit.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for creating a fertilizer unit.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the fertilizer unit.', type: String})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-fertilizer-unit.dto.ts:28\n                        \n                    \n\n            \n                \n                    The description of the fertilizer unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the fertilizer unit.', type: String})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-fertilizer-unit.dto.ts:17\n                        \n                    \n\n            \n                \n                    The name of the fertilizer unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The price of the fertilizer unit.', type: Number, minimum: 0})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-fertilizer-unit.dto.ts:40\n                        \n                    \n\n            \n                \n                    The price of the fertilizer unit.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\n/**\n * Data transfer object for creating a fertilizer unit.\n */\nexport class CreateFertilizerUnitDto {\n  /**\n   * The name of the fertilizer unit.\n   */\n  @ApiProperty({\n    description: 'The name of the fertilizer unit.',\n    type: String,\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * The description of the fertilizer unit.\n   */\n  @ApiProperty({\n    description: 'The description of the fertilizer unit.',\n    type: String,\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  /**\n   * The price of the fertilizer unit.\n   */\n  @ApiProperty({\n    description: 'The price of the fertilizer unit.',\n    type: Number,\n    minimum: 0,\n  })\n  @IsNumber()\n  @IsOptional()\n  price?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePumpDto.html":{"url":"classes/CreatePumpDto.html","title":"class - CreatePumpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePumpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer-unit/dto/create-pump.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for creating a pump.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                concentrate\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                factor\n                            \n                            \n                                    \n                                    \n                                    \n                                flowRate\n                            \n                            \n                                    \n                                    \n                                    \n                                maxFlowRate\n                            \n                            \n                                    \n                                    \n                                    \n                                minFlowRate\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        concentrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The concentrate of the pump.', type: String, example: 'Concentrate 1'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-pump.dto.ts:70\n                        \n                    \n\n            \n                \n                    The concentrate of the pump.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the pump.', type: String, example: 'This is pump 1'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-pump.dto.ts:31\n                        \n                    \n\n            \n                \n                    The description of the pump.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        factor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The factor of the pump.', type: Number, example: 1})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-pump.dto.ts:96\n                        \n                    \n\n            \n                \n                    The factor of the pump.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        flowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The flow rate of the pump.', type: Number, example: 1})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-pump.dto.ts:83\n                        \n                    \n\n            \n                \n                    The flow rate of the pump.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        maxFlowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The maximum flow rate of the pump.', type: Number, example: 100})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-pump.dto.ts:57\n                        \n                    \n\n            \n                \n                    The maximum flow rate of the pump.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        minFlowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The minimum flow rate of the pump.', type: Number, example: 10})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-pump.dto.ts:44\n                        \n                    \n\n            \n                \n                    The minimum flow rate of the pump.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the pump.', type: String, example: 'Pump 1'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/create-pump.dto.ts:19\n                        \n                    \n\n            \n                \n                    The name of the pump.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsNumber } from 'class-validator';\n\n/**\n * Data transfer object for creating a pump.\n */\nexport class CreatePumpDto {\n  /**\n   * The name of the pump.\n   * @example 'Pump 1'\n   */\n  @ApiProperty({\n    description: 'The name of the pump.',\n    type: String,\n    example: 'Pump 1',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * The description of the pump.\n   * @example 'This is pump 1'\n   */\n  @ApiProperty({\n    description: 'The description of the pump.',\n    type: String,\n    example: 'This is pump 1',\n  })\n  @IsString()\n  description: string;\n\n  /**\n   * The minimum flow rate of the pump.\n   * @example 10\n   */\n  @ApiProperty({\n    description: 'The minimum flow rate of the pump.',\n    type: Number,\n    example: 10,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  minFlowRate: number;\n\n  /**\n   * The maximum flow rate of the pump.\n   * @example 100\n   */\n  @ApiProperty({\n    description: 'The maximum flow rate of the pump.',\n    type: Number,\n    example: 100,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  maxFlowRate: number;\n\n  /**\n   * The concentrate of the pump.\n   * @example 'Concentrate 1'\n   */\n  @ApiProperty({\n    description: 'The concentrate of the pump.',\n    type: String,\n    example: 'Concentrate 1',\n  })\n  @IsString()\n  @IsNotEmpty()\n  concentrate: string;\n\n  /**\n   * The flow rate of the pump.\n   * @example 1.0\n   */\n  @ApiProperty({\n    description: 'The flow rate of the pump.',\n    type: Number,\n    example: 1.0,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  flowRate: number;\n\n  /**\n   * The factor of the pump.\n   * @example 1.0\n   */\n  @ApiProperty({\n    description: 'The factor of the pump.',\n    type: Number,\n    example: 1.0,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  factor: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRecipeDto.html":{"url":"classes/CreateRecipeDto.html","title":"class - CreateRecipeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRecipeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/recipe/dto/create-recipe.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                B\n                            \n                            \n                                    \n                                Ca\n                            \n                            \n                                    \n                                Cu\n                            \n                            \n                                    \n                                Fe\n                            \n                            \n                                    \n                                K\n                            \n                            \n                                    \n                                Mg\n                            \n                            \n                                    \n                                Mn\n                            \n                            \n                                    \n                                N\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                P\n                            \n                            \n                                    \n                                S\n                            \n                            \n                                    \n                                Zn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        B\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Ca\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Cu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Fe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        K\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Mg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Mn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        N\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        P\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        S\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Zn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/recipe/dto/create-recipe.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\n\nexport class CreateRecipeDto {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ type: Number })\n  N: number;\n\n  @Prop({ type: Number })\n  P: number;\n\n  @Prop({ type: Number })\n  K: number;\n\n  @Prop({ type: Number })\n  Ca: number;\n\n  @Prop({ type: Number })\n  Mg: number;\n\n  @Prop({ type: Number })\n  S: number;\n\n  @Prop({ type: Number })\n  Fe: number;\n\n  @Prop({ type: Number })\n  Mn: number;\n\n  @Prop({ type: Number })\n  Zn: number;\n\n  @Prop({ type: Number })\n  Cu: number;\n\n  @Prop({ type: Number })\n  B: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWaterDto.html":{"url":"classes/CreateWaterDto.html","title":"class - CreateWaterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWaterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/water/dto/create-water.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                EC\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                pH\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/water/dto/create-water.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        EC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/water/dto/create-water.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/water/dto/create-water.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/water/dto/create-water.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  IsNumber,\n  IsArray,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Element } from 'src/schemas/element.schema';\n\nexport class CreateWaterDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  pH: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  EC: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Element.html":{"url":"classes/Element.html","title":"class - Element","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Element\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/element.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Element schema.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                concentration\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the element.', type: String, example: '60f790f3b311f83d1f4f3f3d'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/element.schema.ts:21\n                        \n                    \n\n            \n                \n                    The ID of the element.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        concentration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Concentration of the element in the fertilizer in percent', type: Number, example: 10})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/element.schema.ts:48\n                        \n                    \n\n            \n                \n                    The concentration of the element in the fertilizer in percent.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Form of the element', type: String, example: 'NO3'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/element.schema.ts:62\n                        \n                    \n\n            \n                \n                    The form of the element.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the element.', type: String, example: 'Nitrogen'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/element.schema.ts:35\n                        \n                    \n\n            \n                \n                    The name of the element.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Document, Types } from 'mongoose';\n\n/**\n * Element schema.\n */\n@Schema()\nexport class Element {\n  /**\n   * The ID of the element.\n   * @type {Types.ObjectId}\n   * @required\n   * @example {60f790f3b311f83d1f4f3f3d}\n   */\n  @ApiProperty({\n    description: 'The ID of the element.',\n    type: String,\n    example: '60f790f3b311f83d1f4f3f3d',\n  })\n  _id: Types.ObjectId;\n\n  /**\n   * The name of the element.\n   * @type {string}\n   * @required\n   * @example 'Nitrogen'\n   */\n  @ApiProperty({\n    description: 'The name of the element.',\n    type: String,\n    example: 'Nitrogen',\n  })\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The concentration of the element in the fertilizer in percent.\n   * @type {number}\n   * @required\n   */\n  @ApiProperty({\n    description: 'Concentration of the element in the fertilizer in percent',\n    type: Number,\n    example: 10,\n  })\n  @Prop({ required: true })\n  concentration: number;\n\n  /**\n   * The form of the element.\n   * @type {string}\n   * @required\n   * @example 'NO3'\n   */\n  @ApiProperty({\n    description: 'Form of the element',\n    type: String,\n    example: 'NO3',\n  })\n  @Prop({ required: true })\n  form: string;\n}\nexport const ElementSchema = SchemaFactory.createForClass(Element);\nexport type ElementDocument = Element & Document;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ElementController.html":{"url":"controllers/ElementController.html","title":"controller - ElementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ElementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer/element.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fertilizers/:fertilizerId/elements\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing elements in a fertilizer.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(fertilizerId: string, createElementDto: UpdateElementDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/element.controller.ts:45\n                        \n                    \n\n\n            \n                \n                        Creates a new element and adds it to a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                createElementDto\n                                            \n                                                            UpdateElementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing element details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created element.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(fertilizerId: string, elementId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':elementId')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/element.controller.ts:58\n                        \n                    \n\n\n            \n                \n                        Finds all elements in a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                An array of all elements in the fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(fertilizerId: string, elementId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':elementId')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/element.controller.ts:96\n                        \n                    \n\n\n            \n                \n                        Deletes an element from a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the element.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The deleted element.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(fertilizerId: string, elementId: string, updateElementDto: UpdateElementDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':elementId')@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/element.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        Updates an element in a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the element.\n\n\n                                            \n                                        \n                                        \n                                                updateElementDto\n                                            \n                                                            UpdateElementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated element details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated element.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Param,\n  Body,\n  Get,\n  Delete,\n  Patch,\n  Logger,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ElementService } from './element.service';\nimport { UpdateElementDto } from './dto/update-element.dto';\nimport { Element } from 'src/schemas/element.schema';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller class for managing elements in a fertilizer.\n */\n@ApiTags('Fertilizer/Elements')\n@Controller('fertilizers/:fertilizerId/elements')\nexport class ElementController {\n  /**\n   * Logger instance.\n   */\n  private readonly logger = new Logger(ElementController.name);\n\n  /**\n   * Constructor for the ElementController class.\n   * @param elementService - The service class for managing elements.\n   * @returns An instance of the ElementController\n   * class.\n   */\n  constructor(private readonly elementService: ElementService) {}\n\n  /**\n   * Creates a new element and adds it to a fertilizer.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @param createElementDto - The data transfer object containing element details.\n   * @returns The newly created element.\n   */\n  @Post()\n  @UsePipes(ValidationPipe)\n  async create(\n    @Param('fertilizerId') fertilizerId: string,\n    @Body() createElementDto: UpdateElementDto,\n  ): Promise {\n    return this.elementService.create(fertilizerId, createElementDto);\n  }\n\n  /**\n   * Finds all elements in a fertilizer.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @returns An array of all elements in the fertilizer.\n   */\n  @Get(':elementId')\n  async findOne(\n    @Param('fertilizerId') fertilizerId: string,\n    @Param('elementId') elementId: string,\n  ): Promise {\n    return this.elementService.findOne(fertilizerId, elementId);\n  }\n\n  /**\n   * Updates an element in a fertilizer.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @param elementId - The ID of the element.\n   * @param updateElementDto - The data transfer object containing the updated element details.\n   * @returns The updated element.\n   * @throws NotFoundException if the element is not found.\n   * @throws BadRequestException if the element is not updated.\n   */\n  @Patch(':elementId')\n  @UsePipes(ValidationPipe)\n  async update(\n    @Param('fertilizerId') fertilizerId: string,\n    @Param('elementId') elementId: string,\n    @Body() updateElementDto: UpdateElementDto,\n  ): Promise {\n    return this.elementService.update(\n      fertilizerId,\n      elementId,\n      updateElementDto,\n    );\n  }\n\n  /**\n   * Deletes an element from a fertilizer.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @param elementId - The ID of the element.\n   * @returns The deleted element.\n   * @throws NotFoundException if the element is not found.\n   */\n  @Delete(':elementId')\n  async remove(\n    @Param('fertilizerId') fertilizerId: string,\n    @Param('elementId') elementId: string,\n  ): Promise {\n    return this.elementService.remove(fertilizerId, elementId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementService.html":{"url":"injectables/ElementService.html","title":"injectable - ElementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer/element.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for managing elements in a fertilizer.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateComposition\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fertilizerModel: Model, elementModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/fertilizer/element.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fertilizerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateComposition\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateComposition(fertilizer: FertilizerDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/element.service.ts:158\n                        \n                    \n\n\n            \n                \n                        Calculates the composition of a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizer\n                                            \n                                                            FertilizerDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe fertilizer to calculate the composition for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(fertilizerId: string, createElementDto: UpdateElementDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/element.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Creates a new element and adds it to a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                createElementDto\n                                            \n                                                            UpdateElementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing element details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created element.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(fertilizerId: string, elementId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/element.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Finds all elements in a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The elements in the fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(fertilizerId: string, elementId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/element.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Removes an element from a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the element to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The removed element.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(fertilizerId: string, elementId: string, updateElementDto: UpdateElementDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/element.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Updates an element in a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the element to update.\n\n\n                                            \n                                        \n                                        \n                                                updateElementDto\n                                            \n                                                            UpdateElementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing updated element details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated element.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ElementService.name)\n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/element.service.ts:20\n                        \n                    \n\n            \n                \n                    Logger instance.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { UpdateElementDto } from './dto/update-element.dto';\nimport { Element, ElementDocument } from 'src/schemas/element.schema';\nimport { Fertilizer, FertilizerDocument } from 'src/schemas/fertilizer.schema';\nimport { elementBase } from 'src/shared/data/elementBase';\nimport { elementForm } from '../shared/types/elementForm';\nimport { baseElement } from '../shared/types/baseElement';\nimport { baseIon } from 'src/shared/types/baseIon';\n\n/**\n * Service class for managing elements in a fertilizer.\n */\n@Injectable()\nexport class ElementService {\n  /**\n   * Logger instance.\n   */\n  private readonly logger = new Logger(ElementService.name);\n  /**\n   *\n   * @param fertilizerModel\n   * @param elementModel\n   */\n  constructor(\n    @InjectModel(Fertilizer.name)\n    private readonly fertilizerModel: Model,\n    @InjectModel(Element.name)\n    private readonly elementModel: Model,\n  ) {}\n\n  /**\n   * Creates a new element and adds it to a fertilizer.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @param createElementDto - The data transfer object containing element details.\n   * @returns The newly created element.\n   * @throws NotFoundException if the fertilizer is not found.\n   */\n  async create(\n    fertilizerId: string,\n    createElementDto: UpdateElementDto,\n  ): Promise {\n    const fertilizer = await this.fertilizerModel.findById(fertilizerId);\n    if (!fertilizer) {\n      throw new NotFoundException(\n        `Fertilizer with ID ${fertilizerId} not found`,\n      );\n    }\n\n    const newElement = await this.elementModel.create(createElementDto);\n    fertilizer.elements.push(newElement);\n    await fertilizer.save();\n    await this.calculateComposition(fertilizer);\n    return newElement;\n  }\n\n  /**\n   * Finds all elements in a fertilizer.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @returns The elements in the fertilizer.\n   * @throws NotFoundException if the fertilizer is not found.\n   */\n  async findOne(fertilizerId: string, elementId: string): Promise {\n    const fertilizer = await this.fertilizerModel.findById(fertilizerId);\n    if (!fertilizer) {\n      throw new NotFoundException(\n        `Fertilizer with ID ${fertilizerId} not found`,\n      );\n    }\n\n    const element = fertilizer.elements.find(\n      (e) => e._id.toString() == elementId,\n    );\n    if (!element) {\n      throw new NotFoundException(`Element with ID ${elementId} not found`);\n    }\n\n    return element;\n  }\n\n  /**\n   * Updates an element in a fertilizer.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @param elementId - The ID of the element to update.\n   * @param updateElementDto - The data transfer object containing updated element details.\n   * @returns The updated element.\n   * @throws NotFoundException if the fertilizer or element is not found.\n   */\n  async update(\n    fertilizerId: string,\n    elementId: string,\n    updateElementDto: UpdateElementDto,\n  ): Promise {\n    try {\n      const fertilizer = await this.fertilizerModel.findOne({\n        _id: fertilizerId,\n      });\n      if (!fertilizer) {\n        throw new NotFoundException(\n          `Element with ID ${elementId} not found in fertilizer with ID ${fertilizerId}`,\n        );\n      }\n      const element: Element = fertilizer.elements.find(\n        (e) => e._id.toString() == elementId,\n      );\n      if (!element) {\n        throw new NotFoundException(\n          `Element with ID ${elementId} not found in fertilizer with ID ${fertilizerId}`,\n        );\n      }\n      element.concentration = updateElementDto.concentration;\n      await fertilizer.save();\n      await this.calculateComposition(fertilizer);\n      this.logger.debug(element);\n      return element;\n    } catch (e) {\n      new NotFoundException(\n        { message: e.message },\n        `Element with ID ${elementId} not found`,\n      );\n    }\n  }\n\n  /**\n   * Removes an element from a fertilizer.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @param elementId - The ID of the element to remove.\n   * @returns The removed element.\n   * @throws NotFoundException if the fertilizer or element is not found.\n   */\n\n  async remove(fertilizerId: string, elementId: string): Promise {\n    const fertilizer = await this.fertilizerModel.findById(fertilizerId);\n    if (!fertilizer) {\n      throw new NotFoundException(\n        `Fertilizer with ID ${fertilizerId} not found`,\n      );\n    }\n\n    const element = fertilizer.elements.find(\n      (e) => e._id.toString() == elementId,\n    );\n    if (!element) {\n      throw new NotFoundException(`Element with ID ${elementId} not found`);\n    }\n    await fertilizer.save();\n    await this.calculateComposition(fertilizer);\n    return element;\n  }\n\n  /**\n   * Calculates the composition of a fertilizer.\n   * @param fertilizer - The fertilizer to calculate the composition for.\n   * @returns The updated fertilizer.\n   * @throws NotFoundException if there is an error during the calculation.\n   */\n  async calculateComposition(\n    fertilizer: FertilizerDocument,\n  ): Promise {\n    try {\n      const content: { element: string; concentration: number }[] = [];\n      let kationes: number = 0;\n      let aniones: number = 0;\n      fertilizer.elements.map(async (element: Element) => {\n        const baseElement: baseElement = elementBase.find(\n          (el: baseElement) => el.name === element.name,\n        );\n        const baseForm: elementForm = baseElement.forms.find(\n          (el: elementForm) => el.symbol === element.form,\n        );\n        const baseIone: baseIon = baseForm.ione;\n        if (!baseElement) {\n          throw new NotFoundException(\n            `Base element for ${element.name} not found`,\n          );\n        }\n        if (!baseForm) {\n          throw new NotFoundException(\n            `Base form for ${element.form} not found`,\n          );\n        }\n\n        const elementConcentration: number =\n          element.concentration * 10 * (baseElement.mMass / baseForm.mMass);\n        content.push({\n          element: baseElement.symbol,\n          concentration: elementConcentration,\n        });\n        if (baseIone) {\n          const ionesConcentration: number = Math.abs(\n            elementConcentration * baseIone.charge,\n          );\n\n          if (baseIone.charge > 0) {\n            kationes += ionesConcentration;\n          } else {\n            aniones += ionesConcentration;\n          }\n        }\n      });\n\n      this.logger.debug(`Kationes: ${kationes}`);\n      this.logger.debug(`Aniones: ${aniones}`);\n      fertilizer.kationes = kationes;\n      fertilizer.aniones = aniones;\n      fertilizer.content = content;\n      return fertilizer.save();\n    } catch (error) {\n      this.logger.error(error.message);\n      throw new NotFoundException(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fertilizer.html":{"url":"classes/Fertilizer.html","title":"class - Fertilizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fertilizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/fertilizer.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                aniones\n                            \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                elements\n                            \n                            \n                                    \n                                kationes\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aniones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Element[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        kationes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: undefined, default: 'solid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer.schema.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Element, ElementSchema } from './element.schema';\n\n@Schema()\nexport class Fertilizer {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ enum: ['solid', 'liquid'], default: 'solid' })\n  type: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  price: number; // price per kg\n\n  @Prop({ type: [ElementSchema], default: [] })\n  elements: Element[];\n\n  @Prop({\n    type: [\n      {\n        element: { type: String, required: true },\n        concentration: { type: Number, required: true },\n      },\n    ],\n    default: [],\n  })\n  content: { element: string; concentration: number }[];\n\n  @Prop({\n    type: Number,\n  })\n  aniones: number;\n\n  @Prop({\n    type: Number,\n  })\n  kationes: number;\n}\n\nexport const FertilizerSchema = SchemaFactory.createForClass(Fertilizer);\nexport type FertilizerDocument = Fertilizer & Document;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FertilizerController.html":{"url":"controllers/FertilizerController.html","title":"controller - FertilizerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FertilizerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/concentrate/fertilizer.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller class for managing fertilizers.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addFertilizer\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                removeFertilizer\n                            \n                            \n                                    \n                                updateFertilizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFertilizer(concentrateId: string, addFertilizerDto: AddFertilizerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.controller.ts:45\n                        \n                    \n\n\n            \n                \n                        Adds a new fertilizer to a concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                        \n                                                addFertilizerDto\n                                            \n                                                            AddFertilizerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing fertilizer details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The newly added fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(concentrateId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.controller.ts:34\n                        \n                    \n\n\n            \n                \n                        Finds all fertilizers for a given concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of all fertilizers for the given concentrate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFertilizer(concentrateId: string, fertilizerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':fertilizerId')\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.controller.ts:82\n                        \n                    \n\n\n            \n                \n                        Deletes a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deleted fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFertilizer(concentrateId: string, fertilizerId: string, updateFertilizerDto: UpdateFertilizerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':fertilizerId')\n                \n            \n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.controller.ts:63\n                        \n                    \n\n\n            \n                \n                        Updates a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                updateFertilizerDto\n                                            \n                                                            UpdateFertilizerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing updated fertilizer details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated fertilizer.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { FertilizerService } from './fertilizer.service';\nimport { AddFertilizerDto } from './dto/add-fertilizer.dto';\nimport { UpdateFertilizerDto } from './dto/update-fertilizer.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller class for managing fertilizers.\n */\n@ApiTags('Concentrate/Fertilizers')\n@Controller({ path: 'concentrates/:concentrateId/fertilizers', version: '1' })\nexport class FertilizerController {\n  /**\n   * Constructor for the FertilizerController class.\n   * @param fertilizerService - The service class for managing fertilizers.\n   * @returns An instance of the FertilizerController class.\n   */\n  constructor(private readonly fertilizerService: FertilizerService) {}\n\n  /**\n   * Finds all fertilizers for a given concentrate.\n   * @param concentrateId - The ID of the concentrate.\n   * @returns An array of all fertilizers for the given concentrate.\n   */\n  @Get()\n  findAll(@Param('concentrateId') concentrateId: string): Promise {\n    return this.fertilizerService.findAll(concentrateId);\n  }\n\n  /**\n   * Adds a new fertilizer to a concentrate.\n   * @param concentrateId - The ID of the concentrate.\n   * @param addFertilizerDto - The data transfer object containing fertilizer details.\n   * @returns The newly added fertilizer.\n   */\n  @Post()\n  addFertilizer(\n    @Param('concentrateId') concentrateId: string,\n    @Body() addFertilizerDto: AddFertilizerDto,\n  ) {\n    return this.fertilizerService.addFertilizer(\n      concentrateId,\n      addFertilizerDto,\n    );\n  }\n\n  /**\n   * Updates a fertilizer.\n   * @param concentrateId - The ID of the concentrate.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @param updateFertilizerDto - The data transfer object containing updated fertilizer details.\n   * @returns The updated fertilizer.\n   */\n  @Patch(':fertilizerId')\n  updateFertilizer(\n    @Param('concentrateId') concentrateId: string,\n    @Param('fertilizerId') fertilizerId: string,\n    @Body() updateFertilizerDto: UpdateFertilizerDto,\n  ) {\n    return this.fertilizerService.updateFertilizer(\n      concentrateId,\n      fertilizerId,\n      updateFertilizerDto,\n    );\n  }\n\n  /**\n   * Deletes a fertilizer.\n   * @param concentrateId - The ID of the concentrate.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @returns The deleted fertilizer.\n   */\n  @Delete(':fertilizerId')\n  removeFertilizer(\n    @Param('concentrateId') concentrateId: string,\n    @Param('fertilizerId') fertilizerId: string,\n  ) {\n    return this.fertilizerService.removeFertilizer(concentrateId, fertilizerId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FertilizerController-1.html":{"url":"controllers/FertilizerController-1.html","title":"controller - FertilizerController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FertilizerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer/fertilizer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fertilizers\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing fertilizers.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createFertilizer\n                            \n                            \n                                    \n                                    Async\n                                deleteFertilizer\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                updateFertilizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFertilizer(createFertilizerDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.controller.ts:38\n                        \n                    \n\n\n            \n                \n                        Creates a new fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createFertilizerDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing fertilizer details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The newly created fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFertilizer(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.controller.ts:112\n                        \n                    \n\n\n            \n                \n                        Deletes a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The deleted fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.controller.ts:54\n                        \n                    \n\n\n            \n                \n                        Finds all fertilizers.\nsuccessfully.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An array of all fertilizers.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(params: IdParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.controller.ts:71\n                        \n                    \n\n\n            \n                \n                        Finds a single fertilizer by ID.\nsuccessfully.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            IdParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The fertilizer\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFertilizer(id: string, updateFertilizerDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.controller.ts:91\n                        \n                    \n\n\n            \n                \n                        Updates a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the fertilizer.\n\n                                            \n                                        \n                                        \n                                                updateFertilizerDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data transfer object containing fertilizer details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The updated fertilizer.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  Body,\n  Patch,\n} from '@nestjs/common';\nimport { FertilizerService } from './fertilizer.service';\nimport { IdParamDto } from 'src/shared/dto/idparam.dto';\nimport {\n  NotFoundException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller class for managing fertilizers.\n */\n@ApiTags('Fertilizers')\n@Controller('fertilizers')\nexport class FertilizerController {\n  /**\n   * Constructor for the FertilizerController class.\n   * @param fertilizerService - The service class for managing fertilizers.\n   * @returns An instance of the FertilizerController class.\n   */\n  constructor(private readonly fertilizerService: FertilizerService) {}\n\n  /**\n   * Creates a new fertilizer.\n   * @param createFertilizerDto - The data transfer object containing fertilizer details.\n   * @returns The newly created fertilizer.\n   * @throws InternalServerErrorException if the fertilizer is not created.\n   */\n  @Post()\n  async createFertilizer(@Body() createFertilizerDto: any) {\n    try {\n      return await this.fertilizerService.createFertilizer(createFertilizerDto);\n    } catch {\n      throw new InternalServerErrorException('Failed to create fertilizer');\n    }\n  }\n\n  /**\n   * Finds all fertilizers.\n   * @returns An array of all fertilizers.\n   * @throws InternalServerErrorException if the fertilizers are not retrieved\n   * successfully.\n   * @throws NotFoundException if no fertilizers are found.\n   */\n  @Get()\n  async findAll() {\n    try {\n      return await this.fertilizerService.findAll();\n    } catch {\n      throw new InternalServerErrorException('Failed to retrieve fertilizers');\n    }\n  }\n\n  /**\n   * Finds a single fertilizer by ID.\n   * @param params - The ID of the fertilizer.\n   * @returns The fertilizer\n   * @throws NotFoundException if the fertilizer is not found.\n   * @throws InternalServerErrorException if the fertilizer is not retrieved.\n   * successfully.\n   */\n  @Get(':id')\n  async findOne(@Param('id') params: IdParamDto) {\n    try {\n      const fertilizer = await this.fertilizerService.findOne(params.id);\n      if (!fertilizer) {\n        throw new NotFoundException('Fertilizer not found');\n      }\n      return fertilizer;\n    } catch {\n      throw new InternalServerErrorException('Failed to retrieve fertilizer');\n    }\n  }\n\n  /**\n   * Updates a fertilizer.\n   * @param id  The ID of the fertilizer.\n   * @param updateFertilizerDto The data transfer object containing fertilizer details.\n   * @returns The updated fertilizer.\n   * @throws InternalServerErrorException if the fertilizer is not updated.\n   */\n  @Patch(':id')\n  async updateFertilizer(\n    @Param('id') id: string,\n    @Body() updateFertilizerDto: any,\n  ) {\n    try {\n      return await this.fertilizerService.updateFertilizer(\n        id,\n        updateFertilizerDto,\n      );\n    } catch {\n      throw new InternalServerErrorException('Failed to update fertilizer');\n    }\n  }\n\n  /**\n   * Deletes a fertilizer.\n   * @param id - The ID of the fertilizer.\n   * @returns The deleted fertilizer.\n   * @throws InternalServerErrorException if the fertilizer is not deleted.\n   */\n  @Delete(':id')\n  async deleteFertilizer(@Param('id') id: string) {\n    try {\n      return await this.fertilizerService.deleteFertilizer(id);\n    } catch {\n      throw new InternalServerErrorException('Failed to delete fertilizer');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FertilizerModule.html":{"url":"modules/FertilizerModule.html","title":"module - FertilizerModule","body":"\n                   \n\n\n\n\n    Modules\n    FertilizerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FertilizerModule\n\n\n\ncluster_FertilizerModule_imports\n\n\n\ncluster_FertilizerModule_exports\n\n\n\ncluster_FertilizerModule_providers\n\n\n\n\nSchemasModule\n\nSchemasModule\n\n\n\nFertilizerModule\n\nFertilizerModule\n\nFertilizerModule -->\n\nSchemasModule->FertilizerModule\n\n\n\n\n\nElementService \n\nElementService \n\nElementService  -->\n\nFertilizerModule->ElementService \n\n\n\n\n\nFertilizerService \n\nFertilizerService \n\nFertilizerService  -->\n\nFertilizerModule->FertilizerService \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nFertilizerModule->Logger \n\n\n\n\n\nElementService\n\nElementService\n\nFertilizerModule -->\n\nElementService->FertilizerModule\n\n\n\n\n\nFertilizerService\n\nFertilizerService\n\nFertilizerModule -->\n\nFertilizerService->FertilizerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fertilizer/fertilizer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ElementService\n                        \n                        \n                            FertilizerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FertilizerController\n                        \n                        \n                            ElementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SchemasModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ElementService\n                        \n                        \n                            FertilizerService\n                        \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { FertilizerService } from './fertilizer.service';\nimport { FertilizerController } from './fertilizer.controller';\nimport { SchemasModule } from 'src/schemas/schemas.module';\nimport { ElementService } from './element.service';\nimport { ElementController } from './element.controller';\n\n@Module({\n  imports: [SchemasModule],\n  controllers: [FertilizerController, ElementController],\n  providers: [FertilizerService, ElementService, Logger],\n  exports: [FertilizerService, ElementService, Logger],\n})\nexport class FertilizerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FertilizerService.html":{"url":"injectables/FertilizerService.html","title":"injectable - FertilizerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FertilizerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/concentrate/fertilizer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for managing fertilizers in a concentrate.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFertilizer\n                            \n                            \n                                    Async\n                                calculateComposition\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                removeFertilizer\n                            \n                            \n                                    Async\n                                updateFertilizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fertilizerModel: Model, concentrateModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/concentrate/fertilizer.service.ts:20\n                            \n                        \n\n                \n                    \n                             Constructor for the FertilizerService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fertilizerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        concentrateModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFertilizer(concentrateId: string, addFertilizerDto: AddFertilizerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Adds a new fertilizer to a concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                        \n                                                addFertilizerDto\n                                            \n                                                            AddFertilizerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing fertilizer details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated concentrate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateComposition\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateComposition(concentrate: ConcentrateDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Calculates the composition of a concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrate\n                                            \n                                                            ConcentrateDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe concentrate document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated concentrate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(concentrateId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Finds all fertilizers in a concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                An array of fertilizers.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFertilizer(concentrateId: string, fertilizerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Removes a fertilizer from a concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated concentrate.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFertilizer(concentrateId: string, fertilizerId: string, updateFertilizerDto: UpdateFertilizerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/concentrate/fertilizer.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Updates a fertilizer in a concentrate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                concentrateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the concentrate.\n\n\n                                            \n                                        \n                                        \n                                                fertilizerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                updateFertilizerDto\n                                            \n                                                            UpdateFertilizerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing updated fertilizer details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated concentrate.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FertilizerService.name)\n                    \n                \n                    \n                        \n                                Defined in src/concentrate/fertilizer.service.ts:20\n                        \n                    \n\n            \n                \n                    Logger instance.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport {\n  Concentrate,\n  ConcentrateDocument,\n} from 'src/schemas/concentrate.schema';\nimport { Fertilizer, FertilizerDocument } from 'src/schemas/fertilizer.schema';\nimport { AddFertilizerDto } from './dto/add-fertilizer.dto';\nimport { UpdateFertilizerDto } from './dto/update-fertilizer.dto';\n\n/**\n * Service class for managing fertilizers in a concentrate.\n */\n@Injectable()\nexport class FertilizerService {\n  /**\n   * Logger instance.\n   */\n  private readonly logger = new Logger(FertilizerService.name);\n  /**\n   *  Constructor for the FertilizerService class.\n   * @param fertilizerModel\n   * @param concentrateModel\n   */\n  constructor(\n    @InjectModel(Fertilizer.name)\n    private readonly fertilizerModel: Model,\n    @InjectModel(Concentrate.name)\n    private readonly concentrateModel: Model,\n  ) {}\n\n  /**\n   * Finds all fertilizers in a concentrate.\n   * @param concentrateId - The ID of the concentrate.\n   * @returns An array of fertilizers.\n   */\n  async findAll(concentrateId: string): Promise {\n    const concentrate: Concentrate =\n      await this.concentrateModel.findById(concentrateId);\n    const fertilizers = await Promise.all(\n      concentrate.fertilizers.map(async (f: any) => {\n        return await this.fertilizerModel.findById(f.fertilizer);\n      }),\n    );\n    return fertilizers;\n  }\n\n  /**\n   * Adds a new fertilizer to a concentrate.\n   * @param concentrateId - The ID of the concentrate.\n   * @param addFertilizerDto - The data transfer object containing fertilizer details.\n   * @returns The updated concentrate.\n   */\n  async addFertilizer(\n    concentrateId: string,\n    addFertilizerDto: AddFertilizerDto,\n  ): Promise {\n    const concentrate = await this.concentrateModel.findById(concentrateId);\n    concentrate.fertilizers.push(addFertilizerDto);\n    await concentrate.save();\n    await this.calculateComposition(concentrate);\n    return concentrate;\n  }\n\n  /**\n   * Updates a fertilizer in a concentrate.\n   * @param concentrateId - The ID of the concentrate.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @param updateFertilizerDto - The data transfer object containing updated fertilizer details.\n   * @returns The updated concentrate.\n   * @throws NotFoundException if the fertilizer is not found.\n   */\n  async updateFertilizer(\n    concentrateId: string,\n    fertilizerId: string,\n    updateFertilizerDto: UpdateFertilizerDto,\n  ): Promise {\n    const concentrate = await this.concentrateModel.findById(concentrateId);\n    const fertilizer = concentrate.fertilizers.find(\n      (f: any) => f._id == fertilizerId,\n    );\n    if (!fertilizer) {\n      throw new NotFoundException(\n        `Fertilizer with ID ${fertilizerId} not found`,\n      );\n    }\n    fertilizer.concentration = updateFertilizerDto.concentration;\n    concentrate.save().then((concentrate) => {\n      this.calculateComposition(concentrate);\n    });\n    return concentrate;\n  }\n\n  /**\n   * Removes a fertilizer from a concentrate.\n   * @param concentrateId - The ID of the concentrate.\n   * @param fertilizerId - The ID of the fertilizer.\n   * @returns The updated concentrate.\n   * @throws NotFoundException if the fertilizer is not found.\n   */\n  async removeFertilizer(\n    concentrateId: string,\n    fertilizerId: string,\n  ): Promise {\n    const concentrate = await this.concentrateModel.findById(concentrateId);\n    const index = concentrate.fertilizers.findIndex(\n      (f: any) => f.fertilizer == fertilizerId,\n    );\n    concentrate.fertilizers.splice(index, 1);\n    await concentrate.save();\n    await this.calculateComposition(concentrate);\n    return concentrate;\n  }\n\n  /**\n   * Calculates the composition of a concentrate.\n   * @param concentrate - The concentrate document.\n   * @returns The updated concentrate.\n   */\n  async calculateComposition(\n    concentrate: ConcentrateDocument,\n  ): Promise {\n    const fertilizers = await Promise.all(\n      concentrate.fertilizers.flatMap(async (f: any) => {\n        const fertilizer: FertilizerDocument =\n          await this.fertilizerModel.findById(f.fertilizer);\n        if (!fertilizer) {\n          throw new NotFoundException('Fertilizer not found');\n        }\n        return { ...fertilizer.toObject(), concentration: f.concentration };\n      }),\n    );\n    this.logger.debug(fertilizers);\n    const content: any[] = fertilizers\n      .flatMap((f) =>\n        f.content.map((e) => {\n          return {\n            ...e,\n            concentration: (e.concentration * f.concentration) / 1000,\n          };\n        }),\n      )\n      .reduce((acc, curr) => {\n        const existing = acc.find((item) => item.element === curr.element);\n        if (existing) {\n          existing.concentration += curr.concentration;\n        } else {\n          acc.push(curr);\n        }\n        return acc;\n      }, []);\n\n    let kationes = 0;\n    let aniones = 0;\n    fertilizers.forEach((f) => {\n      kationes += f.kationes * f.concentration;\n      aniones += f.aniones * f.concentration;\n    });\n    concentrate.kationes = kationes;\n    concentrate.aniones = aniones;\n    concentrate.content = content;\n    return await concentrate.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FertilizerService-1.html":{"url":"injectables/FertilizerService-1.html","title":"injectable - FertilizerService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FertilizerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer/fertilizer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for managing fertilizers.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFertilizer\n                            \n                            \n                                    Async\n                                deleteFertilizer\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateFertilizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fertilizerModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/fertilizer/fertilizer.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the FertilizerService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fertilizerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe model for the Fertilizer schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFertilizer(createFertilizerDto: CreateFertilizerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Creates a new fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createFertilizerDto\n                                            \n                                                            CreateFertilizerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing fertilizer details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFertilizer(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Deletes a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The deleted fertilizer.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.service.ts:41\n                        \n                    \n\n\n            \n                \n                         Finds all fertilizers.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                An array of all fertilizers.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Finds a fertilizer by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The fertilizer with the specified ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFertilizer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFertilizer(id: string, updateFertilizerDto: UpdateFertilizerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer/fertilizer.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Updates a fertilizer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer.\n\n\n                                            \n                                        \n                                        \n                                                updateFertilizerDto\n                                            \n                                                            UpdateFertilizerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated fertilizer details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated fertilizer.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { NotFoundException } from '@nestjs/common';\nimport { CreateFertilizerDto } from './dto/create-fertilizer.dto';\nimport { Fertilizer, FertilizerDocument } from '../schemas/fertilizer.schema';\nimport { UpdateFertilizerDto } from './dto/update-fertilizer.dto';\n\n/**\n * Service class for managing fertilizers.\n */\n@Injectable()\nexport class FertilizerService {\n  /**\n   * Constructor for the FertilizerService class.\n   * @param fertilizerModel - The model for the Fertilizer schema.\n   * @returns An instance of the FertilizerService class.\n   */\n  constructor(\n    @InjectModel(Fertilizer.name)\n    private readonly fertilizerModel: Model,\n  ) {}\n\n  /**\n   * Creates a new fertilizer.\n   * @param createFertilizerDto - The data transfer object containing fertilizer details.\n   * @returns The newly created fertilizer.\n   */\n  async createFertilizer(\n    createFertilizerDto: CreateFertilizerDto,\n  ): Promise {\n    const newFertilizer =\n      await this.fertilizerModel.create(createFertilizerDto);\n    return newFertilizer.save();\n  }\n\n  /**\n   *  Finds all fertilizers.\n   * @returns An array of all fertilizers.\n   */\n  async findAll(): Promise {\n    return this.fertilizerModel.find().exec();\n  }\n\n  /**\n   * Finds a fertilizer by ID.\n   * @param id - The ID of the fertilizer.\n   * @returns The fertilizer with the specified ID.\n   */\n  async findOne(id: string): Promise {\n    try {\n      const fertilizer = await this.fertilizerModel.findById(id).exec();\n      if (!fertilizer) {\n        throw new NotFoundException(`Fertilizer with ID ${id} not found`);\n      }\n      return fertilizer;\n    } catch (error) {\n      throw new NotFoundException(error.message);\n    }\n  }\n\n  /**\n   * Updates a fertilizer.\n   * @param id - The ID of the fertilizer.\n   * @param updateFertilizerDto - The data transfer object containing the updated fertilizer details.\n   * @returns The updated fertilizer.\n   * @throws NotFoundException if the fertilizer is not found.\n   */\n  async updateFertilizer(\n    id: string,\n    updateFertilizerDto: UpdateFertilizerDto,\n  ): Promise {\n    try {\n      const updatedFertilizer = await this.fertilizerModel\n        .findByIdAndUpdate(id, updateFertilizerDto, { new: true })\n        .exec();\n      if (!updatedFertilizer) {\n        throw new NotFoundException(`Fertilizer with ID ${id} not found`);\n      }\n      return updatedFertilizer;\n    } catch (error) {\n      throw new NotFoundException(error.message);\n    }\n  }\n\n  /**\n   * Deletes a fertilizer.\n   * @param id - The ID of the fertilizer.\n   * @returns The deleted fertilizer.\n   * @throws NotFoundException if the fertilizer is not found.\n   */\n  async deleteFertilizer(id: string): Promise {\n    try {\n      const deletedFertilizer = await this.fertilizerModel\n        .findByIdAndDelete(id)\n        .exec();\n      if (!deletedFertilizer) {\n        throw new NotFoundException(`Fertilizer with ID ${id} not found`);\n      }\n      return deletedFertilizer;\n    } catch (error) {\n      throw new NotFoundException(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FertilizerUnit.html":{"url":"classes/FertilizerUnit.html","title":"class - FertilizerUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FertilizerUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/fertilizer-unit.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                pumps\n                            \n                            \n                                    \n                                recipe\n                            \n                            \n                                    \n                                solution\n                            \n                            \n                                    \n                                water\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pumps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pump[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        recipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Recipe'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        solution\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Solution\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SolutionSchema, default: undefined, _id: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        water\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Water'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { Ion } from './ion.schema';\n\n@Schema()\nexport class Pump {\n  _id: Types.ObjectId;\n\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ required: true })\n  minFlowRate: number; // %\n\n  @Prop({ required: true })\n  maxFlowRate: number; // %\n\n  @Prop({ type: Types.ObjectId, ref: 'Concentrate' })\n  concentrate: Types.ObjectId;\n\n  @Prop({ required: true })\n  flowRate: number; // %\n\n  @Prop({ required: true })\n  factor: number;\n}\nexport const PumpSchema = SchemaFactory.createForClass(Pump);\nexport type PumpDocument = Pump & Document;\n\n@Schema()\nexport class Solution {\n  @Prop({ type: [{ type: Object }], default: [], _id: false })\n  elements: Record[];\n\n  @Prop({ type: Object, default: { kationes: [], aniones: [] } })\n  iones: { kationes: Ion[]; aniones: Ion[] };\n\n  @Prop()\n  kationes: number;\n\n  @Prop()\n  aniones: number;\n\n  @Prop()\n  EC: number;\n}\nexport const SolutionSchema = SchemaFactory.createForClass(Solution);\nexport type SolutionDocument = Solution & Document;\n\n@Schema()\nexport class FertilizerUnit {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: Types.ObjectId, ref: 'Water' })\n  water: Types.ObjectId;\n\n  @Prop({ type: Types.ObjectId, ref: 'Recipe' })\n  recipe: Types.ObjectId;\n\n  @Prop({ type: [PumpSchema], default: [] })\n  pumps: Pump[];\n\n  @Prop({ type: SolutionSchema, default: {}, _id: false })\n  solution: Solution;\n}\n\nexport const FertilizerUnitSchema =\n  SchemaFactory.createForClass(FertilizerUnit);\nexport type FertilizerUnitDocument = FertilizerUnit & Document;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FertilizerUnitController.html":{"url":"controllers/FertilizerUnitController.html","title":"controller - FertilizerUnitController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FertilizerUnitController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer-unit/fertilizer-unit.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fertilizer-units\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing fertilizer units.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createFertilizerUnit\n                            \n                            \n                                    \n                                deleteFertilizerUnit\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                updateFertilizerUnit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createFertilizerUnit\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFertilizerUnit(createFertilizerUnitDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.controller.ts:32\n                        \n                    \n\n\n            \n                \n                        Creates a new fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createFertilizerUnitDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing fertilizer unit details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The newly created fertilizer unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteFertilizerUnit\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFertilizerUnit(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.controller.ts:82\n                        \n                    \n\n\n            \n                \n                        Deletes a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deleted fertilizer unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.controller.ts:43\n                        \n                    \n\n\n            \n                \n                         Finds all fertilizer units.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of all fertilizer units.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.controller.ts:54\n                        \n                    \n\n\n            \n                \n                        Finds a single fertilizer unit by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The fertilizer unit\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateFertilizerUnit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFertilizerUnit(id: string, updateFertilizerUnitDto: UpdateFertilizerUnitDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.controller.ts:66\n                        \n                    \n\n\n            \n                \n                        Updates a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the fertilizer unit.\n\n                                            \n                                        \n                                        \n                                                updateFertilizerUnitDto\n                                            \n                                                            UpdateFertilizerUnitDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data transfer object containing fertilizer unit details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated fertilizer unit.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  Body,\n  UsePipes,\n  ValidationPipe,\n  Patch,\n} from '@nestjs/common';\nimport { FertilizerUnitService } from './fertilizer-unit.service';\nimport { UpdateFertilizerUnitDto } from './dto/update-fertilizer-unit.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller class for managing fertilizer units.\n */\n@ApiTags('Fertilizer Units')\n@Controller('fertilizer-units')\nexport class FertilizerUnitController {\n  constructor(private readonly fertilizerUnitService: FertilizerUnitService) {}\n\n  /**\n   * Creates a new fertilizer unit.\n   * @param createFertilizerUnitDto - The data transfer object containing fertilizer unit details.\n   * @returns The newly created fertilizer unit.\n   * @throws BadRequestException if the fertilizer unit is not found.\n   */\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  createFertilizerUnit(@Body() createFertilizerUnitDto: any) {\n    return this.fertilizerUnitService.createFertilizerUnit(\n      createFertilizerUnitDto,\n    );\n  }\n\n  /**\n   *  Finds all fertilizer units.\n   * @returns An array of all fertilizer units.\n   */\n  @Get()\n  findAll() {\n    return this.fertilizerUnitService.findAll();\n  }\n\n  /**\n   * Finds a single fertilizer unit by ID.\n   * @param id - The ID of the fertilizer unit.\n   * @returns The fertilizer unit\n   * @throws BadRequestException if the fertilizer unit is not found.\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.fertilizerUnitService.findOne(id);\n  }\n\n  /**\n   * Updates a fertilizer unit.\n   * @param id  The ID of the fertilizer unit.\n   * @param updateFertilizerUnitDto The data transfer object containing fertilizer unit details.\n   * @returns The updated fertilizer unit.\n   */\n  @Patch(':id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  updateFertilizerUnit(\n    @Param('id') id: string,\n    @Body() updateFertilizerUnitDto: UpdateFertilizerUnitDto,\n  ) {\n    return this.fertilizerUnitService.updateFertilizerUnit(\n      id,\n      updateFertilizerUnitDto,\n    );\n  }\n\n  /**\n   * Deletes a fertilizer unit.\n   * @param id - The ID of the fertilizer unit.\n   * @returns The deleted fertilizer unit.\n   */\n  @Delete(':id')\n  deleteFertilizerUnit(@Param('id') id: string) {\n    return this.fertilizerUnitService.deleteFertilizerUnit(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FertilizerUnitModule.html":{"url":"modules/FertilizerUnitModule.html","title":"module - FertilizerUnitModule","body":"\n                   \n\n\n\n\n    Modules\n    FertilizerUnitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FertilizerUnitModule\n\n\n\ncluster_FertilizerUnitModule_imports\n\n\n\ncluster_FertilizerUnitModule_providers\n\n\n\n\nSchemasModule\n\nSchemasModule\n\n\n\nFertilizerUnitModule\n\nFertilizerUnitModule\n\nFertilizerUnitModule -->\n\nSchemasModule->FertilizerUnitModule\n\n\n\n\n\nFertilizerUnitService\n\nFertilizerUnitService\n\nFertilizerUnitModule -->\n\nFertilizerUnitService->FertilizerUnitModule\n\n\n\n\n\nPumpService\n\nPumpService\n\nFertilizerUnitModule -->\n\nPumpService->FertilizerUnitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fertilizer-unit/fertilizer-unit.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FertilizerUnitService\n                        \n                        \n                            PumpService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FertilizerUnitController\n                        \n                        \n                            PumpController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SchemasModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FertilizerUnitService } from './fertilizer-unit.service';\nimport { FertilizerUnitController } from './fertilizer-unit.controller';\nimport { SchemasModule } from 'src/schemas/schemas.module';\nimport { PumpController } from './pump.controller';\nimport { PumpService } from './pump.service';\n\n@Module({\n  imports: [SchemasModule],\n  controllers: [FertilizerUnitController, PumpController],\n  providers: [FertilizerUnitService, PumpService],\n})\nexport class FertilizerUnitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FertilizerUnitService.html":{"url":"injectables/FertilizerUnitService.html","title":"injectable - FertilizerUnitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FertilizerUnitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer-unit/fertilizer-unit.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for managing fertilizer units.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFertilizerUnit\n                            \n                            \n                                    Async\n                                deleteFertilizerUnit\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateFertilizerUnit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fertilizerUnitModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/fertilizer-unit/fertilizer-unit.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the FertilizerUnitService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fertilizerUnitModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe model for the FertilizerUnit schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFertilizerUnit\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFertilizerUnit(createFertilizerUnitDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Creates a new fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createFertilizerUnitDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing fertilizer unit details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The newly created fertilizer unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFertilizerUnit\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFertilizerUnit(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Deletes a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The deleted fertilizer unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Finds all fertilizer units.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of all fertilizer units.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Finds a fertilizer unit by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The fertilizer unit with the specified ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFertilizerUnit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFertilizerUnit(id: string, updateFertilizerUnitDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/fertilizer-unit.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Updates a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                        \n                                                updateFertilizerUnitDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated fertilizer unit details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The updated fertilizer unit.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport {\n  FertilizerUnit,\n  FertilizerUnitDocument,\n} from 'src/schemas/fertilizer-unit.schema';\n\n/**\n * Service class for managing fertilizer units.\n */\n@Injectable()\nexport class FertilizerUnitService {\n\n  /**\n   * Constructor for the FertilizerUnitService class.\n   * @param fertilizerUnitModel - The model for the FertilizerUnit schema.\n   * @returns An instance of the FertilizerUnitService class.\n   */\n  constructor(\n    @InjectModel(FertilizerUnit.name)\n    private readonly fertilizerUnitModel: Model,\n  ) {}\n\n  /**\n   * Creates a new fertilizer unit.\n   * @param createFertilizerUnitDto - The data transfer object containing fertilizer unit details.\n   * @returns The newly created fertilizer unit.\n   */\n  async createFertilizerUnit(\n    createFertilizerUnitDto: any,\n  ): Promise {\n    const createdFertilizerUnit = new this.fertilizerUnitModel(\n      createFertilizerUnitDto,\n    );\n    return createdFertilizerUnit.save();\n  }\n\n  /**\n   * Finds all fertilizer units.\n   * @returns An array of all fertilizer units.\n   */\n  async findAll(): Promise {\n    return this.fertilizerUnitModel.find().exec();\n  }\n\n  /**\n   * Finds a fertilizer unit by ID.\n   * @param id - The ID of the fertilizer unit.\n   * @returns The fertilizer unit with the specified ID.\n   */\n  async findOne(id: string): Promise {\n    return this.fertilizerUnitModel.findById(id);\n  }\n\n  /**\n   * Updates a fertilizer unit.\n   * @param id - The ID of the fertilizer unit.\n   * @param updateFertilizerUnitDto - The data transfer object containing the updated fertilizer unit details.\n   * @returns The updated fertilizer unit.\n   */\n  async updateFertilizerUnit(\n    id: string,\n    updateFertilizerUnitDto: any,\n  ): Promise {\n    return this.fertilizerUnitModel\n      .findByIdAndUpdate(id, updateFertilizerUnitDto, { new: true })\n      .exec();\n  }\n\n  /**\n   * Deletes a fertilizer unit.\n   * @param id - The ID of the fertilizer unit.\n   * @returns The deleted fertilizer unit.\n   */\n  async deleteFertilizerUnit(id: string): Promise {\n    return this.fertilizerUnitModel.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElement.html":{"url":"interfaces/IElement.html","title":"interface - IElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/types/solution.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            concentration\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        concentration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concentration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IElement {\n  element: string;\n  concentration: number;\n}\nexport class solution {\n  elements: IElement[];\n  kationes: number; //сумма эквивалентов катионов\n  aniones: number; //сумма эквивалентов анионов\n  EC: number; //Прогнозируемая электропроводность раствора\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdParamDto.html":{"url":"classes/IdParamDto.html","title":"class - IdParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/idparam.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dto/idparam.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsMongoId } from 'class-validator';\n\nexport class IdParamDto {\n  @IsString()\n  @IsMongoId()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ion.html":{"url":"classes/Ion.html","title":"class - Ion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/ion.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                charge\n                            \n                            \n                                    \n                                concentration\n                            \n                            \n                                    \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        charge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ion.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        concentration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, min: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ion.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ion.schema.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class Ion {\n  @Prop({ required: true })\n  symbol: string;\n\n  @Prop({ required: true })\n  charge: number;\n\n  @Prop({ required: true, min: 0 })\n  concentration: number;\n}\n\nexport type IonDocument = Ion & Document;\nexport const IonSchema = SchemaFactory.createForClass(Ion);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/logger.middlewware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/logger.middlewware.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('HTTP')\n                    \n                \n                    \n                        \n                                Defined in src/common/logger.middlewware.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, Logger } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private readonly logger = new Logger('HTTP');\n\n  use(req: Request, res: Response, next: NextFunction): void {\n    const { method, originalUrl } = req;\n    const start = Date.now();\n\n    res.on('finish', () => {\n      const { statusCode } = res;\n      const duration = Date.now() - start;\n      this.logger.log(`${method} ${originalUrl} ${statusCode} - ${duration}ms`);\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pump.html":{"url":"classes/Pump.html","title":"class - Pump","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pump\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/fertilizer-unit.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    \n                                concentrate\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                factor\n                            \n                            \n                                    \n                                flowRate\n                            \n                            \n                                    \n                                maxFlowRate\n                            \n                            \n                                    \n                                minFlowRate\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        concentrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Concentrate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        factor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        flowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        maxFlowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        minFlowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { Ion } from './ion.schema';\n\n@Schema()\nexport class Pump {\n  _id: Types.ObjectId;\n\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ required: true })\n  minFlowRate: number; // %\n\n  @Prop({ required: true })\n  maxFlowRate: number; // %\n\n  @Prop({ type: Types.ObjectId, ref: 'Concentrate' })\n  concentrate: Types.ObjectId;\n\n  @Prop({ required: true })\n  flowRate: number; // %\n\n  @Prop({ required: true })\n  factor: number;\n}\nexport const PumpSchema = SchemaFactory.createForClass(Pump);\nexport type PumpDocument = Pump & Document;\n\n@Schema()\nexport class Solution {\n  @Prop({ type: [{ type: Object }], default: [], _id: false })\n  elements: Record[];\n\n  @Prop({ type: Object, default: { kationes: [], aniones: [] } })\n  iones: { kationes: Ion[]; aniones: Ion[] };\n\n  @Prop()\n  kationes: number;\n\n  @Prop()\n  aniones: number;\n\n  @Prop()\n  EC: number;\n}\nexport const SolutionSchema = SchemaFactory.createForClass(Solution);\nexport type SolutionDocument = Solution & Document;\n\n@Schema()\nexport class FertilizerUnit {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: Types.ObjectId, ref: 'Water' })\n  water: Types.ObjectId;\n\n  @Prop({ type: Types.ObjectId, ref: 'Recipe' })\n  recipe: Types.ObjectId;\n\n  @Prop({ type: [PumpSchema], default: [] })\n  pumps: Pump[];\n\n  @Prop({ type: SolutionSchema, default: {}, _id: false })\n  solution: Solution;\n}\n\nexport const FertilizerUnitSchema =\n  SchemaFactory.createForClass(FertilizerUnit);\nexport type FertilizerUnitDocument = FertilizerUnit & Document;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PumpController.html":{"url":"controllers/PumpController.html","title":"controller - PumpController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PumpController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer-unit/pump.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fertilizer-units/:fertilizerUnitId/pumps\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing pumps in a fertilizer unit.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createPump\n                            \n                            \n                                    \n                                deletePump\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                updatePump\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createPump\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPump(id: string, createPumpDto: CreatePumpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.controller.ts:38\n                        \n                    \n\n\n            \n                \n                        creates a new pump and associates it with a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Fertilizer unit ID\n\n                                            \n                                        \n                                        \n                                                createPumpDto\n                                            \n                                                            CreatePumpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pump details\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The newly created pump.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletePump\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePump(id: string, pumpId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':pumpId')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.controller.ts:81\n                        \n                    \n\n\n            \n                \n                        Deletes a pump.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Fertilizer unit ID\n\n                                            \n                                        \n                                        \n                                                pumpId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pump ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, pumpId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':pumpId')\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.controller.ts:51\n                        \n                    \n\n\n            \n                \n                        Finds all pumps in a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Fertilizer unit ID\n\n                                            \n                                        \n                                        \n                                                pumpId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of all pumps in the fertilizer unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatePump\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePump(fertilizerUnitId: string, pumpId: string, updatePumpDto: UpdatePumpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':pumpId')@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.controller.ts:67\n                        \n                    \n\n\n            \n                \n                        Updates a pump.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerUnitId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                pumpId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pump ID\n\n                                            \n                                        \n                                        \n                                                updatePumpDto\n                                            \n                                                            UpdatePumpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated pump details\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated pump.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PumpService } from './pump.service';\nimport { CreatePumpDto } from './dto/create-pump.dto';\nimport {\n  Body,\n  Post,\n  Get,\n  Param,\n  Patch,\n  Delete,\n  UsePipes,\n} from '@nestjs/common';\nimport { ValidationPipe } from '@nestjs/common';\nimport { UpdatePumpDto } from './dto/update-pump.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller class for managing pumps in a fertilizer unit.\n */\n@ApiTags('Pumps')\n@Controller('fertilizer-units/:fertilizerUnitId/pumps')\nexport class PumpController {\n  /**\n   * Constructor for the PumpController class.\n   * @param pumpService - The service class for managing pumps.\n   * @returns An instance of the PumpController class.\n   */\n  constructor(private readonly pumpService: PumpService) {}\n\n  /**\n   * creates a new pump and associates it with a fertilizer unit.\n   * @param id Fertilizer unit ID\n   * @param createPumpDto Pump details\n   * @returns The newly created pump.\n   */\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  createPump(\n    @Param('fertilizerUnitId') id: string,\n    @Body() createPumpDto: CreatePumpDto,\n  ) {\n    return this.pumpService.create(id, createPumpDto);\n  }\n\n  /**\n   * Finds all pumps in a fertilizer unit.\n   * @param id Fertilizer unit ID\n   * @returns An array of all pumps in the fertilizer unit.\n   */\n  @Get(':pumpId')\n  findOne(\n    @Param('fertilizerUnitId') id: string,\n    @Param('pumpId') pumpId: string,\n  ) {\n    return this.pumpService.findOne(id, pumpId);\n  }\n\n  /**\n   * Updates a pump.\n   * @param id Fertilizer unit ID\n   * @param pumpId Pump ID\n   * @param updatePumpDto Updated pump details\n   * @returns The updated pump.\n   */\n  @Patch(':pumpId')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  updatePump(\n    @Param('fertilizerUnitId') fertilizerUnitId: string,\n    @Param('pumpId') pumpId: string,\n    @Body() updatePumpDto: UpdatePumpDto,\n  ) {\n    return this.pumpService.update(fertilizerUnitId, pumpId, updatePumpDto);\n  }\n\n  /**\n   * Deletes a pump.\n   * @param id Fertilizer unit ID\n   * @param pumpId Pump ID\n   */\n  @Delete(':pumpId')\n  deletePump(\n    @Param('fertilizerUnitId') id: string,\n    @Param('pumpId') pumpId: string,\n  ) {\n    return this.pumpService.delete(id, pumpId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PumpService.html":{"url":"injectables/PumpService.html","title":"injectable - PumpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PumpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer-unit/pump.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for managing pumps in a fertilizer unit.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateComposition\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pumpModel: Model, concentrateModel: Model, fertilizerUnitModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/fertilizer-unit/pump.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor for the PumpService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pumpModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe model for the Pump schema.\n\n\n                                                        \n                                                \n                                                \n                                                        concentrateModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe model for the Concentrate schema.\n\n\n                                                        \n                                                \n                                                \n                                                        fertilizerUnitModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe model for the FertilizerUnit schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateComposition\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateComposition(fertilizerUnit: FertilizerUnitDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Calculates the elemental composition and ionic balance of the solution\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerUnit\n                                            \n                                                            FertilizerUnitDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated fertilizer unit\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(fertilizerUnitId: string, createPumpDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Creates a new pump and associates it with a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerUnitId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                        \n                                                createPumpDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing pump details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created pump.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(fertilizerUnitId: string, pumpId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.service.ts:165\n                        \n                    \n\n\n            \n                \n                        Deletes a specific pump from a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerUnitId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                        \n                                                pumpId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the pump to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The deleted pump.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(fertilizerUnitId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Finds all pumps within a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerUnitId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                An array of pumps.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(fertilizerUnitId: string, pumpId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Finds a specific pump within a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerUnitId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                        \n                                                pumpId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the pump to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found pump.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(fertilizerUnitId: string, pumpId: string, updatePumpDto: UpdatePumpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fertilizer-unit/pump.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Updates a specific pump within a fertilizer unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fertilizerUnitId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the fertilizer unit.\n\n\n                                            \n                                        \n                                        \n                                                pumpId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the pump to update.\n\n\n                                            \n                                        \n                                        \n                                                updatePumpDto\n                                            \n                                                            UpdatePumpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing updated pump details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated pump.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PumpService.name)\n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/pump.service.ts:26\n                        \n                    \n\n            \n                \n                    Logger instance.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { NotFoundException, BadRequestException } from '@nestjs/common';\nimport {\n  FertilizerUnit,\n  FertilizerUnitDocument,\n  Pump,\n  PumpDocument,\n} from 'src/schemas/fertilizer-unit.schema';\nimport { UpdatePumpDto } from './dto/update-pump.dto';\nimport {\n  Concentrate,\n  ConcentrateDocument,\n} from 'src/schemas/concentrate.schema';\n\n/**\n * Service class for managing pumps in a fertilizer unit.\n */\n@Injectable()\nexport class PumpService {\n  /**\n   * Logger instance.\n   */\n  private readonly logger = new Logger(PumpService.name);\n\n  /**\n   * Constructor for the PumpService class.\n   * @param pumpModel - The model for the Pump schema.\n   * @param concentrateModel - The model for the Concentrate schema.\n   * @param fertilizerUnitModel - The model for the FertilizerUnit schema.\n   * @returns An instance of the PumpService class.\n   */\n  constructor(\n    @InjectModel(Pump.name)\n    private readonly pumpModel: Model,\n    @InjectModel(Concentrate.name)\n    private readonly concentrateModel: Model,\n    @InjectModel(FertilizerUnit.name)\n    private readonly fertilizerUnitModel: Model,\n  ) {}\n\n  /**\n   * Creates a new pump and associates it with a fertilizer unit.\n   * @param fertilizerUnitId - The ID of the fertilizer unit.\n   * @param createPumpDto - The data transfer object containing pump details.\n   * @returns The newly created pump.\n   * @throws NotFoundException if the fertilizer unit is not found.\n   * @throws BadRequestException if there is an error during creation.\n   */\n  async create(fertilizerUnitId: string, createPumpDto: any): Promise {\n    try {\n      this.logger.debug(`Finding fertilizer unit with ID: ${fertilizerUnitId}`);\n      const fertilizerUnit: FertilizerUnitDocument =\n        await this.fertilizerUnitModel.findById(fertilizerUnitId);\n      if (!fertilizerUnit) {\n        throw new NotFoundException('Fertilizer unit not found');\n      }\n      this.logger.debug(\n        `Fertilizer unit found: ${JSON.stringify(fertilizerUnit)}`,\n      );\n      const newPump: PumpDocument = await this.pumpModel.create(createPumpDto);\n      this.logger.debug(`New pump created: ${JSON.stringify(newPump)}`);\n      fertilizerUnit.pumps.push(newPump);\n      await fertilizerUnit.save();\n      return newPump;\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  /**\n   * Finds a specific pump within a fertilizer unit.\n   * @param fertilizerUnitId - The ID of the fertilizer unit.\n   * @param pumpId - The ID of the pump to find.\n   * @returns The found pump.\n   * @throws NotFoundException if the fertilizer unit or pump is not found.\n   * @throws BadRequestException if there is an error during the search.\n   */\n  async findOne(fertilizerUnitId: string, pumpId: string): Promise {\n    try {\n      const fertilizerUnit: FertilizerUnitDocument =\n        await this.fertilizerUnitModel.findById(fertilizerUnitId);\n      if (!fertilizerUnit) {\n        throw new NotFoundException('Fertilizer unit not found');\n      }\n      const pump: Pump = fertilizerUnit.pumps.find(\n        (p) => p._id.toString() === pumpId,\n      );\n      if (!pump) {\n        throw new NotFoundException('Pump not found');\n      }\n      return pump;\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  /**\n   * Finds all pumps within a fertilizer unit.\n   * @param fertilizerUnitId - The ID of the fertilizer unit.\n   * @returns An array of pumps.\n   * @throws NotFoundException if the fertilizer unit is not found.\n   * @throws BadRequestException if there is an error during the search.\n   */\n  async findAll(fertilizerUnitId: string): Promise {\n    try {\n      const fertilizerUnit =\n        await this.fertilizerUnitModel.findById(fertilizerUnitId);\n      if (!fertilizerUnit) {\n        throw new NotFoundException('Fertilizer unit not found');\n      }\n      return fertilizerUnit.pumps;\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  /**\n   * Updates a specific pump within a fertilizer unit.\n   * @param fertilizerUnitId - The ID of the fertilizer unit.\n   * @param pumpId - The ID of the pump to update.\n   * @param updatePumpDto - The data transfer object containing updated pump details.\n   * @returns The updated pump.\n   * @throws NotFoundException if the fertilizer unit or pump is not found.\n   * @throws BadRequestException if there is an error during the update.\n   */\n  async update(\n    fertilizerUnitId: string,\n    pumpId: string,\n    updatePumpDto: UpdatePumpDto,\n  ): Promise {\n    try {\n      const fertilizerUnit =\n        await this.fertilizerUnitModel.findById(fertilizerUnitId);\n      if (!fertilizerUnit) {\n        throw new NotFoundException('Fertilizer unit not found');\n      }\n      const pump = fertilizerUnit.pumps.find(\n        (p) => p._id.toString() === pumpId,\n      );\n      if (!pump) {\n        throw new NotFoundException('Pump not found');\n      }\n      Object.keys(updatePumpDto).forEach((key) => {\n        pump[key] = updatePumpDto[key];\n      });\n      await fertilizerUnit.save();\n      await this.calculateComposition(fertilizerUnit);\n      return pump;\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  /**\n   * Deletes a specific pump from a fertilizer unit.\n   * @param fertilizerUnitId - The ID of the fertilizer unit.\n   * @param pumpId - The ID of the pump to delete.\n   * @returns The deleted pump.\n   * @throws NotFoundException if the fertilizer unit or pump is not found.\n   * @throws BadRequestException if there is an error during deletion.\n   */\n  async delete(fertilizerUnitId: string, pumpId: string): Promise {\n    try {\n      const fertilizerUnit =\n        await this.fertilizerUnitModel.findById(fertilizerUnitId);\n      if (!fertilizerUnit) {\n        throw new NotFoundException('Fertilizer unit not found');\n      }\n      const pumpIndex = fertilizerUnit.pumps.findIndex(\n        (p) => p._id.toString() === pumpId,\n      );\n      if (pumpIndex === -1) {\n        throw new NotFoundException('Pump not found');\n      }\n      const pump = fertilizerUnit.pumps[pumpIndex];\n      fertilizerUnit.pumps.splice(pumpIndex, 1);\n      await fertilizerUnit.save();\n      return pump;\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  /**\n   * Calculates the elemental composition and ionic balance of the solution\n   * @param fertilizerUnit\n   * @returns The updated fertilizer unit\n   * @throws NotFoundException if a concentrate is not found\n   */\n\n  async calculateComposition(\n    fertilizerUnit: FertilizerUnitDocument,\n  ): Promise {\n    let kationes = 0;\n    let aniones = 0;\n    const elements = await Promise.all(\n      fertilizerUnit.pumps.map(async (pump: Pump) => {\n        const concentrate: ConcentrateDocument = await this.concentrateModel\n          .findById(pump.concentrate)\n          .exec();\n        if (!concentrate) {\n          throw new NotFoundException('Concentrate not found');\n        }\n        kationes += concentrate.kationes * pump.flowRate * pump.factor * 10;\n        aniones += concentrate.aniones * pump.flowRate * pump.factor;\n        return concentrate.content.map((element) => {\n          return {\n            element: element.element,\n            concentration:\n              element.concentration * pump.flowRate * pump.factor * 10,\n          };\n        });\n      }),\n    ).then((concentrates) => concentrates.flat());\n\n    elements.reduce((acc, curr) => {\n      const existing = acc.find((item) => item.element === curr.element);\n      if (existing) {\n        existing.concentration += curr.concentration;\n      } else {\n        acc.push(curr);\n      }\n      return acc;\n    }, []);\n\n    fertilizerUnit.solution.kationes = kationes;\n    fertilizerUnit.solution.aniones = aniones;\n\n    fertilizerUnit.solution.elements = elements;\n    return fertilizerUnit.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Recipe.html":{"url":"classes/Recipe.html","title":"class - Recipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Recipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/recipe.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                B\n                            \n                            \n                                    \n                                Ca\n                            \n                            \n                                    \n                                Cu\n                            \n                            \n                                    \n                                Fe\n                            \n                            \n                                    \n                                K\n                            \n                            \n                                    \n                                Mg\n                            \n                            \n                                    \n                                Mn\n                            \n                            \n                                    \n                                N\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                P\n                            \n                            \n                                    \n                                S\n                            \n                            \n                                    \n                                Zn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        B\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Ca\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Cu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Fe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        K\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Mg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Mn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        N\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        P\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        S\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Zn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/recipe.schema.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class Recipe {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ type: Number })\n  N: number;\n\n  @Prop({ type: Number })\n  P: number;\n\n  @Prop({ type: Number })\n  K: number;\n\n  @Prop({ type: Number })\n  Ca: number;\n\n  @Prop({ type: Number })\n  Mg: number;\n\n  @Prop({ type: Number })\n  S: number;\n\n  @Prop({ type: Number })\n  Fe: number;\n\n  @Prop({ type: Number })\n  Mn: number;\n\n  @Prop({ type: Number })\n  Zn: number;\n\n  @Prop({ type: Number })\n  Cu: number;\n\n  @Prop({ type: Number })\n  B: number;\n}\n\nexport const RecipeSchema = SchemaFactory.createForClass(Recipe);\nexport type RecipeDocument = Recipe & Document;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RecipeController.html":{"url":"controllers/RecipeController.html","title":"controller - RecipeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RecipeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/recipe/recipe.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                recipes\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing recipes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createRecipe\n                            \n                            \n                                    \n                                    Async\n                                deleteRecipe\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createRecipe\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRecipe(createRecipeDto: CreateRecipeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/recipe/recipe.controller.ts:36\n                        \n                    \n\n\n            \n                \n                        Creates a new recipe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createRecipeDto\n                                            \n                                                            CreateRecipeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing recipe details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The newly created recipe.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRecipe(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/recipe/recipe.controller.ts:99\n                        \n                    \n\n\n            \n                \n                        Deletes a recipe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the recipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The deleted recipe.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/recipe/recipe.controller.ts:50\n                        \n                    \n\n\n            \n                \n                        Finds all recipes.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An array of all recipes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/recipe/recipe.controller.ts:65\n                        \n                    \n\n\n            \n                \n                        Finds a single recipe by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the recipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The recipe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRecipe(id: string, updateRecipeDto: UpdateRecipeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/recipe/recipe.controller.ts:81\n                        \n                    \n\n\n            \n                \n                        Updates a recipe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the recipe.\n\n\n                                            \n                                        \n                                        \n                                                updateRecipeDto\n                                            \n                                                            UpdateRecipeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing updated recipe details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The updated recipe.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  Body,\n  Patch,\n} from '@nestjs/common';\nimport { RecipeService } from './recipe.service';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport { UpdateRecipeDto } from './dto/update-recipe.dto';\nimport { CreateRecipeDto } from './dto/create-recipe.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller class for managing recipes.\n */\n@ApiTags('Recipes')\n@Controller('recipes')\nexport class RecipeController {\n  /**\n   * Constructor for the RecipeController class.\n   * @param recipeService - The service class for managing recipes.\n   * @returns An instance of the RecipeController class.\n   */\n  constructor(private readonly recipeService: RecipeService) {}\n\n  /**\n   * Creates a new recipe.\n   * @param createRecipeDto - The data transfer object containing recipe details.\n   * @returns The newly created recipe.\n   * @throws BadRequestException if the recipe is not found.\n   */\n  @Post()\n  async createRecipe(@Body() createRecipeDto: CreateRecipeDto) {\n    try {\n      return await this.recipeService.createRecipe(createRecipeDto);\n    } catch {\n      throw new HttpException('Error creating recipe', HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Finds all recipes.\n   * @returns An array of all recipes.\n   * @throws BadRequestException if the recipes are not found.\n   */\n  @Get()\n  async findAll() {\n    try {\n      return await this.recipeService.findAll();\n    } catch {\n      throw new HttpException('Error fetching recipes', HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Finds a single recipe by ID.\n   * @param id - The ID of the recipe.\n   * @returns The recipe\n   * @throws BadRequestException if the recipe is not found.\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    try {\n      return await this.recipeService.findOne(id);\n    } catch {\n      throw new HttpException('Recipe not found', HttpStatus.NOT_FOUND);\n    }\n  }\n\n  /**\n   * Updates a recipe.\n   * @param id - The ID of the recipe.\n   * @param updateRecipeDto - The data transfer object containing updated recipe details.\n   * @returns The updated recipe.\n   * @throws BadRequestException if the recipe is not updated.\n   */\n  @Patch(':id')\n  async updateRecipe(\n    @Param('id') id: string,\n    @Body() updateRecipeDto: UpdateRecipeDto,\n  ) {\n    try {\n      return await this.recipeService.updateRecipe(id, updateRecipeDto);\n    } catch {\n      throw new HttpException('Error updating recipe', HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Deletes a recipe.\n   * @param id - The ID of the recipe.\n   * @returns The deleted recipe.\n   * @throws BadRequestException if the recipe is not deleted.\n   */\n  @Delete(':id')\n  async deleteRecipe(@Param('id') id: string) {\n    try {\n      return await this.recipeService.deleteRecipe(id);\n    } catch {\n      throw new HttpException('Error deleting recipe', HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecipeModule.html":{"url":"modules/RecipeModule.html","title":"module - RecipeModule","body":"\n                   \n\n\n\n\n    Modules\n    RecipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RecipeModule\n\n\n\ncluster_RecipeModule_imports\n\n\n\ncluster_RecipeModule_providers\n\n\n\n\nSchemasModule\n\nSchemasModule\n\n\n\nRecipeModule\n\nRecipeModule\n\nRecipeModule -->\n\nSchemasModule->RecipeModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeModule -->\n\nRecipeService->RecipeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/recipe/recipe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RecipeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RecipeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SchemasModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RecipeService } from './recipe.service';\nimport { RecipeController } from './recipe.controller';\nimport { SchemasModule } from 'src/schemas/schemas.module';\n\n@Module({\n  imports: [SchemasModule],\n  controllers: [RecipeController],\n  providers: [RecipeService],\n})\nexport class RecipeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecipeService.html":{"url":"injectables/RecipeService.html","title":"injectable - RecipeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/recipe/recipe.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for managing recipes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRecipe\n                            \n                            \n                                    Async\n                                deleteRecipe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/recipe/recipe.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the RecipeService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        recipeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe model for the Recipe schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createRecipe\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRecipe(createRecipeDto: CreateRecipeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/recipe/recipe.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Creates a new recipe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createRecipeDto\n                                            \n                                                            CreateRecipeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing recipe details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created recipe.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRecipe(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/recipe/recipe.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Deletes a recipe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the recipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The deleted recipe.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/recipe/recipe.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Finds all recipes.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                An array of all recipes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/recipe/recipe.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Finds a recipe by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the recipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The recipe with the specified ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRecipe(id: string, updateRecipeDto: UpdateRecipeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/recipe/recipe.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Updates a recipe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the recipe.\n\n\n                                            \n                                        \n                                        \n                                                updateRecipeDto\n                                            \n                                                            UpdateRecipeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated recipe details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated recipe.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Recipe } from 'src/schemas/recipe.schema';\nimport { UpdateRecipeDto } from './dto/update-recipe.dto';\nimport { CreateRecipeDto } from './dto/create-recipe.dto';\n\n/**\n * Service class for managing recipes.\n */\n@Injectable()\nexport class RecipeService {\n  /**\n   * Constructor for the RecipeService class.\n   * @param recipeModel - The model for the Recipe schema.\n   * @returns An instance of the RecipeService class.\n   */\n  constructor(\n    @InjectModel(Recipe.name) private readonly recipeModel: Model,\n  ) {}\n\n  /**\n   * Creates a new recipe.\n   * @param createRecipeDto - The data transfer object containing recipe details.\n   * @returns The newly created recipe.\n   */\n  async createRecipe(createRecipeDto: CreateRecipeDto): Promise {\n    try {\n      const createdRecipe = new this.recipeModel(createRecipeDto);\n      return await createdRecipe.save();\n    } catch (error) {\n      throw new Error(`Error creating recipe: ${error.message}`);\n    }\n  }\n\n  /**\n   * Finds all recipes.\n   * @returns An array of all recipes.\n   */\n  async findAll(): Promise {\n    try {\n      return await this.recipeModel.find().exec();\n    } catch (error) {\n      throw new Error(`Error finding recipes: ${error.message}`);\n    }\n  }\n\n  /**\n   * Finds a recipe by ID.\n   * @param id - The ID of the recipe.\n   * @returns The recipe with the specified ID.\n   */\n  async findOne(id: string): Promise {\n    try {\n      return await this.recipeModel.findById(id).exec();\n    } catch (error) {\n      throw new Error(`Error finding recipe with id ${id}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Updates a recipe.\n   * @param id - The ID of the recipe.\n   * @param updateRecipeDto - The data transfer object containing the updated recipe details.\n   * @returns The updated recipe.\n   */\n  async updateRecipe(\n    id: string,\n    updateRecipeDto: UpdateRecipeDto,\n  ): Promise {\n    try {\n      return await this.recipeModel\n        .findByIdAndUpdate(id, updateRecipeDto, { new: true })\n        .exec();\n    } catch (error) {\n      throw new Error(`Error updating recipe with id ${id}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Deletes a recipe.\n   * @param id - The ID of the recipe.\n   * @returns The deleted recipe.\n   */\n  async deleteRecipe(id: string): Promise {\n    try {\n      return await this.recipeModel.findByIdAndDelete(id).exec();\n    } catch (error) {\n      throw new Error(`Error deleting recipe with id ${id}: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchemasModule.html":{"url":"modules/SchemasModule.html","title":"module - SchemasModule","body":"\n                   \n\n\n\n\n    Modules\n    SchemasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchemasModule\n\n\n\ncluster_SchemasModule_exports\n\n\n\n\nConcentrate \n\nConcentrate \n\n\n\nElement \n\nElement \n\n\n\nFertilizer \n\nFertilizer \n\n\n\nFertilizerUnit \n\nFertilizerUnit \n\n\n\nIon \n\nIon \n\n\n\nPump \n\nPump \n\n\n\nRecipe \n\nRecipe \n\n\n\nWater \n\nWater \n\n\n\nSchemasModule\n\nSchemasModule\n\nConcentrate  -->\n\nSchemasModule->Concentrate \n\n\n\nElement  -->\n\nSchemasModule->Element \n\n\n\nFertilizer  -->\n\nSchemasModule->Fertilizer \n\n\n\nFertilizerUnit  -->\n\nSchemasModule->FertilizerUnit \n\n\n\nIon  -->\n\nSchemasModule->Ion \n\n\n\nPump  -->\n\nSchemasModule->Pump \n\n\n\nRecipe  -->\n\nSchemasModule->Recipe \n\n\n\nWater  -->\n\nSchemasModule->Water \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/schemas/schemas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            Concentrate\n                        \n                        \n                            Element\n                        \n                        \n                            Fertilizer\n                        \n                        \n                            FertilizerUnit\n                        \n                        \n                            Ion\n                        \n                        \n                            Pump\n                        \n                        \n                            Recipe\n                        \n                        \n                            Water\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  FertilizerUnit,\n  FertilizerUnitSchema,\n  Pump,\n  PumpSchema,\n} from './fertilizer-unit.schema';\nimport { Element, ElementSchema } from './element.schema';\nimport { Fertilizer, FertilizerSchema } from './fertilizer.schema';\nimport { Recipe, RecipeSchema } from './recipe.schema';\nimport { Water, WaterSchema } from './water.schema';\nimport { Concentrate, ConcentrateSchema } from './concentrate.schema';\nimport { Ion, IonSchema } from './ion.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot('mongodb://ddweed.org/SurinAgro'),\n    MongooseModule.forFeature([\n      { name: FertilizerUnit.name, schema: FertilizerUnitSchema },\n      { name: Pump.name, schema: PumpSchema },\n      { name: Water.name, schema: WaterSchema },\n      { name: Recipe.name, schema: RecipeSchema },\n      { name: Fertilizer.name, schema: FertilizerSchema },\n      { name: Element.name, schema: ElementSchema },\n      { name: Concentrate.name, schema: ConcentrateSchema },\n      { name: Ion.name, schema: IonSchema },\n    ]),\n  ],\n  providers: [\n    Fertilizer,\n    Element,\n    Pump,\n    FertilizerUnit,\n    Water,\n    Recipe,\n    Concentrate,\n    Ion,\n  ],\n  exports: [\n    MongooseModule,\n    Fertilizer,\n    Element,\n    FertilizerUnit,\n    Pump,\n    Water,\n    Recipe,\n    Concentrate,\n    Ion,\n  ],\n})\nexport class SchemasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Solution.html":{"url":"classes/Solution.html","title":"class - Solution","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Solution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/fertilizer-unit.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                aniones\n                            \n                            \n                                    \n                                EC\n                            \n                            \n                                    \n                                elements\n                            \n                            \n                                    \n                                iones\n                            \n                            \n                                    \n                                kationes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aniones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        EC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined, _id: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        iones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        kationes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/fertilizer-unit.schema.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { Ion } from './ion.schema';\n\n@Schema()\nexport class Pump {\n  _id: Types.ObjectId;\n\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ required: true })\n  minFlowRate: number; // %\n\n  @Prop({ required: true })\n  maxFlowRate: number; // %\n\n  @Prop({ type: Types.ObjectId, ref: 'Concentrate' })\n  concentrate: Types.ObjectId;\n\n  @Prop({ required: true })\n  flowRate: number; // %\n\n  @Prop({ required: true })\n  factor: number;\n}\nexport const PumpSchema = SchemaFactory.createForClass(Pump);\nexport type PumpDocument = Pump & Document;\n\n@Schema()\nexport class Solution {\n  @Prop({ type: [{ type: Object }], default: [], _id: false })\n  elements: Record[];\n\n  @Prop({ type: Object, default: { kationes: [], aniones: [] } })\n  iones: { kationes: Ion[]; aniones: Ion[] };\n\n  @Prop()\n  kationes: number;\n\n  @Prop()\n  aniones: number;\n\n  @Prop()\n  EC: number;\n}\nexport const SolutionSchema = SchemaFactory.createForClass(Solution);\nexport type SolutionDocument = Solution & Document;\n\n@Schema()\nexport class FertilizerUnit {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: Types.ObjectId, ref: 'Water' })\n  water: Types.ObjectId;\n\n  @Prop({ type: Types.ObjectId, ref: 'Recipe' })\n  recipe: Types.ObjectId;\n\n  @Prop({ type: [PumpSchema], default: [] })\n  pumps: Pump[];\n\n  @Prop({ type: SolutionSchema, default: {}, _id: false })\n  solution: Solution;\n}\n\nexport const FertilizerUnitSchema =\n  SchemaFactory.createForClass(FertilizerUnit);\nexport type FertilizerUnitDocument = FertilizerUnit & Document;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateConcentrateDto.html":{"url":"classes/UpdateConcentrateDto.html","title":"class - UpdateConcentrateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateConcentrateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/concentrate/dto/update-concentrate.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for updating a concentrate.\n\n            \n\n            \n                Extends\n            \n            \n                        PartialType(CreateConcentrateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateConcentrateDto } from './create-concentrate.dto';\n\n/**\n * Data transfer object for updating a concentrate.\n */\nexport class UpdateConcentrateDto extends PartialType(CreateConcentrateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElementDto.html":{"url":"classes/UpdateElementDto.html","title":"class - UpdateElementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer/dto/update-element.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                concentration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        concentration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Optional()@Min(0)@Max(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer/dto/update-element.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Optional } from '@nestjs/common';\nimport { IsNumber, Max, Min } from 'class-validator';\n\nexport class UpdateElementDto {\n  @IsNumber()\n  @Optional()\n  @Min(0)\n  @Max(100)\n  concentration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElementDto-1.html":{"url":"classes/UpdateElementDto-1.html","title":"class - UpdateElementDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/water/dto/update-element.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateElementDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateElementDto } from './create-element.dto';\n\nexport class UpdateElementDto extends PartialType(CreateElementDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFertilizerDto.html":{"url":"classes/UpdateFertilizerDto.html","title":"class - UpdateFertilizerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFertilizerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/concentrate/dto/update-fertilizer.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for updating a fertilizer.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                concentration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        concentration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The new concentration', type: Number, example: 150})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/concentrate/dto/update-fertilizer.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data transfer object for updating a fertilizer.\n */\nexport class UpdateFertilizerDto {\n  @ApiProperty({\n    description: 'The new concentration',\n    type: Number,\n    example: 150,\n  })\n  @Prop({ required: true })\n  concentration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFertilizerDto-1.html":{"url":"classes/UpdateFertilizerDto-1.html","title":"class - UpdateFertilizerDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFertilizerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer/dto/update-fertilizer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFertilizerDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFertilizerDto } from './create-fertilizer.dto';\n\nexport class UpdateFertilizerDto extends PartialType(CreateFertilizerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFertilizerUnitDto.html":{"url":"classes/UpdateFertilizerUnitDto.html","title":"class - UpdateFertilizerUnitDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFertilizerUnitDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer-unit/dto/update-fertilizer-unit.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  CreateFertilizerUnitDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFertilizerUnitDto } from './create-fertilizer-unit.dto';\n\nexport class UpdateFertilizerUnitDto extends PartialType(\n  CreateFertilizerUnitDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePumpDto.html":{"url":"classes/UpdatePumpDto.html","title":"class - UpdatePumpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePumpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fertilizer-unit/dto/update-pump.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for updating a pump.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                concentrate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                factor\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                flowRate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                maxFlowRate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                minFlowRate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        concentrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The concentrate of the pump.', type: String})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/update-pump.dto.ts:50\n                        \n                    \n\n            \n                \n                    The concentrate of the pump.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the pump.', type: String})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/update-pump.dto.ts:17\n                        \n                    \n\n            \n                \n                    The name of the pump.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        factor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The factor of the pump.', type: Number})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/update-pump.dto.ts:72\n                        \n                    \n\n            \n                \n                    The factor of the pump.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        flowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The flow rate of the pump.', type: Number})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/update-pump.dto.ts:61\n                        \n                    \n\n            \n                \n                    The flow rate of the pump.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        maxFlowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The maximum flow rate of the pump.', type: Number})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/update-pump.dto.ts:39\n                        \n                    \n\n            \n                \n                    The maximum flow rate of the pump.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        minFlowRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The minimum flow rate of the pump.', type: Number})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fertilizer-unit/dto/update-pump.dto.ts:28\n                        \n                    \n\n            \n                \n                    The minimum flow rate of the pump.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\n\n/**\n * Data transfer object for updating a pump.\n */\nexport class UpdatePumpDto {\n  /**\n   * The name of the pump.\n   */\n  @ApiProperty({\n    description: 'The name of the pump.',\n    type: String,\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  /**\n   * The minimum flow rate of the pump.\n   */\n  @ApiProperty({\n    description: 'The minimum flow rate of the pump.',\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  minFlowRate?: number;\n\n  /**\n   * The maximum flow rate of the pump.\n   */\n  @ApiProperty({\n    description: 'The maximum flow rate of the pump.',\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  maxFlowRate?: number;\n\n  /**\n   * The concentrate of the pump.\n   */\n  @ApiProperty({\n    description: 'The concentrate of the pump.',\n    type: String,\n  })\n  @IsString()\n  @IsOptional()\n  concentrate?: string;\n\n  /**\n   * The flow rate of the pump.\n   */\n  @ApiProperty({\n    description: 'The flow rate of the pump.',\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  flowRate?: number;\n\n  /**\n   * The factor of the pump.\n   */\n  @ApiProperty({\n    description: 'The factor of the pump.',\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  factor?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRecipeDto.html":{"url":"classes/UpdateRecipeDto.html","title":"class - UpdateRecipeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRecipeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/recipe/dto/update-recipe.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRecipeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRecipeDto } from './create-recipe.dto';\n\nexport class UpdateRecipeDto extends PartialType(CreateRecipeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWaterDto.html":{"url":"classes/UpdateWaterDto.html","title":"class - UpdateWaterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWaterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/water/dto/update-water.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateWaterDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateWaterDto } from './create-water.dto';\n\nexport class UpdateWaterDto extends PartialType(CreateWaterDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Water.html":{"url":"classes/Water.html","title":"class - Water","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Water\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/water.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                EC\n                            \n                            \n                                    \n                                elements\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                pH\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/water.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/water.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        EC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/water.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Element[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/water.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/water.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/water.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Element, ElementSchema } from './element.schema';\n@Schema()\nexport class Water {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ required: true })\n  pH: number;\n\n  @Prop({ required: true })\n  EC: number;\n\n  @Prop({ type: [ElementSchema], default: [] })\n  elements: Element[];\n  @Prop({\n    type: [\n      {\n        element: { type: String, required: true },\n        concentration: { type: Number, required: true },\n      },\n    ],\n  })\n  content: { element: string; concentration: number }[];\n}\nexport const WaterSchema = SchemaFactory.createForClass(Water);\nexport type WaterDocument = Water & Document;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WaterController.html":{"url":"controllers/WaterController.html","title":"controller - WaterController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WaterController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/water/water.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                waters\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing water.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addElement\n                            \n                            \n                                    \n                                createWater\n                            \n                            \n                                    \n                                deleteWater\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                removeElement\n                            \n                            \n                                    \n                                updateElement\n                            \n                            \n                                    \n                                updateWater\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    addElement(id: string, element: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/elements')\n                \n            \n\n                    \n                        \n                            Defined in src/water/water.controller.ts:90\n                        \n                    \n\n\n            \n                \n                         Finds all elements in a water.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the water.\n\n\n                                            \n                                        \n                                        \n                                                element\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe element to add to the water.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of all elements in the water.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createWater\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWater(createWaterDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/water/water.controller.ts:35\n                        \n                    \n\n\n            \n                \n                        Creates a new water.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createWaterDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing water details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The newly created water.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteWater\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteWater(params: IdParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/water/water.controller.ts:78\n                        \n                    \n\n\n            \n                \n                        Deletes a water.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            IdParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deleted water.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/water/water.controller.ts:44\n                        \n                    \n\n\n            \n                \n                        Finds all water.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of all water.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(params: IdParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/water/water.controller.ts:54\n                        \n                    \n\n\n            \n                \n                        Finds a single water by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            IdParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The water\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeElement(id: string, elementId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/elements/:elementId')\n                \n            \n\n                    \n                        \n                            Defined in src/water/water.controller.ts:119\n                        \n                    \n\n\n            \n                \n                        Deletes an element from a water.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the water.\n\n\n                                            \n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the element.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deleted element.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateElement(id: string, elementId: string, updateElementDto: UpdateElementDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/elements/:elementId')\n                \n            \n\n                    \n                        \n                            Defined in src/water/water.controller.ts:103\n                        \n                    \n\n\n            \n                \n                        Finds a single element in a water by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the water.\n\n\n                                            \n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the element.\n\n\n                                            \n                                        \n                                        \n                                                updateElementDto\n                                            \n                                                            UpdateElementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The element\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateWater\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWater(params: IdParamDto, updateWaterDto: UpdateWaterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/water/water.controller.ts:65\n                        \n                    \n\n\n            \n                \n                        Updates a water.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            IdParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                updateWaterDto\n                                            \n                                                            UpdateWaterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing updated water details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated water.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  Body,\n  Patch,\n} from '@nestjs/common';\nimport { WaterService } from './water.service';\nimport { UpdateWaterDto } from './dto/update-water.dto';\nimport { IdParamDto } from 'src/shared/dto/idparam.dto';\nimport { UpdateElementDto } from './dto/update-element.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller class for managing water.\n */\n@ApiTags('Water')\n@Controller('waters')\nexport class WaterController {\n  /**\n   * Constructor for the WaterController class.\n   * @param waterService - The service class for managing water.\n   * @returns An instance of the WaterController class.\n   */\n  constructor(private readonly waterService: WaterService) {}\n\n  /**\n   * Creates a new water.\n   * @param createWaterDto - The data transfer object containing water details.\n   * @returns The newly created water.\n   */\n  @Post()\n  createWater(@Body() createWaterDto: any) {\n    return this.waterService.createWater(createWaterDto);\n  }\n\n  /**\n   * Finds all water.\n   * @returns An array of all water.\n   */\n  @Get()\n  findAll() {\n    return this.waterService.findAll();\n  }\n\n  /**\n   * Finds a single water by ID.\n   * @param id - The ID of the water.\n   * @returns The water\n   */\n  @Get(':id')\n  findOne(@Param() params: IdParamDto) {\n    return this.waterService.findOne(params.id);\n  }\n\n  /**\n   * Updates a water.\n   * @param id - The ID of the water.\n   * @param updateWaterDto - The data transfer object containing updated water details.\n   * @returns The updated water.\n   */\n  @Patch(':id')\n  updateWater(\n    @Param() params: IdParamDto,\n    @Body() updateWaterDto: UpdateWaterDto,\n  ) {\n    return this.waterService.updateWater(params.id, updateWaterDto);\n  }\n\n  /**\n   * Deletes a water.\n   * @param id - The ID of the water.\n   * @returns The deleted water.\n   */\n  @Delete(':id')\n  deleteWater(@Param() params: IdParamDto) {\n    return this.waterService.deleteWater(params.id);\n  }\n\n  /**\n   *  Finds all elements in a water.\n   * @param id - The ID of the water.\n   * @param element - The element to add to the water.\n   * @returns An array of all elements in the water.\n   * @throws NotFoundException if the water is not found.\n   */\n  @Post(':id/elements')\n  addElement(@Param('id') id: string, @Body() element: any) {\n    return this.waterService.addElement(id, element);\n  }\n\n  /**\n   * Finds a single element in a water by ID.\n   * @param id - The ID of the water.\n   * @param elementId - The ID of the element.\n   * @returns The element\n   * @throws NotFoundException if the element is not found.\n   * @throws BadRequestException if the element is not found.\n   */\n  @Patch(':id/elements/:elementId')\n  updateElement(\n    @Param('id') id: string,\n    @Param('elementId') elementId: string,\n    @Body() updateElementDto: UpdateElementDto,\n  ) {\n    return this.waterService.updateElement(id, elementId, updateElementDto);\n  }\n\n  /**\n   * Deletes an element from a water.\n   * @param id - The ID of the water.\n   * @param elementId - The ID of the element.\n   * @returns The deleted element.\n   * @throws NotFoundException if the element is not found.\n   */\n  @Delete(':id/elements/:elementId')\n  removeElement(\n    @Param('id') id: string,\n    @Param('elementId') elementId: string,\n  ) {\n    return this.waterService.removeElement(id, elementId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WaterModule.html":{"url":"modules/WaterModule.html","title":"module - WaterModule","body":"\n                   \n\n\n\n\n    Modules\n    WaterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WaterModule\n\n\n\ncluster_WaterModule_providers\n\n\n\ncluster_WaterModule_imports\n\n\n\n\nSchemasModule\n\nSchemasModule\n\n\n\nWaterModule\n\nWaterModule\n\nWaterModule -->\n\nSchemasModule->WaterModule\n\n\n\n\n\nWaterService\n\nWaterService\n\nWaterModule -->\n\nWaterService->WaterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/water/water.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WaterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WaterController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SchemasModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WaterService } from './water.service';\nimport { WaterController } from './water.controller';\nimport { SchemasModule } from 'src/schemas/schemas.module';\n\n@Module({\n  imports: [SchemasModule],\n  controllers: [WaterController],\n  providers: [WaterService],\n})\nexport class WaterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterService.html":{"url":"injectables/WaterService.html","title":"injectable - WaterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/water/water.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addElement\n                            \n                            \n                                    Async\n                                calculateComposition\n                            \n                            \n                                    Async\n                                createWater\n                            \n                            \n                                    Async\n                                deleteWater\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                removeElement\n                            \n                            \n                                    Async\n                                updateElement\n                            \n                            \n                                    Async\n                                updateWater\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(waterModel: Model, elementModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/water/water.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        waterModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    addElement(id: string, createElementDto: CreateElementDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createElementDto\n                                            \n                                                            CreateElementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateComposition\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateComposition(water: WaterDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                water\n                                            \n                                                            WaterDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createWater\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWater(createWaterDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWaterDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteWater\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteWater(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeElement(id: string, elementId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateElement(id: string, elementId: string, updateElementDto: UpdateElementDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateElementDto\n                                            \n                                                            UpdateElementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateWater\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWater(id: string, updateWaterDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/water/water.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWaterDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Water, WaterDocument } from '../schemas/water.schema';\nimport { UpdateElementDto } from './dto/update-element.dto';\nimport { Element, ElementDocument } from 'src/schemas/element.schema';\nimport { CreateElementDto } from './dto/create-element.dto';\nimport { baseElement } from 'src/shared/types/baseElement';\nimport { elementBase } from 'src/shared/data/elementBase';\nimport { elementForm } from 'src/shared/types/elementForm';\n\n@Injectable()\nexport class WaterService {\n  constructor(\n    @InjectModel(Water.name) private readonly waterModel: Model,\n    @InjectModel(Element.name)\n    private readonly elementModel: Model,\n  ) {}\n\n  async createWater(createWaterDto: any): Promise {\n    const createdWater = new this.waterModel(createWaterDto);\n    return createdWater.save();\n  }\n\n  async findAll(): Promise {\n    return this.waterModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    return this.waterModel.findById(id).exec();\n  }\n\n  async updateWater(id: string, updateWaterDto: any): Promise {\n    return this.waterModel\n      .findByIdAndUpdate(id, updateWaterDto, { new: true })\n      .exec();\n  }\n\n  async deleteWater(id: string): Promise {\n    return this.waterModel.findByIdAndDelete(id).exec();\n  }\n\n  // Функции для манипуляции массивом elements\n\n  async addElement(\n    id: string,\n    createElementDto: CreateElementDto,\n  ): Promise {\n    const water = await this.waterModel.findById(id);\n    const element = new this.elementModel(createElementDto);\n    water.elements.push(element);\n    return water.save();\n  }\n\n  async updateElement(\n    id: string,\n    elementId: string,\n    updateElementDto: UpdateElementDto,\n  ): Promise {\n    const water = await this.waterModel.findById(id);\n    const element: Element = water.elements.find(\n      (el) => el._id.toString() === elementId,\n    );\n    if (element) {\n      element.concentration = updateElementDto.concentration;\n    }\n    return water.save().then((water) => {\n      return this.calculateComposition(water);\n    });\n  }\n\n  async removeElement(id: string, elementId: string): Promise {\n    const water = await this.waterModel.findById(id);\n    water.elements = water.elements.filter(\n      (el) => el._id.toString() !== elementId,\n    );\n    return water.save().then((water) => {\n      return this.calculateComposition(water);\n    });\n  }\n\n  async calculateComposition(water: WaterDocument): Promise {\n    try {\n      const content: { element: string; concentration: number }[] =\n        water.elements.map((element: Element) => {\n          const baseElement: baseElement = elementBase.find(\n            (el: baseElement) => el.name === element.name,\n          );\n          const baseForm: elementForm = baseElement.forms.find(\n            (el: elementForm) => el.symbol === element.form,\n          );\n          if (!baseElement) {\n            throw new NotFoundException(\n              `Base element for ${element.name} not found`,\n            );\n          }\n          if (!baseForm) {\n            throw new NotFoundException(\n              `Base form for ${element.form} not found`,\n            );\n          }\n          const concentration: number =\n            ((element.concentration * baseElement.mMass) / baseForm.mMass) * 10;\n          return {\n            element: baseElement.symbol,\n            concentration,\n          };\n        });\n      water.content = content;\n      return water.save();\n    } catch (error) {\n      throw new NotFoundException(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/baseElement.html":{"url":"classes/baseElement.html","title":"class - baseElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  baseElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/types/baseElement.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forms\n                            \n                            \n                                mMass\n                            \n                            \n                                name\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         elementForm[]\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/baseElement.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mMass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/baseElement.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/baseElement.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/baseElement.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { elementForm } from './elementForm';\n\nexport class baseElement {\n  name: string;\n  symbol: string;\n  mMass: number;\n  forms: elementForm[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/baseIon.html":{"url":"classes/baseIon.html","title":"class - baseIon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  baseIon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/types/baseIon.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charge\n                            \n                            \n                                conductivityCoefficient\n                            \n                            \n                                mMass\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        charge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/baseIon.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conductivityCoefficient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/baseIon.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mMass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/baseIon.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/baseIon.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class baseIon {\n  symbol: string;\n  charge: number;\n  mMass: number;\n  conductivityCoefficient: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/logger.middlewware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/concentrate/concentrate.controller.ts\n            \n            controller\n            ConcentrateController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/concentrate/concentrate.service.ts\n            \n            injectable\n            ConcentrateService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/concentrate/dto/add-fertilizer.dto.ts\n            \n            class\n            AddFertilizerDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/concentrate/dto/create-concentrate.dto.ts\n            \n            class\n            CreateConcentrateDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/concentrate/dto/update-concentrate.dto.ts\n            \n            class\n            UpdateConcentrateDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/concentrate/dto/update-fertilizer.dto.ts\n            \n            class\n            UpdateFertilizerDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/concentrate/fertilizer.controller.ts\n            \n            controller\n            FertilizerController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/concentrate/fertilizer.service.ts\n            \n            injectable\n            FertilizerService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/fertilizer-unit/dto/create-fertilizer-unit.dto.ts\n            \n            class\n            CreateFertilizerUnitDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/fertilizer-unit/dto/create-pump.dto.ts\n            \n            class\n            CreatePumpDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/fertilizer-unit/dto/update-fertilizer-unit.dto.ts\n            \n            class\n            UpdateFertilizerUnitDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fertilizer-unit/dto/update-pump.dto.ts\n            \n            class\n            UpdatePumpDto\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/fertilizer-unit/fertilizer-unit.controller.ts\n            \n            controller\n            FertilizerUnitController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/fertilizer-unit/fertilizer-unit.service.ts\n            \n            injectable\n            FertilizerUnitService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/fertilizer-unit/pump.controller.ts\n            \n            controller\n            PumpController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/fertilizer-unit/pump.service.ts\n            \n            injectable\n            PumpService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/fertilizer/dto/add-element.dto.ts\n            \n            class\n            AddElementDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/fertilizer/dto/create-fertilizer.dto.ts\n            \n            class\n            CreateFertilizerDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/fertilizer/dto/update-element.dto.ts\n            \n            class\n            UpdateElementDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/fertilizer/dto/update-fertilizer.dto.ts\n            \n            class\n            UpdateFertilizerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fertilizer/element.controller.ts\n            \n            controller\n            ElementController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/fertilizer/element.service.ts\n            \n            injectable\n            ElementService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/fertilizer/fertilizer.controller.ts\n            \n            controller\n            FertilizerController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/fertilizer/fertilizer.service.ts\n            \n            injectable\n            FertilizerService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/recipe/dto/create-recipe.dto.ts\n            \n            class\n            CreateRecipeDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/recipe/dto/update-recipe.dto.ts\n            \n            class\n            UpdateRecipeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/recipe/recipe.controller.ts\n            \n            controller\n            RecipeController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/recipe/recipe.service.ts\n            \n            injectable\n            RecipeService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/schemas/concentrate.schema.ts\n            \n            class\n            Concentrate\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/schemas/concentrate.schema.ts\n            \n            variable\n            ConcentrateSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/schemas/element.schema.ts\n            \n            class\n            Element\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/schemas/element.schema.ts\n            \n            variable\n            ElementSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/fertilizer-unit.schema.ts\n            \n            class\n            FertilizerUnit\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/schemas/fertilizer-unit.schema.ts\n            \n            class\n            Pump\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/schemas/fertilizer-unit.schema.ts\n            \n            class\n            Solution\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/schemas/fertilizer-unit.schema.ts\n            \n            variable\n            FertilizerUnitSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/fertilizer-unit.schema.ts\n            \n            variable\n            PumpSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/fertilizer-unit.schema.ts\n            \n            variable\n            SolutionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/fertilizer.schema.ts\n            \n            class\n            Fertilizer\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/schemas/fertilizer.schema.ts\n            \n            variable\n            FertilizerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/ion.schema.ts\n            \n            class\n            Ion\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/schemas/ion.schema.ts\n            \n            variable\n            IonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/recipe.schema.ts\n            \n            class\n            Recipe\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/schemas/recipe.schema.ts\n            \n            variable\n            RecipeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/water.schema.ts\n            \n            class\n            Water\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/schemas/water.schema.ts\n            \n            variable\n            WaterSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/data/elementBase.ts\n            \n            variable\n            elementBase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/dto/idparam.dto.ts\n            \n            class\n            IdParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/types/baseElement.ts\n            \n            class\n            baseElement\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/types/baseIon.ts\n            \n            class\n            baseIon\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/types/elementForm.ts\n            \n            class\n            elementForm\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/types/solution.ts\n            \n            class\n            solution\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/types/solution.ts\n            \n            interface\n            IElement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/water/dto/create-element.dto.ts\n            \n            class\n            CreateElementDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/water/dto/create-water.dto.ts\n            \n            class\n            CreateWaterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/water/dto/update-element.dto.ts\n            \n            class\n            UpdateElementDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/water/dto/update-water.dto.ts\n            \n            class\n            UpdateWaterDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/water/water.controller.ts\n            \n            controller\n            WaterController\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/water/water.service.ts\n            \n            injectable\n            WaterService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/devtools-integration : ^0.1.6\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^10.0.10\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.4.4\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/websockets : ^10.4.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.5\n        \n            mongoose : ^8.6.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.8.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/elementForm.html":{"url":"classes/elementForm.html","title":"class - elementForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  elementForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/types/elementForm.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ione\n                            \n                            \n                                mMass\n                            \n                            \n                                name\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ione\n                        \n                    \n                \n            \n                \n                    \n                        Type :         baseIon\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/elementForm.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mMass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/elementForm.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/elementForm.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/elementForm.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { baseIon } from './baseIon';\n\nexport class elementForm {\n  name: string;\n  symbol: string;\n  mMass: number;\n  ione: baseIon;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FertilizerType   (src/.../create-fertilizer.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/fertilizer/dto/create-fertilizer.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        FertilizerType\n                    \n                \n                    \n                        \n                            The type of fertilizer.\n\n                        \n                    \n                        \n                            \n                                 SOLID\n                            \n                        \n                        \n                            \n                                Value : solid\n                            \n                        \n                        \n                            \n                                 LIQUID\n                            \n                        \n                        \n                            \n                                Value : liquid\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConcentrateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FertilizerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FertilizerUnitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchemasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WaterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ConcentrateModule\n\n\n\ncluster_ConcentrateModule_imports\n\n\n\ncluster_ConcentrateModule_exports\n\n\n\ncluster_ConcentrateModule_providers\n\n\n\ncluster_FertilizerModule\n\n\n\ncluster_FertilizerModule_exports\n\n\n\ncluster_FertilizerModule_providers\n\n\n\ncluster_FertilizerUnitModule\n\n\n\ncluster_FertilizerUnitModule_providers\n\n\n\ncluster_RecipeModule\n\n\n\ncluster_RecipeModule_providers\n\n\n\ncluster_SchemasModule\n\n\n\ncluster_SchemasModule_exports\n\n\n\ncluster_WaterModule\n\n\n\ncluster_WaterModule_providers\n\n\n\n\nConcentrateModule\n\nConcentrateModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConcentrateModule->AppModule\n\n\n\n\n\nConcentrateService \n\nConcentrateService \n\nConcentrateService  -->\n\nConcentrateModule->ConcentrateService \n\n\n\n\n\nFertilizerService \n\nFertilizerService \n\nFertilizerService  -->\n\nConcentrateModule->FertilizerService \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nConcentrateModule->Logger \n\n\n\n\n\nFertilizerModule\n\nFertilizerModule\n\nAppModule -->\n\nFertilizerModule->AppModule\n\n\n\nFertilizerService  -->\n\nFertilizerModule->FertilizerService \n\n\n\nLogger  -->\n\nFertilizerModule->Logger \n\n\n\n\n\nElementService \n\nElementService \n\nElementService  -->\n\nFertilizerModule->ElementService \n\n\n\n\n\nFertilizerUnitModule\n\nFertilizerUnitModule\n\nAppModule -->\n\nFertilizerUnitModule->AppModule\n\n\n\n\n\nRecipeModule\n\nRecipeModule\n\nAppModule -->\n\nRecipeModule->AppModule\n\n\n\n\n\nWaterModule\n\nWaterModule\n\nAppModule -->\n\nWaterModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nSchemasModule\n\nSchemasModule\n\nConcentrateModule -->\n\nSchemasModule->ConcentrateModule\n\n\n\nFertilizerModule -->\n\nSchemasModule->FertilizerModule\n\n\n\nFertilizerUnitModule -->\n\nSchemasModule->FertilizerUnitModule\n\n\n\nRecipeModule -->\n\nSchemasModule->RecipeModule\n\n\n\nWaterModule -->\n\nSchemasModule->WaterModule\n\n\n\n\n\nConcentrate \n\nConcentrate \n\nConcentrate  -->\n\nSchemasModule->Concentrate \n\n\n\n\n\nElement \n\nElement \n\nElement  -->\n\nSchemasModule->Element \n\n\n\n\n\nFertilizer \n\nFertilizer \n\nFertilizer  -->\n\nSchemasModule->Fertilizer \n\n\n\n\n\nFertilizerUnit \n\nFertilizerUnit \n\nFertilizerUnit  -->\n\nSchemasModule->FertilizerUnit \n\n\n\n\n\nIon \n\nIon \n\nIon  -->\n\nSchemasModule->Ion \n\n\n\n\n\nPump \n\nPump \n\nPump  -->\n\nSchemasModule->Pump \n\n\n\n\n\nRecipe \n\nRecipe \n\nRecipe  -->\n\nSchemasModule->Recipe \n\n\n\n\n\nWater \n\nWater \n\nWater  -->\n\nSchemasModule->Water \n\n\n\n\n\nConcentrateService\n\nConcentrateService\n\nConcentrateModule -->\n\nConcentrateService->ConcentrateModule\n\n\n\n\n\nFertilizerService\n\nFertilizerService\n\nConcentrateModule -->\n\nFertilizerService->ConcentrateModule\n\n\n\nFertilizerModule -->\n\nFertilizerService->FertilizerModule\n\n\n\n\n\nElementService\n\nElementService\n\nFertilizerModule -->\n\nElementService->FertilizerModule\n\n\n\n\n\nFertilizerUnitService\n\nFertilizerUnitService\n\nFertilizerUnitModule -->\n\nFertilizerUnitService->FertilizerUnitModule\n\n\n\n\n\nPumpService\n\nPumpService\n\nFertilizerUnitModule -->\n\nPumpService->FertilizerUnitModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeModule -->\n\nRecipeService->RecipeModule\n\n\n\n\n\nWaterService\n\nWaterService\n\nWaterModule -->\n\nWaterService->WaterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/solution.html":{"url":"classes/solution.html","title":"class - solution","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  solution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/types/solution.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aniones\n                            \n                            \n                                EC\n                            \n                            \n                                elements\n                            \n                            \n                                kationes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aniones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/solution.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/solution.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IElement[]\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/solution.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kationes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/types/solution.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IElement {\n  element: string;\n  concentration: number;\n}\nexport class solution {\n  elements: IElement[];\n  kationes: number; //сумма эквивалентов катионов\n  aniones: number; //сумма эквивалентов анионов\n  EC: number; //Прогнозируемая электропроводность раствора\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConcentrateDocument   (src/.../concentrate.schema.ts)\n                        \n                        \n                            ElementDocument   (src/.../element.schema.ts)\n                        \n                        \n                            FertilizerDocument   (src/.../fertilizer.schema.ts)\n                        \n                        \n                            FertilizerUnitDocument   (src/.../fertilizer-unit.schema.ts)\n                        \n                        \n                            IonDocument   (src/.../ion.schema.ts)\n                        \n                        \n                            PumpDocument   (src/.../fertilizer-unit.schema.ts)\n                        \n                        \n                            RecipeDocument   (src/.../recipe.schema.ts)\n                        \n                        \n                            SolutionDocument   (src/.../fertilizer-unit.schema.ts)\n                        \n                        \n                            WaterDocument   (src/.../water.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/concentrate.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ConcentrateDocument\n                \n            \n            \n                \n                    Concentrate document.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schemas/element.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ElementDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schemas/fertilizer.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FertilizerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schemas/fertilizer-unit.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FertilizerUnitDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PumpDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SolutionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schemas/ion.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IonDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schemas/recipe.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RecipeDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schemas/water.schema.ts\n    \n    \n        \n            \n                \n                    \n                    WaterDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConcentrateSchema   (src/.../concentrate.schema.ts)\n                        \n                        \n                            elementBase   (src/.../elementBase.ts)\n                        \n                        \n                            ElementSchema   (src/.../element.schema.ts)\n                        \n                        \n                            FertilizerSchema   (src/.../fertilizer.schema.ts)\n                        \n                        \n                            FertilizerUnitSchema   (src/.../fertilizer-unit.schema.ts)\n                        \n                        \n                            IonSchema   (src/.../ion.schema.ts)\n                        \n                        \n                            PumpSchema   (src/.../fertilizer-unit.schema.ts)\n                        \n                        \n                            RecipeSchema   (src/.../recipe.schema.ts)\n                        \n                        \n                            SolutionSchema   (src/.../fertilizer-unit.schema.ts)\n                        \n                        \n                            WaterSchema   (src/.../water.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/concentrate.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConcentrateSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Concentrate)\n                    \n                \n\n            \n                \n                    Concentrate schema.\n\n                \n            \n\n        \n    \n\n    src/shared/data/elementBase.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Nitrogen',\n    symbol: 'N',\n    mMass: 14,\n    forms: [\n      {\n        name: 'Nitrate',\n        symbol: 'NO3',\n        ione: {\n          symbol: 'NO3-',\n          charge: -1,\n          mMass: 62,\n          сonductivityCoefficient: 71.4, //Удельная проводимость ионов NO3- 71,4 см2/моль\n        },\n        mMass: 14,\n      },\n      {\n        name: 'Ammonium',\n        symbol: 'NH4',\n        ione: {\n          symbol: 'NH4+',\n          charge: 1,\n          mMass: 18,\n          сonductivityCoefficient: 73.4, //Удельная проводимость ионов NH4+ 73,4 см2/моль\n        },\n        mMass: 14,\n      },\n    ],\n  },\n  {\n    name: 'Phosphorus',\n    symbol: 'P',\n    mMass: 62,\n    forms: [\n      {\n        name: 'Phosphate',\n        symbol: 'P2O5',\n        ione: {\n          symbol: 'PO4-3',\n          charge: -3,\n          mMass: 95,\n          сonductivityCoefficient: 79.0, //Удельная проводимость ионов PO4-3 79,0 см2/моль\n        },\n        mMass: 142,\n      },\n    ],\n  },\n  {\n    name: 'Potassium',\n    symbol: 'K',\n    mMass: 39,\n    forms: [\n      {\n        name: 'Potassium Oxide',\n        symbol: 'K2O',\n        ione: {\n          symbol: 'K+',\n          charge: 1,\n          mMass: 39,\n          сonductivityCoefficient: 73.4, //Удельная проводимость ионов K+ 73,4 см2/моль\n        },\n        mMass: 94,\n      },\n      {\n        name: 'Potassium',\n        symbol: 'K',\n        ione: {\n          symbol: 'K+',\n          charge: 1,\n          mMass: 39,\n          сonductivityCoefficient: 73.4, //Удельная проводимость ионов K+ 73,4 см2/моль\n        },\n        mMass: 39,\n      },\n    ],\n  },\n  {\n    name: 'Calcium',\n    symbol: 'Ca',\n    mMass: 40,\n    forms: [\n      {\n        name: 'Calcium Oxide',\n        symbol: 'CaO',\n        ione: {\n          symbol: 'Ca+2',\n          charge: 2,\n          mMass: 40,\n          сonductivityCoefficient: 61.2, //Удельная проводимость ионов Ca+2 61,2 см2/моль\n        },\n        mMass: 56,\n      },\n      {\n        name: 'Calcium Chelate',\n        symbol: 'Ca',\n        ione: null,\n        charge: 0,\n        mMass: 40,\n      },\n    ],\n  },\n  {\n    name: 'Magnesium',\n    symbol: 'Mg',\n    mMass: 24,\n    forms: [\n      {\n        name: 'Magnesium Oxide',\n        symbol: 'MgO',\n        ione: {\n          symbol: 'Mg+2',\n          charge: 2,\n          mMass: 24,\n          сonductivityCoefficient: 53.0, //Удельная проводимость ионов Mg+2 53,0 см2/моль\n        },\n        mMass: 40,\n      },\n      {\n        name: 'Magnesium Chelate',\n        symbol: 'Mg',\n        ione: null,\n        mMass: 24,\n      },\n    ],\n  },\n  {\n    name: 'Sulfur',\n    symbol: 'S',\n    mMass: 32,\n    forms: [\n      {\n        name: 'Sulfate',\n        symbol: 'SO4',\n        ione: {\n          symbol: 'SO4-2',\n          charge: -2,\n          mMass: 96,\n          сonductivityCoefficient: 79.0, //Удельная проводимость ионов SO4-2 79,0 см2/моль\n        },\n        mMass: 96,\n      },\n    ],\n  },\n  {\n    name: 'Iron',\n    symbol: 'Fe',\n    mMass: 56,\n    forms: [\n      {\n        name: 'Iron Oxide',\n        symbol: 'Fe2O3',\n        ione: {\n          symbol: 'Fe+3',\n          charge: 3,\n          mMass: 56,\n          сonductivityCoefficient: 61.2, //Удельная проводимость ионов Fe+3 61,2 см2/моль\n        },\n        mMass: 160,\n      },\n      {\n        name: 'Iron Chelate',\n        symbol: 'Fe',\n        ione: null,\n        charge: 0,\n        mMass: 56,\n      },\n    ],\n  },\n  {\n    name: 'Manganese',\n    symbol: 'Mn',\n    mMass: 55,\n    forms: [\n      {\n        name: 'Manganese Oxide',\n        symbol: 'MnO',\n        ione: {\n          symbol: 'Mn+2',\n          charge: 2,\n          mMass: 55,\n          сonductivityCoefficient: 53.0, //Удельная проводимость ионов Mn+2 53,0 см2/моль\n        },\n        mMass: 71,\n      },\n      {\n        name: 'Manganese Chelate',\n        symbol: 'Mn',\n        ione: null,\n        charge: 0,\n        mMass: 55,\n      },\n    ],\n  },\n  {\n    name: 'Zinc',\n    symbol: 'Zn',\n    mMass: 65,\n    forms: [\n      {\n        name: 'Zinc Oxide',\n        symbol: 'ZnO',\n        ione: {\n          symbol: 'Zn+2',\n          charge: 2,\n          mMass: 65,\n          сonductivityCoefficient: 61.2, //Удельная проводимость ионов Zn+2 61,2 см2/моль\n        },\n        mMass: 81,\n      },\n      {\n        name: 'Zinc Chelate',\n        symbol: 'Zn',\n        ione: null,\n        charge: 0,\n        mMass: 65,\n      },\n    ],\n  },\n  {\n    name: 'Copper',\n    symbol: 'Cu',\n    mMass: 63,\n    forms: [\n      {\n        name: 'Copper Oxide',\n        symbol: 'CuO',\n        ione: {\n          symbol: 'Cu+2',\n          charge: 2,\n          mMass: 63,\n          сonductivityCoefficient: 61.2, //Удельная проводимость ионов Cu+2 61,2 см2/моль\n        },\n        mMass: 79,\n      },\n      {\n        name: 'Copper Chelate',\n        symbol: 'Cu',\n        ione: null,\n        mMass: 63,\n      },\n    ],\n  },\n  {\n    name: 'Boron',\n    symbol: 'B',\n    mMass: 11,\n    forms: [\n      {\n        name: 'Boric Acid',\n        symbol: 'H3BO3',\n        ione: null,\n        mMass: 61,\n      },\n      {\n        name: 'Boron',\n        symbol: 'B',\n        ione: null,\n        mMass: 11,\n      },\n    ],\n  },\n  {\n    name: 'Molybdenum',\n    symbol: 'Mo',\n    mMass: 96,\n    forms: [\n      {\n        name: 'Molybdenum Chelate',\n        symbol: 'Mo',\n        ione: null,\n        charge: 6,\n        mMass: 96,\n      },\n    ],\n  },\n  {\n    name: 'Nickel',\n    symbol: 'Ni',\n    mMass: 59,\n    forms: [\n      {\n        name: 'Nickel',\n        symbol: 'Ni',\n        ione: 'Ni+2',\n        charge: 2,\n        mMass: 59,\n      },\n    ],\n  },\n  {\n    name: 'Cobalt',\n    symbol: 'Co',\n    mMass: 59,\n    forms: [\n      {\n        name: 'Cobalt',\n        symbol: 'Co',\n        ione: 'Co+2',\n        charge: 2,\n        mMass: 59,\n      },\n    ],\n  },\n  {\n    name: 'Sodium',\n    symbol: 'Na',\n    mMass: 23,\n    forms: [\n      {\n        name: 'Sodium',\n        symbol: 'Na',\n        ione: 'Na+',\n        charge: 1,\n        mMass: 23,\n      },\n    ],\n  },\n  {\n    name: 'Silicon',\n    symbol: 'Si',\n    mMass: 28,\n    forms: [\n      {\n        name: 'Silicon',\n        symbol: 'Si',\n        ione: 'Si+4',\n        charge: 4,\n        mMass: 28,\n      },\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/schemas/element.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ElementSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Element)\n                    \n                \n\n\n        \n    \n\n    src/schemas/fertilizer.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FertilizerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Fertilizer)\n                    \n                \n\n\n        \n    \n\n    src/schemas/fertilizer-unit.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FertilizerUnitSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FertilizerUnit)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PumpSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Pump)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SolutionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Solution)\n                    \n                \n\n\n        \n    \n\n    src/schemas/ion.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IonSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Ion)\n                    \n                \n\n\n        \n    \n\n    src/schemas/recipe.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RecipeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Recipe)\n                    \n                \n\n\n        \n    \n\n    src/schemas/water.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WaterSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Water)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
